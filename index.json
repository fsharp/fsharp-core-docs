[{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections.html","title":"FSharp.Collections","content":"Array \nArray2D \nArray3D \nArray4D \nComparisonIdentity \nHashIdentity \nList \nMap \nSeq \nSet \nList \nMap\u003C\u0027Key, \u0027Value\u003E \nSet\u003C\u0027T\u003E \nSet \n\u0027T list \n\u0027T seq","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control.html","title":"FSharp.Control","content":"AsyncPrimitives \nCommonExtensions \nEvent \nLazyExtensions \nObservable \nTaskBuilder \nWebExtensions \nAsync\u003C\u0027T\u003E \nAsync \nAsyncActivation\u003C\u0027T\u003E \nAsyncBuilder \nAsyncReplyChannel\u003C\u0027Reply\u003E \nAsyncReturn \nBackgroundTaskBuilder \nDelegateEvent\u003C\u0027Delegate\u003E \nEvent\u003C\u0027Delegate, \u0027Args\u003E \nEvent\u003C\u0027T\u003E \nHandler\u003C\u0027T\u003E \nIDelegateEvent\u003C\u0027Delegate\u003E \nIEvent\u003C\u0027Delegate, \u0027Args\u003E \nIEvent\u003C\u0027T\u003E \nMailboxProcessor\u003C\u0027Msg\u003E \nTaskBuilder \nTaskBuilderBase \nTaskCode\u003C\u0027TOverall, \u0027T\u003E \nTaskResumptionFunc\u003C\u0027TOverall\u003E \nTaskStateMachine\u003C\u0027TOverall\u003E \nTaskStateMachineData\u003C\u0027T\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions.html","title":"FSharp.Control.TaskBuilderExtensions","content":"HighPriority \nLowPriority \nMediumPriority","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core.html","title":"FSharp.Core","content":"ByRefKinds \nExtraTopLevelOperators \nLanguagePrimitives \nNumericLiterals \nOperators \nOptimizedClosures \nOption \nPrintf \nResult \nString \nValueOption \nAbstractClassAttribute \nAllowNullLiteralAttribute \nAutoOpenAttribute \nAutoSerializableAttribute \nCLIEventAttribute \nCLIMutableAttribute \nChoice\u003C\u0027T1, \u0027T2\u003E \nChoice\u003C\u0027T1, \u0027T2, \u0027T3\u003E \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E \nClassAttribute \nComparisonConditionalOnAttribute \nCompilationArgumentCountsAttribute \nCompilationMappingAttribute \nCompilationRepresentationAttribute \nCompilationRepresentationFlags \nCompilationSourceNameAttribute \nCompiledNameAttribute \nCompilerMessageAttribute \nCustomComparisonAttribute \nCustomEqualityAttribute \nCustomOperationAttribute \nDefaultAugmentationAttribute \nDefaultValueAttribute \nEntryPointAttribute \nEqualityConditionalOnAttribute \nExperimentalAttribute \nFSharpFunc\u003C\u0027T, \u0027U\u003E \nFSharpInterfaceDataVersionAttribute \nFSharpTypeFunc \nFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E \nFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E \nFuncConvert \nGeneralizableValueAttribute \nInlineIfLambdaAttribute \nInterfaceAttribute \nLiteralAttribute \nMatchFailureException \nMeasureAnnotatedAbbreviationAttribute \nMeasureAttribute \nNoComparisonAttribute \nNoCompilerInliningAttribute \nNoDynamicInvocationAttribute \nNoEqualityAttribute \nOption\u003C\u0027T\u003E \nOptionalArgumentAttribute \nPrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E \nPrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E \nProjectionParameterAttribute \nRef\u003C\u0027T\u003E \nReferenceEqualityAttribute \nReflectedDefinitionAttribute \nRequireQualifiedAccessAttribute \nRequiresExplicitTypeArgumentsAttribute \nResult\u003C\u0027T, \u0027TError\u003E \nSealedAttribute \nSourceConstructFlags \nStructAttribute \nStructuralComparisonAttribute \nStructuralEqualityAttribute \nStructuredFormatDisplayAttribute \nTailCallAttribute \nUnit \nUnverifiableAttribute \nValueOption\u003C\u0027T\u003E \nVolatileFieldAttribute \nWarnOnWithoutNullArgumentAttribute \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,,] \n\u0027T [,,,,,,,,,,] \n\u0027T [,,,,,,,,,] \n\u0027T [,,,,,,,,] \n\u0027T [,,,,,,,] \n\u0027T [,,,,,,] \n\u0027T [,,,,,] \n\u0027T [,,,,] \n\u0027T [,,,] \n\u0027T [,,] \n\u0027T [,] \n\u0027T [] \n\u0027T array \nbool \nbyref\u003C\u0027T, \u0027Kind\u003E \nbyref\u003C\u0027T\u003E \nbyte\u003C\u0027Measure\u003E \nbyte \nchar \ndecimal\u003C\u0027Measure\u003E \ndouble\u003C\u0027Measure\u003E \ndouble \nfloat\u003C\u0027Measure\u003E \nfloat \nfloat32\u003C\u0027Measure\u003E \nfloat32 \nilsigptr\u003C\u0027T\u003E \ninref\u003C\u0027T\u003E \nint\u003C\u0027Measure\u003E \nint \nint16\u003C\u0027Measure\u003E \nint16 \nint32\u003C\u0027Measure\u003E \nint32 \nint64\u003C\u0027Measure\u003E \nint64 \nint8\u003C\u0027Measure\u003E \nint8 \nnativeint\u003C\u0027Measure\u003E \nnativeptr\u003C\u0027T\u003E \nobj \nobjnull \n\u0027T option \noutref\u003C\u0027T\u003E \n\u0027T ref \nsbyte\u003C\u0027Measure\u003E \nsbyte \nsingle\u003C\u0027Measure\u003E \nsingle \nuint\u003C\u0027Measure\u003E \nuint \nuint16\u003C\u0027Measure\u003E \nuint16 \nuint32\u003C\u0027Measure\u003E \nuint32 \nuint64\u003C\u0027Measure\u003E \nuint64 \nuint8\u003C\u0027Measure\u003E \nuint8 \nunativeint\u003C\u0027Measure\u003E \nunit \nvoidptr \n\u0027T voption","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices.html","title":"FSharp.Core.CompilerServices","content":"ResumableCode \nRuntimeHelpers \nStateMachineHelpers \nAfterCode\u003C\u0027Data, \u0027Result\u003E \nArrayCollector\u003C\u0027T\u003E \nGeneratedSequenceBase\u003C\u0027T\u003E \nIProvidedNamespace \nIResumableStateMachine\u003C\u0027Data\u003E \nITypeProvider \nITypeProvider2 \nListCollector\u003C\u0027T\u003E \nMeasureInverse\u003C\u0027Measure\u003E \nMeasureOne \nMeasureProduct\u003C\u0027Measure1, \u0027Measure2\u003E \nMoveNextMethodImpl\u003C\u0027Data\u003E \nNoEagerConstraintApplicationAttribute \nResumableCode\u003C\u0027Data, \u0027T\u003E \nResumableStateMachine\u003C\u0027Data\u003E \nResumptionDynamicInfo\u003C\u0027Data\u003E \nResumptionFunc\u003C\u0027Data\u003E \nSetStateMachineMethodImpl\u003C\u0027Data\u003E \nTypeProviderAssemblyAttribute \nTypeProviderAttribute \nTypeProviderConfig \nTypeProviderDefinitionLocationAttribute \nTypeProviderEditorHideMethodsAttribute \nTypeProviderTypeAttributes \nTypeProviderXmlDocAttribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames.html","title":"FSharp.Data.UnitSystems.SI.UnitNames","content":"ampere \nbecquerel \ncandela \ncoulomb \nfarad \ngray \nhenry \nhertz \njoule \nkatal \nkelvin \nkilogram \nlumen \nlux \nmeter \nmetre \nmole \nnewton \nohm \npascal \nsecond \nsiemens \nsievert \ntesla \nvolt \nwatt \nweber","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols.html","title":"FSharp.Data.UnitSystems.SI.UnitSymbols","content":"A \nBq \nC \nF \nGy \nH \nHz \nJ \nK \nN \nPa \nS \nSv \nT \nV \nW \nWb \ncd \nkat \nkg \nlm \nlx \nm \nmol \nohm \ns","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq.html","title":"FSharp.Linq","content":"Nullable \nNullableOperators \nQueryBuilder \nQuerySource\u003C\u0027T, \u0027Q\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-queryrunextensions.html","title":"FSharp.Linq.QueryRunExtensions","content":"HighPriority \nLowPriority","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers.html","title":"FSharp.Linq.RuntimeHelpers","content":"LeafExpressionConverter \nAnonymousObject\u003C\u0027T1\u003E \nAnonymousObject\u003C\u0027T1, \u0027T2\u003E \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E \nGrouping\u003C\u0027K, \u0027T\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop.html","title":"FSharp.NativeInterop","content":"NativePtr","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations.html","title":"FSharp.Quotations","content":"DerivedPatterns \nExprShape \nPatterns \nExpr \nExpr\u003C\u0027T\u003E \nVar","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection.html","title":"FSharp.Reflection","content":"FSharpReflectionExtensions \nFSharpType \nFSharpValue \nUnionCaseInfo","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html","title":"Array","content":"Array \nContains operations for working with arrays. \n\n  See also \u003Ca href=\u0022https://learn.microsoft.com/dotnet/fsharp/language-reference/arrays\u0022\u003EF# Language Guide - Arrays\u003C/a\u003E.\n  \nArray.Parallel \nParallel \nArray.allPairs \nallPairs \nArray.append \nappend \nArray.average \naverage \nArray.averageBy \naverageBy \nArray.blit \nblit \nArray.collect \ncollect \nArray.compareWith \ncompareWith \nArray.concat \nconcat \nArray.contains \ncontains \nArray.copy \ncopy \nArray.countBy \ncountBy \nArray.create \ncreate \nArray.tryHead \ntryHead \nArray.tryPick \ntryPick \nArray.fill \nfill \nArray.pick \npick \nArray.choose \nchoose \nArray.chunkBySize \nchunkBySize \nArray.distinct \ndistinct \nArray.distinctBy \ndistinctBy \nArray.splitInto \nsplitInto \nArray.empty \nempty \nArray.exactlyOne \nexactlyOne \nArray.tryExactlyOne \ntryExactlyOne \nArray.except \nexcept \nArray.exists \nexists \nArray.exists2 \nexists2 \nArray.filter \nfilter \nArray.find \nfind \nArray.findBack \nfindBack \nArray.findIndex \nfindIndex \nArray.findIndexBack \nfindIndexBack \nArray.forall \nforall \nArray.forall2 \nforall2 \nArray.fold \nfold \nArray.foldBack \nfoldBack \nArray.fold2 \nfold2 \nArray.foldBack2 \nfoldBack2 \nArray.get \nget \nArray.head \nhead \nArray.groupBy \ngroupBy \nArray.indexed \nindexed \nArray.init \ninit \nArray.zeroCreate \nzeroCreate \nArray.isEmpty \nisEmpty \nArray.iter \niter \nArray.iter2 \niter2 \nArray.iteri \niteri \nArray.iteri2 \niteri2 \nArray.last \nlast \nArray.item \nitem \nArray.length \nlength \nArray.tryLast \ntryLast \nArray.map \nmap \nArray.map2 \nmap2 \nArray.mapFold \nmapFold \nArray.mapFoldBack \nmapFoldBack \nArray.map3 \nmap3 \nArray.mapi2 \nmapi2 \nArray.mapi \nmapi \nArray.max \nmax \nArray.maxBy \nmaxBy \nArray.min \nmin \nArray.minBy \nminBy \nArray.ofList \nofList \nArray.ofSeq \nofSeq \nArray.pairwise \npairwise \nArray.partition \npartition \nArray.permute \npermute \nArray.reduce \nreduce \nArray.reduceBack \nreduceBack \nArray.replicate \nreplicate \nArray.rev \nrev \nArray.scan \nscan \nArray.scanBack \nscanBack \nArray.singleton \nsingleton \nArray.set \nset \nArray.skip \nskip \nArray.skipWhile \nskipWhile \nArray.sub \nsub \nArray.sort \nsort \nArray.sortBy \nsortBy \nArray.sortWith \nsortWith \nArray.sortInPlaceBy \nsortInPlaceBy \nArray.sortInPlaceWith \nsortInPlaceWith \nArray.sortInPlace \nsortInPlace \nArray.splitAt \nsplitAt \nArray.sortDescending \nsortDescending \nArray.sortByDescending \nsortByDescending \nArray.sum \nsum \nArray.sumBy \nsumBy \nArray.take \ntake \nArray.takeWhile \ntakeWhile \nArray.tail \ntail \nArray.toList \ntoList \nArray.toSeq \ntoSeq \nArray.transpose \ntranspose \nArray.truncate \ntruncate \nArray.tryFind \ntryFind \nArray.tryFindBack \ntryFindBack \nArray.tryFindIndex \ntryFindIndex \nArray.tryItem \ntryItem \nArray.tryFindIndexBack \ntryFindIndexBack \nArray.unfold \nunfold \nArray.unzip \nunzip \nArray.unzip3 \nunzip3 \nArray.where \nwhere \nArray.windowed \nwindowed \nArray.zip \nzip \nArray.zip3 \nzip3 \nArray.removeAt \nremoveAt \nArray.removeManyAt \nremoveManyAt \nArray.updateAt \nupdateAt \nArray.insertAt \ninsertAt \nArray.insertManyAt \ninsertManyAt \nArray.randomShuffle \nrandomShuffle \nArray.randomShuffleWith \nrandomShuffleWith \nArray.randomShuffleBy \nrandomShuffleBy \nArray.randomShuffleInPlace \nrandomShuffleInPlace \nArray.randomShuffleInPlaceWith \nrandomShuffleInPlaceWith \nArray.randomShuffleInPlaceBy \nrandomShuffleInPlaceBy \nArray.randomChoice \nrandomChoice \nArray.randomChoiceWith \nrandomChoiceWith \nArray.randomChoiceBy \nrandomChoiceBy \nArray.randomChoices \nrandomChoices \nArray.randomChoicesWith \nrandomChoicesWith \nArray.randomChoicesBy \nrandomChoicesBy \nArray.randomSample \nrandomSample \nArray.randomSampleWith \nrandomSampleWith \nArray.randomSampleBy \nrandomSampleBy","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#allPairs","title":"Array.allPairs","content":"Array.allPairs \nallPairs \nReturns a new array that contains all pairings of elements from the first and second arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#append","title":"Array.append","content":"Array.append \nappend \nBuilds a new array that contains the elements of the first array followed by the elements of the second array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#average","title":"Array.average","content":"Array.average \naverage \nReturns the average of the elements in the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#averageBy","title":"Array.averageBy","content":"Array.averageBy \naverageBy \nReturns the average of the elements generated by applying the function to each element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#blit","title":"Array.blit","content":"Array.blit \nblit \nReads a range of elements from the first array and write them into the second. \n\n Slicing syntax is generally preferred, e.g.\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Esource\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[|\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E12\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E13\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E14\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E|]\u003C/span\u003E\r\n \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 2)\u0022 class=\u0022id\u0022\u003Etarget\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[|\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E5\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E|]\u003C/span\u003E\r\n \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 3)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 3)\u0022 class=\u0022id\u0022\u003Etarget\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E3..\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022k\u0022\u003E\u0026lt;-\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 4)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 4)\u0022 class=\u0022id\u0022\u003Esource\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E1..\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003Eval source: int array\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs2\u0022\u003Eval target: int array\u003C/div\u003E\r\n\r\n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#collect","title":"Array.collect","content":"Array.collect \ncollect \nFor each element of the array, applies the given function. Concatenates all the results and return the combined array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#compareWith","title":"Array.compareWith","content":"Array.compareWith \ncompareWith \nCompares two arrays using the given comparison function, element by element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#concat","title":"Array.concat","content":"Array.concat \nconcat \nBuilds a new array that contains the elements of each of the given sequence of arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#contains","title":"Array.contains","content":"Array.contains \ncontains \nTests if the array contains the specified element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#copy","title":"Array.copy","content":"Array.copy \ncopy \nBuilds a new array that contains the elements of the given array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#countBy","title":"Array.countBy","content":"Array.countBy \ncountBy \nApplies a key-generating function to each element of an array and returns an array yielding unique\n keys and their number of occurrences in the original array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#create","title":"Array.create","content":"Array.create \ncreate \nCreates an array whose elements are all initially the given value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tryHead","title":"Array.tryHead","content":"Array.tryHead \ntryHead \nReturns the first element of the array, or\n \u003Ccode\u003ENone\u003C/code\u003E if the array is empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tryPick","title":"Array.tryPick","content":"Array.tryPick \ntryPick \nApplies the given function to successive elements, returning the first\n result where the function returns \u003Ccode\u003ESome(x)\u003C/code\u003E for some \u003Ccode\u003Ex\u003C/code\u003E. If the function\n never returns \u003Ccode\u003ESome(x)\u003C/code\u003E then \u003Ccode\u003ENone\u003C/code\u003E is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#fill","title":"Array.fill","content":"Array.fill \nfill \nFills a range of elements of the array with the given value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#pick","title":"Array.pick","content":"Array.pick \npick \nApplies the given function to successive elements, returning the first\n result where the function returns \u003Ccode\u003ESome(x)\u003C/code\u003E for some \u003Ccode\u003Ex\u003C/code\u003E. If the function\n never returns \u003Ccode\u003ESome(x)\u003C/code\u003E then \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception\u0022\u003EKeyNotFoundException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#choose","title":"Array.choose","content":"Array.choose \nchoose \nApplies the given function to each element of the array. Returns\n the array comprised of the results \u003Ccode\u003Ex\u003C/code\u003E for each element where\n the function returns \u003Ccode\u003ESome(x)\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#chunkBySize","title":"Array.chunkBySize","content":"Array.chunkBySize \nchunkBySize \nDivides the input array into chunks of size at most \u003Ccode\u003EchunkSize\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#distinct","title":"Array.distinct","content":"Array.distinct \ndistinct \nReturns an array that contains no duplicate entries according to generic hash and\n equality comparisons on the entries.\n If an element occurs multiple times in the array then the later occurrences are discarded.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#distinctBy","title":"Array.distinctBy","content":"Array.distinctBy \ndistinctBy \nReturns an array that contains no duplicate entries according to the\n generic hash and equality comparisons on the keys returned by the given key-generating function.\n If an element occurs multiple times in the array then the later occurrences are discarded.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#splitInto","title":"Array.splitInto","content":"Array.splitInto \nsplitInto \nSplits the input array into at most \u003Ccode\u003Ecount\u003C/code\u003E chunks.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#empty","title":"Array.empty","content":"Array.empty \nempty \nReturns an empty array of the given type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#exactlyOne","title":"Array.exactlyOne","content":"Array.exactlyOne \nexactlyOne \nReturns the only element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tryExactlyOne","title":"Array.tryExactlyOne","content":"Array.tryExactlyOne \ntryExactlyOne \nReturns the only element of the array or \u003Ccode\u003ENone\u003C/code\u003E if array is empty or contains more than one element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#except","title":"Array.except","content":"Array.except \nexcept \nReturns a new list with the distinct elements of the input array which do not appear in the itemsToExclude sequence,\n using generic hash and equality comparisons to compare values.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#exists","title":"Array.exists","content":"Array.exists \nexists \nTests if any element of the array satisfies the given predicate. \nThe predicate is applied to the elements of the input array. If any application\n returns true then the overall result is true and no further elements are tested.\n Otherwise, false is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#exists2","title":"Array.exists2","content":"Array.exists2 \nexists2 \nTests if any pair of corresponding elements of the arrays satisfies the given predicate. \nThe predicate is applied to matching elements in the two collections up to the lesser of the\n two lengths of the collections. If any application returns true then the overall result is\n true and no further elements are tested. Otherwise, if one collections is longer\n than the other then the \u003Ccode\u003EArgumentException\u003C/code\u003E exception is raised.\n Otherwise, false is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#filter","title":"Array.filter","content":"Array.filter \nfilter \nReturns a new collection containing only the elements of the collection\n for which the given predicate returns \u0022true\u0022.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#find","title":"Array.find","content":"Array.find \nfind \nReturns the first element for which the given function returns \u0027true\u0027.\n Raise \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception\u0022\u003EKeyNotFoundException\u003C/a\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#findBack","title":"Array.findBack","content":"Array.findBack \nfindBack \nReturns the last element for which the given function returns \u0027true\u0027.\n Raise \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception\u0022\u003EKeyNotFoundException\u003C/a\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#findIndex","title":"Array.findIndex","content":"Array.findIndex \nfindIndex \nReturns the index of the first element in the array\n that satisfies the given predicate. Raise \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception\u0022\u003EKeyNotFoundException\u003C/a\u003E if\n none of the elements satisfy the predicate.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#findIndexBack","title":"Array.findIndexBack","content":"Array.findIndexBack \nfindIndexBack \nReturns the index of the last element in the array\n that satisfies the given predicate. Raise \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception\u0022\u003EKeyNotFoundException\u003C/a\u003E if\n none of the elements satisfy the predicate.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#forall","title":"Array.forall","content":"Array.forall \nforall \nTests if all elements of the array satisfy the given predicate. \nThe predicate is applied to the elements of the input collection. If any application\n returns false then the overall result is false and no further elements are tested.\n Otherwise, true is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#forall2","title":"Array.forall2","content":"Array.forall2 \nforall2 \nTests if all corresponding elements of the array satisfy the given predicate pairwise. \nThe predicate is applied to matching elements in the two collections up to the lesser of the\n two lengths of the collections. If any application returns false then the overall result is\n false and no further elements are tested. Otherwise, if one collection is longer\n than the other then the \u003Ccode\u003EArgumentException\u003C/code\u003E exception is raised.\n Otherwise, true is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#fold","title":"Array.fold","content":"Array.fold \nfold \nApplies a function to each element of the collection, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then computes\n \u003Ccode\u003Ef (... (f s i0)...) iN\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#foldBack","title":"Array.foldBack","content":"Array.foldBack \nfoldBack \nApplies a function to each element of the array, starting from the end, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then computes\n \u003Ccode\u003Ef i0 (...(f iN s))\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#fold2","title":"Array.fold2","content":"Array.fold2 \nfold2 \nApplies a function to pairs of elements drawn from the two collections,\n left-to-right, threading an accumulator argument\n through the computation. The two input\n arrays must have the same lengths, otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is\n raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#foldBack2","title":"Array.foldBack2","content":"Array.foldBack2 \nfoldBack2 \nApply a function to pairs of elements drawn from the two collections, right-to-left,\n threading an accumulator argument through the computation. The two input\n arrays must have the same lengths, otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is\n raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#get","title":"Array.get","content":"Array.get \nget \nGets an element from an array. \nNormally the syntax \u003Ccode\u003Earray[index]\u003C/code\u003E is preferred.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#head","title":"Array.head","content":"Array.head \nhead \nReturns the first element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#groupBy","title":"Array.groupBy","content":"Array.groupBy \ngroupBy \nApplies a key-generating function to each element of an array and yields an array of\n unique keys. Each unique key contains an array of all elements that match\n to this key.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#indexed","title":"Array.indexed","content":"Array.indexed \nindexed \nBuilds a new array whose elements are the corresponding elements of the input array\n paired with the integer index (from 0) of each element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#init","title":"Array.init","content":"Array.init \ninit \nCreates an array given the dimension and a generator function to compute the elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#zeroCreate","title":"Array.zeroCreate","content":"Array.zeroCreate \nzeroCreate \nCreates an array where the entries are initially the default value Unchecked.defaultof\u003C\u0027T\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#isEmpty","title":"Array.isEmpty","content":"Array.isEmpty \nisEmpty \nReturns true if the given array is empty, otherwise false.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#iter","title":"Array.iter","content":"Array.iter \niter \nApplies the given function to each element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#iter2","title":"Array.iter2","content":"Array.iter2 \niter2 \nApplies the given function to pair of elements drawn from matching indices in two arrays. The\n two arrays must have the same lengths, otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is\n raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#iteri","title":"Array.iteri","content":"Array.iteri \niteri \nApplies the given function to each element of the array. The integer passed to the\n function indicates the index of element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#iteri2","title":"Array.iteri2","content":"Array.iteri2 \niteri2 \nApplies the given function to pair of elements drawn from matching indices in two arrays,\n also passing the index of the elements. The two arrays must have the same lengths,\n otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#last","title":"Array.last","content":"Array.last \nlast \nReturns the last element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#item","title":"Array.item","content":"Array.item \nitem \nGets an element from an array. \nNormally the syntax \u003Ccode\u003Earray[index]\u003C/code\u003E is preferred.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#length","title":"Array.length","content":"Array.length \nlength \nReturns the length of an array. You can also use property arr.Length. \nThe notation \u003Ccode\u003Earray.Length\u003C/code\u003E is preferred.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tryLast","title":"Array.tryLast","content":"Array.tryLast \ntryLast \nReturns the last element of the array.\n Return \u003Ccode\u003ENone\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#map","title":"Array.map","content":"Array.map \nmap \nBuilds a new array whose elements are the results of applying the given function\n to each of the elements of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#map2","title":"Array.map2","content":"Array.map2 \nmap2 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding elements of the two collections pairwise. The two input\n arrays must have the same lengths, otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is\n raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#mapFold","title":"Array.mapFold","content":"Array.mapFold \nmapFold \nCombines map and fold. Builds a new array whose elements are the results of applying the given function\n to each of the elements of the input array. The function is also used to accumulate a final value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#mapFoldBack","title":"Array.mapFoldBack","content":"Array.mapFoldBack \nmapFoldBack \nCombines map and foldBack. Builds a new array whose elements are the results of applying the given function\n to each of the elements of the input array. The function is also used to accumulate a final value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#map3","title":"Array.map3","content":"Array.map3 \nmap3 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding triples from the three collections. The three input\n arrays must have the same length, otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is\n raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#mapi2","title":"Array.mapi2","content":"Array.mapi2 \nmapi2 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding elements of the two collections pairwise, also passing the index of\n the elements. The two input arrays must have the same lengths, otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is\n raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#mapi","title":"Array.mapi","content":"Array.mapi \nmapi \nBuilds a new array whose elements are the results of applying the given function\n to each of the elements of the array. The integer index passed to the\n function indicates the index of element being transformed, starting at zero.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#max","title":"Array.max","content":"Array.max \nmax \nReturns the greatest of all elements of the array, compared via Operators.max on the function result. \nThrows ArgumentException for empty arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#maxBy","title":"Array.maxBy","content":"Array.maxBy \nmaxBy \nReturns the greatest of all elements of the array, compared via Operators.max on the function result. \nThrows ArgumentException for empty arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#min","title":"Array.min","content":"Array.min \nmin \nReturns the lowest of all elements of the array, compared via Operators.min. \nThrows ArgumentException for empty arrays","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#minBy","title":"Array.minBy","content":"Array.minBy \nminBy \nReturns the lowest of all elements of the array, compared via Operators.min on the function result. \nThrows ArgumentException for empty arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#ofList","title":"Array.ofList","content":"Array.ofList \nofList \nBuilds an array from the given list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#ofSeq","title":"Array.ofSeq","content":"Array.ofSeq \nofSeq \nBuilds a new array from the given enumerable object.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#pairwise","title":"Array.pairwise","content":"Array.pairwise \npairwise \nReturns an array of each element in the input array and its predecessor, with the\n exception of the first element which is only returned as the predecessor of the second element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#partition","title":"Array.partition","content":"Array.partition \npartition \nSplits the collection into two collections, containing the\n elements for which the given predicate returns \u0022true\u0022 and \u0022false\u0022\n respectively.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#permute","title":"Array.permute","content":"Array.permute \npermute \nReturns an array with all elements permuted according to the\n specified permutation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#reduce","title":"Array.reduce","content":"Array.reduce \nreduce \nApplies a function to each element of the array, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E\n then computes \u003Ccode\u003Ef (... (f i0 i1)...) iN\u003C/code\u003E.\n Raises ArgumentException if the array has size zero.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#reduceBack","title":"Array.reduceBack","content":"Array.reduceBack \nreduceBack \nApplies a function to each element of the array, starting from the end, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E\n then computes \u003Ccode\u003Ef i0 (...(f iN-1 iN))\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#replicate","title":"Array.replicate","content":"Array.replicate \nreplicate \nCreates an array by replicating the given initial value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#rev","title":"Array.rev","content":"Array.rev \nrev \nReturns a new array with the elements in reverse order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#scan","title":"Array.scan","content":"Array.scan \nscan \nLike \u003Ccode\u003Efold\u003C/code\u003E, but return the intermediary and final results.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#scanBack","title":"Array.scanBack","content":"Array.scanBack \nscanBack \nLike \u003Ccode\u003EfoldBack\u003C/code\u003E, but return both the intermediary and final results.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#singleton","title":"Array.singleton","content":"Array.singleton \nsingleton \nReturns an array that contains one item only.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#set","title":"Array.set","content":"Array.set \nset \nSets an element of an array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#skip","title":"Array.skip","content":"Array.skip \nskip \nBuilds a new array that contains the elements of the given array, excluding the first N elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#skipWhile","title":"Array.skipWhile","content":"Array.skipWhile \nskipWhile \nBypasses elements in an array while the given predicate returns True, and then returns\n the remaining elements in a new array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sub","title":"Array.sub","content":"Array.sub \nsub \nBuilds a new array that contains the given subrange specified by\n starting index and length. \n\n Slicing syntax is generally preferred, e.g.\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Einput\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[|\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E5\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E|]\u003C/span\u003E\r\n\r\n \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 2)\u0022 class=\u0022id\u0022\u003Einput\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E2..\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003Eval input: int array\u003C/div\u003E\r\n\r\n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sort","title":"Array.sort","content":"Array.sort \nsort \nSorts the elements of an array, returning a new array. Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E.  \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sortBy","title":"Array.sortBy","content":"Array.sortBy \nsortBy \nSorts the elements of an array, using the given projection for the keys and returning a new array.\n Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sortWith","title":"Array.sortWith","content":"Array.sortWith \nsortWith \nSorts the elements of an array, using the given comparison function as the order, returning a new array. \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sortInPlaceBy","title":"Array.sortInPlaceBy","content":"Array.sortInPlaceBy \nsortInPlaceBy \nSorts the elements of an array by mutating the array in-place, using the given projection for the keys.\n Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sortInPlaceWith","title":"Array.sortInPlaceWith","content":"Array.sortInPlaceWith \nsortInPlaceWith \nSorts the elements of an array by mutating the array in-place, using the given comparison function as the order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sortInPlace","title":"Array.sortInPlace","content":"Array.sortInPlace \nsortInPlace \nSorts the elements of an array by mutating the array in-place, using the given comparison function.\n Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#splitAt","title":"Array.splitAt","content":"Array.splitAt \nsplitAt \nSplits an array into two arrays, at the given index.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sortDescending","title":"Array.sortDescending","content":"Array.sortDescending \nsortDescending \nSorts the elements of an array, in descending order, returning a new array. Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E.  \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sortByDescending","title":"Array.sortByDescending","content":"Array.sortByDescending \nsortByDescending \nSorts the elements of an array, in descending order, using the given projection for the keys and returning a new array.\n Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sum","title":"Array.sum","content":"Array.sum \nsum \nReturns the sum of the elements in the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#sumBy","title":"Array.sumBy","content":"Array.sumBy \nsumBy \nReturns the sum of the results generated by applying the function to each element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#take","title":"Array.take","content":"Array.take \ntake \nReturns the first N elements of the array. \nThrows \u003Ccode\u003EInvalidOperationException\u003C/code\u003E\n if the count exceeds the number of elements in the array. \u003Ccode\u003EArray.truncate\u003C/code\u003E\n returns as many items as the array contains instead of throwing an exception.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#takeWhile","title":"Array.takeWhile","content":"Array.takeWhile \ntakeWhile \nReturns an array that contains all elements of the original array while the\n given predicate returns True, and then returns no further elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tail","title":"Array.tail","content":"Array.tail \ntail \nReturns a new array containing the elements of the original except the first element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#toList","title":"Array.toList","content":"Array.toList \ntoList \nBuilds a list from the given array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#toSeq","title":"Array.toSeq","content":"Array.toSeq \ntoSeq \nViews the given array as a sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#transpose","title":"Array.transpose","content":"Array.transpose \ntranspose \nReturns the transpose of the given sequence of arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#truncate","title":"Array.truncate","content":"Array.truncate \ntruncate \nReturns at most N elements in a new array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tryFind","title":"Array.tryFind","content":"Array.tryFind \ntryFind \nReturns the first element for which the given function returns True.\n Return None if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tryFindBack","title":"Array.tryFindBack","content":"Array.tryFindBack \ntryFindBack \nReturns the last element for which the given function returns True.\n Return None if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tryFindIndex","title":"Array.tryFindIndex","content":"Array.tryFindIndex \ntryFindIndex \nReturns the index of the first element in the array\n that satisfies the given predicate.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tryItem","title":"Array.tryItem","content":"Array.tryItem \ntryItem \nTries to find the nth element in the array.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if index is negative or the input array does not contain enough elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#tryFindIndexBack","title":"Array.tryFindIndexBack","content":"Array.tryFindIndexBack \ntryFindIndexBack \nReturns the index of the last element in the array\n that satisfies the given predicate.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#unfold","title":"Array.unfold","content":"Array.unfold \nunfold \nReturns an array that contains the elements generated by the given computation.\n The generator is repeatedly called to build the list until it returns \u0060None\u0060.\n The given initial \u003Ccode\u003Estate\u003C/code\u003E argument is passed to the element generator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#unzip","title":"Array.unzip","content":"Array.unzip \nunzip \nSplits an array of pairs into two arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#unzip3","title":"Array.unzip3","content":"Array.unzip3 \nunzip3 \nSplits an array of triples into three arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#where","title":"Array.where","content":"Array.where \nwhere \nReturns a new array containing only the elements of the array\n for which the given predicate returns \u0022true\u0022. \nThis is identical to \u003Ccode\u003EArray.filter\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#windowed","title":"Array.windowed","content":"Array.windowed \nwindowed \nReturns an array of sliding windows containing elements drawn from the input\n array. Each window is returned as a fresh array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#zip","title":"Array.zip","content":"Array.zip \nzip \nCombines the two arrays into an array of pairs. The two arrays must have equal lengths, otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is\n raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#zip3","title":"Array.zip3","content":"Array.zip3 \nzip3 \nCombines three arrays into an array of pairs. The three arrays must have equal lengths, otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is\n raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#removeAt","title":"Array.removeAt","content":"Array.removeAt \nremoveAt \nReturn a new array with the item at a given index removed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#removeManyAt","title":"Array.removeManyAt","content":"Array.removeManyAt \nremoveManyAt \nReturn a new array with the number of items starting at a given index removed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#updateAt","title":"Array.updateAt","content":"Array.updateAt \nupdateAt \nReturn a new array with the item at a given index set to the new value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#insertAt","title":"Array.insertAt","content":"Array.insertAt \ninsertAt \nReturn a new array with a new item inserted before the given index.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#insertManyAt","title":"Array.insertManyAt","content":"Array.insertManyAt \ninsertManyAt \nReturn a new array with new items inserted before the given index.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomShuffle","title":"Array.randomShuffle","content":"Array.randomShuffle \nrandomShuffle \nReturn a new array shuffled in a random order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomShuffleWith","title":"Array.randomShuffleWith","content":"Array.randomShuffleWith \nrandomShuffleWith \nReturn a new array shuffled in a random order with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomShuffleBy","title":"Array.randomShuffleBy","content":"Array.randomShuffleBy \nrandomShuffleBy \nReturn a new array shuffled in a random order using the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomShuffleInPlace","title":"Array.randomShuffleInPlace","content":"Array.randomShuffleInPlace \nrandomShuffleInPlace \nSorts input array in a random order by mutating the array in-place.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomShuffleInPlaceWith","title":"Array.randomShuffleInPlaceWith","content":"Array.randomShuffleInPlaceWith \nrandomShuffleInPlaceWith \nSorts input array in a random order with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance by mutating the array in-place.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomShuffleInPlaceBy","title":"Array.randomShuffleInPlaceBy","content":"Array.randomShuffleInPlaceBy \nrandomShuffleInPlaceBy \nSorts input array in a random order using the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function by mutating the array in-place.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomChoice","title":"Array.randomChoice","content":"Array.randomChoice \nrandomChoice \nReturns a random element from the given array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomChoiceWith","title":"Array.randomChoiceWith","content":"Array.randomChoiceWith \nrandomChoiceWith \nReturns a random element from the given array with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomChoiceBy","title":"Array.randomChoiceBy","content":"Array.randomChoiceBy \nrandomChoiceBy \nReturns a random element from the given array using the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomChoices","title":"Array.randomChoices","content":"Array.randomChoices \nrandomChoices \nReturns an array of random elements from the given array, each element can be selected multiple times.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomChoicesWith","title":"Array.randomChoicesWith","content":"Array.randomChoicesWith \nrandomChoicesWith \nReturns an array of random elements from the given array with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance, each element can be selected multiple times.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomChoicesBy","title":"Array.randomChoicesBy","content":"Array.randomChoicesBy \nrandomChoicesBy \nReturns an array of random elements from the given array using the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function, each element can be selected multiple times.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomSample","title":"Array.randomSample","content":"Array.randomSample \nrandomSample \nReturns a random sample of elements from the given array, each element can be selected only once.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomSampleWith","title":"Array.randomSampleWith","content":"Array.randomSampleWith \nrandomSampleWith \nReturns a random sample of elements from the given array with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance, each element can be selected only once.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html#randomSampleBy","title":"Array.randomSampleBy","content":"Array.randomSampleBy \nrandomSampleBy \nReturns a random sample of elements from the given array using the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function, each element can be selected only once.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html","title":"Parallel","content":"Parallel \nProvides parallel operations on arrays  \nParallel.forall \nforall \nParallel.exists \nexists \nParallel.tryFind \ntryFind \nParallel.tryFindIndex \ntryFindIndex \nParallel.tryPick \ntryPick \nParallel.reduce \nreduce \nParallel.reduceBy \nreduceBy \nParallel.max \nmax \nParallel.maxBy \nmaxBy \nParallel.min \nmin \nParallel.minBy \nminBy \nParallel.sum \nsum \nParallel.sumBy \nsumBy \nParallel.average \naverage \nParallel.averageBy \naverageBy \nParallel.choose \nchoose \nParallel.collect \ncollect \nParallel.map \nmap \nParallel.mapi \nmapi \nParallel.groupBy \ngroupBy \nParallel.iter \niter \nParallel.iteri \niteri \nParallel.init \ninit \nParallel.partition \npartition \nParallel.sort \nsort \nParallel.sortBy \nsortBy \nParallel.sortWith \nsortWith \nParallel.sortInPlaceBy \nsortInPlaceBy \nParallel.sortInPlaceWith \nsortInPlaceWith \nParallel.sortInPlace \nsortInPlace \nParallel.sortDescending \nsortDescending \nParallel.sortByDescending \nsortByDescending \nParallel.zip \nzip \nParallel.filter \nfilter","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#forall","title":"Parallel.forall","content":"Parallel.forall \nforall \nTests if all elements of the array satisfy the given predicate. \nThe predicate is applied to the elements of the input collection in parallel. If any application\n returns false then the overall result is false and testing of other elements in all threads is stopped at system\u0027s earliest convenience.\n Otherwise, true is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#exists","title":"Parallel.exists","content":"Parallel.exists \nexists \nTests if any element of the array satisfies the given predicate. \nThe predicate is applied to the elements of the input array in parallel. If any application\n returns true then the overall result is true and testing of other elements in all threads is stopped at system\u0027s earliest convenience.\n Otherwise, \u003Ccode\u003Efalse\u003C/code\u003E is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#tryFind","title":"Parallel.tryFind","content":"Parallel.tryFind \ntryFind \nReturns the first element for which the given function returns \u003Ccode\u003ETrue\u003C/code\u003E.\n Returns None if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#tryFindIndex","title":"Parallel.tryFindIndex","content":"Parallel.tryFindIndex \ntryFindIndex \nReturns the index of the first element in the array\n that satisfies the given predicate.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#tryPick","title":"Parallel.tryPick","content":"Parallel.tryPick \ntryPick \nApplies the given function to successive elements, returning the first\n result where the function returns \u003Ccode\u003ESome(x)\u003C/code\u003E for some \u003Ccode\u003Ex\u003C/code\u003E. If the function\n never returns \u003Ccode\u003ESome(x)\u003C/code\u003E then \u003Ccode\u003ENone\u003C/code\u003E is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#reduce","title":"Parallel.reduce","content":"Parallel.reduce \nreduce \nApplies a function to each element of the array in parallel, threading an accumulator argument\n through the computation for each thread involved in the computation. After processing entire input, results from all threads are reduced together.\n Raises ArgumentException if the array is empty. \nThe order of processing is not guaranteed. For that reason, the \u0027reduce\u0027 function argument should be commutative.\n (That is, changing the order of execution must not affect the result)\n Also, compared to the non-parallel version of Array.reduce, the \u0027reduce\u0027 function may be invoked more times due to the resulting reduction from participating threads.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#reduceBy","title":"Parallel.reduceBy","content":"Parallel.reduceBy \nreduceBy \nApplies a projection function to each element of the array in parallel, reducing elements in each thread with a dedicated \u0027reduction\u0027 function.\n After processing entire input, results from all threads are reduced together.\n Raises ArgumentException if the array is empty. \nThe order of processing is not guaranteed. For that reason, the \u0027reduction\u0027 function argument should be commutative.\n (That is, changing the order of execution must not affect the result) ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#max","title":"Parallel.max","content":"Parallel.max \nmax \nReturns the greatest of all elements of the array, compared via Operators.max. \nThrows ArgumentException for empty arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#maxBy","title":"Parallel.maxBy","content":"Parallel.maxBy \nmaxBy \nReturns the greatest of all elements of the array, compared via Operators.max on the function result. \nThrows ArgumentException for empty arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#min","title":"Parallel.min","content":"Parallel.min \nmin \nReturns the smallest of all elements of the array, compared via Operators.min. \nThrows ArgumentException for empty arrays","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#minBy","title":"Parallel.minBy","content":"Parallel.minBy \nminBy \nReturns the lowest of all elements of the array, compared via Operators.min on the function result. \nThrows ArgumentException for empty arrays.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sum","title":"Parallel.sum","content":"Parallel.sum \nsum \nReturns the sum of the elements in the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sumBy","title":"Parallel.sumBy","content":"Parallel.sumBy \nsumBy \nReturns the sum of the results generated by applying the function to each element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#average","title":"Parallel.average","content":"Parallel.average \naverage \nReturns the average of the elements in the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#averageBy","title":"Parallel.averageBy","content":"Parallel.averageBy \naverageBy \nReturns the average of the elements generated by applying the function to each element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#choose","title":"Parallel.choose","content":"Parallel.choose \nchoose \nApply the given function to each element of the array. Return\n the array comprised of the results \u003Ccode\u003Ex\u003C/code\u003E for each element where\n the function returns \u003Ccode\u003ESome(x)\u003C/code\u003E. \nPerforms the operation in parallel using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.parallel.for\u0022\u003EParallel.For\u003C/a\u003E.\n The order in which the given function is applied to elements of the input array is not specified.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#collect","title":"Parallel.collect","content":"Parallel.collect \ncollect \nFor each element of the array, apply the given function. Concatenate all the results and return the combined array. \nPerforms the operation in parallel using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.parallel.for\u0022\u003EParallel.For\u003C/a\u003E.\n The order in which the given function is applied to elements of the input array is not specified.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#map","title":"Parallel.map","content":"Parallel.map \nmap \nBuild a new array whose elements are the results of applying the given function\n to each of the elements of the array. \nPerforms the operation in parallel using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.parallel.for\u0022\u003EParallel.For\u003C/a\u003E.\n The order in which the given function is applied to elements of the input array is not specified.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#mapi","title":"Parallel.mapi","content":"Parallel.mapi \nmapi \nBuild a new array whose elements are the results of applying the given function\n to each of the elements of the array. The integer index passed to the\n function indicates the index of element being transformed. \nPerforms the operation in parallel using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.parallel.for\u0022\u003EParallel.For\u003C/a\u003E.\n The order in which the given function is applied to elements of the input array is not specified.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#groupBy","title":"Parallel.groupBy","content":"Parallel.groupBy \ngroupBy \nApplies a key-generating function to each element of an array in parallel and yields an array of\n unique keys. Each unique key contains an array of all elements that match\n to this key. \nPerforms the operation in parallel using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.parallel.for\u0022\u003EParallel.For\u003C/a\u003E.\n The order in which the given function is applied to elements of the input array is not specified.\n The order of the keys and values in the result is also not specified","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#iter","title":"Parallel.iter","content":"Parallel.iter \niter \nApply the given function to each element of the array.  \nPerforms the operation in parallel using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.parallel.for\u0022\u003EParallel.For\u003C/a\u003E.\n The order in which the given function is applied to elements of the input array is not specified.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#iteri","title":"Parallel.iteri","content":"Parallel.iteri \niteri \nApply the given function to each element of the array. The integer passed to the\n function indicates the index of element. \nPerforms the operation in parallel using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.parallel.for\u0022\u003EParallel.For\u003C/a\u003E.\n The order in which the given function is applied to elements of the input array is not specified.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#init","title":"Parallel.init","content":"Parallel.init \ninit \nCreate an array given the dimension and a generator function to compute the elements. \nPerforms the operation in parallel using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.parallel.for\u0022\u003EParallel.For\u003C/a\u003E.\n The order in which the given function is applied to indices is not specified.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#partition","title":"Parallel.partition","content":"Parallel.partition \npartition \nSplit the collection into two collections, containing the\n elements for which the given predicate returns \u0022true\u0022 and \u0022false\u0022\n respectively  \nPerforms the operation in parallel using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.parallel.for\u0022\u003EParallel.For\u003C/a\u003E.\n The order in which the given function is applied to indices is not specified.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sort","title":"Parallel.sort","content":"Parallel.sort \nsort \nSorts the elements of an array in parallel, returning a new array. Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E.  \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sortBy","title":"Parallel.sortBy","content":"Parallel.sortBy \nsortBy \nSorts the elements of an array in parallel, using the given projection for the keys and returning a new array.\n Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sortWith","title":"Parallel.sortWith","content":"Parallel.sortWith \nsortWith \nSorts the elements of an array in parallel, using the given comparison function as the order, returning a new array. \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sortInPlaceBy","title":"Parallel.sortInPlaceBy","content":"Parallel.sortInPlaceBy \nsortInPlaceBy \nSorts the elements of an array by mutating the array in-place in parallel, using the given projection for the keys.\n Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sortInPlaceWith","title":"Parallel.sortInPlaceWith","content":"Parallel.sortInPlaceWith \nsortInPlaceWith \nSorts the elements of an array by mutating the array in-place in parallel, using the given comparison function as the order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sortInPlace","title":"Parallel.sortInPlace","content":"Parallel.sortInPlace \nsortInPlace \nSorts the elements of an array by mutating the array in-place in parallel, using the given comparison function.\n Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sortDescending","title":"Parallel.sortDescending","content":"Parallel.sortDescending \nsortDescending \nSorts the elements of an array in parallel, in descending order, returning a new array. Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E.  \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#sortByDescending","title":"Parallel.sortByDescending","content":"Parallel.sortByDescending \nsortByDescending \nSorts the elements of an array in parallel, in descending order, using the given projection for the keys and returning a new array.\n Elements are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is not a stable sort, i.e. the original order of equal elements is not necessarily preserved.\n For a stable sort, consider using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq.Sort\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#zip","title":"Parallel.zip","content":"Parallel.zip \nzip \nCombines the two arrays into an array of pairs. The two arrays must have equal lengths, otherwise an \u003Ccode\u003EArgumentException\u003C/code\u003E is\n raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule-parallel.html#filter","title":"Parallel.filter","content":"Parallel.filter \nfilter \nReturns a new collection containing only the elements of the collection\n for which the given predicate returns \u003Ccode\u003Etrue\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html","title":"Array2D","content":"Array2D \nContains operations for working with 2-dimensional arrays. \n\u003Cp class=\u0027fsdocs-para\u0027\u003ESee also \u003Ca href=\u0022https://learn.microsoft.com/dotnet/fsharp/language-reference/arrays\u0022\u003EF# Language Guide - Arrays\u003C/a\u003E.\u003C/p\u003E\u003Cp class=\u0027fsdocs-para\u0027\u003EF# and CLI multi-dimensional arrays are typically zero-based.\n However, CLI multi-dimensional arrays used in conjunction with external\n libraries (e.g. libraries associated with Visual Basic) be\n non-zero based, using a potentially different base for each dimension.\n The operations in this module will accept such arrays, and\n the basing on an input array will be propagated to a matching output\n array on the \u003Ccode\u003EArray2D.map\u003C/code\u003E and \u003Ccode\u003EArray2D.mapi\u003C/code\u003E operations.\n Non-zero-based arrays can also be created using \u003Ccode\u003EArray2D.zeroCreateBased\u003C/code\u003E,\n \u003Ccode\u003EArray2D.createBased\u003C/code\u003E and \u003Ccode\u003EArray2D.initBased\u003C/code\u003E.\u003C/p\u003E \nArray2D.base1 \nbase1 \nArray2D.base2 \nbase2 \nArray2D.copy \ncopy \nArray2D.blit \nblit \nArray2D.init \ninit \nArray2D.create \ncreate \nArray2D.zeroCreate \nzeroCreate \nArray2D.initBased \ninitBased \nArray2D.createBased \ncreateBased \nArray2D.zeroCreateBased \nzeroCreateBased \nArray2D.iter \niter \nArray2D.iteri \niteri \nArray2D.length1 \nlength1 \nArray2D.length2 \nlength2 \nArray2D.map \nmap \nArray2D.mapi \nmapi \nArray2D.rebase \nrebase \nArray2D.set \nset \nArray2D.get \nget","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#base1","title":"Array2D.base1","content":"Array2D.base1 \nbase1 \nFetches the base-index for the first dimension of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#base2","title":"Array2D.base2","content":"Array2D.base2 \nbase2 \nFetches the base-index for the second dimension of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#copy","title":"Array2D.copy","content":"Array2D.copy \ncopy \nBuilds a new array whose elements are the same as the input array. \nFor non-zero-based arrays the basing on an input array will be propagated to the output\n array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#blit","title":"Array2D.blit","content":"Array2D.blit \nblit \nReads a range of elements from the first array and write them into the second. \n\n Slicing syntax is generally preferred, e.g.\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Esource\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 2)\u0022 class=\u0022fn\u0022\u003Earray2D\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E4\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E13\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E14\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\r\n \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs3\u0027, 3)\u0022 onmouseover=\u0022showTip(event, \u0027fs3\u0027, 3)\u0022 class=\u0022id\u0022\u003Etarget\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 4)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 4)\u0022 class=\u0022fn\u0022\u003Earray2D\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E12\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E12\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E12\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\r\n \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs3\u0027, 5)\u0022 onmouseover=\u0022showTip(event, \u0027fs3\u0027, 5)\u0022 class=\u0022id\u0022\u003Etarget\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E0..\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E1..\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022k\u0022\u003E\u0026lt;-\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 6)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 6)\u0022 class=\u0022id\u0022\u003Esource\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003Eval source: int array2d\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs2\u0022\u003Eval array2D: rows: #(\u0026#39;T seq) seq -\u0026gt; \u0026#39;T array2d\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs3\u0022\u003Eval target: int array2d\u003C/div\u003E\r\n\r\n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#init","title":"Array2D.init","content":"Array2D.init \ninit \nCreates an array given the dimensions and a generator function to compute the elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#create","title":"Array2D.create","content":"Array2D.create \ncreate \nCreates an array whose elements are all initially the given value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#zeroCreate","title":"Array2D.zeroCreate","content":"Array2D.zeroCreate \nzeroCreate \nCreates an array where the entries are initially Unchecked.defaultof\u003C\u0027T\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#initBased","title":"Array2D.initBased","content":"Array2D.initBased \ninitBased \nCreates a based array given the dimensions and a generator function to compute the elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#createBased","title":"Array2D.createBased","content":"Array2D.createBased \ncreateBased \nCreates a based array whose elements are all initially the given value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#zeroCreateBased","title":"Array2D.zeroCreateBased","content":"Array2D.zeroCreateBased \nzeroCreateBased \nCreates a based array where the entries are initially Unchecked.defaultof\u003C\u0027T\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#iter","title":"Array2D.iter","content":"Array2D.iter \niter \nApplies the given function to each element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#iteri","title":"Array2D.iteri","content":"Array2D.iteri \niteri \nApplies the given function to each element of the array.  The integer indices passed to the\n function indicates the index of element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#length1","title":"Array2D.length1","content":"Array2D.length1 \nlength1 \nReturns the length of an array in the first dimension.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#length2","title":"Array2D.length2","content":"Array2D.length2 \nlength2 \nReturns the length of an array in the second dimension.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#map","title":"Array2D.map","content":"Array2D.map \nmap \nBuilds a new array whose elements are the results of applying the given function\n to each of the elements of the array. \nFor non-zero-based arrays the basing on an input array will be propagated to the output\n array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#mapi","title":"Array2D.mapi","content":"Array2D.mapi \nmapi \nBuilds a new array whose elements are the results of applying the given function\n to each of the elements of the array. The integer indices passed to the\n function indicates the element being transformed. \nFor non-zero-based arrays the basing on an input array will be propagated to the output\n array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#rebase","title":"Array2D.rebase","content":"Array2D.rebase \nrebase \nBuilds a new array whose elements are the same as the input array but\n where a non-zero-based input array generates a corresponding zero-based\n output array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#set","title":"Array2D.set","content":"Array2D.set \nset \nSets the value of an element in an array. You can also use the syntax \u003Ccode\u003Earray.[index1,index2] \u0026lt;- value\u003C/code\u003E. \n\n Indexer syntax is generally preferred, e.g.\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 2)\u0022 class=\u0022m\u0022\u003EArray2D\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E\u003Cspan onmouseout=\u0022hideTip(event, \u0027fs3\u0027, 3)\u0022 onmouseover=\u0022showTip(event, \u0027fs3\u0027, 3)\u0022 class=\u0022id\u0022\u003EzeroCreate\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\r\n\r\n \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 4)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 4)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022k\u0022\u003E\u0026lt;-\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E4.0\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003EMultiple items\u003Cbr /\u003Eval array: float array2d\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype \u0026#39;T array = \u0026#39;T array\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs2\u0022\u003Emodule Array2D\n\nfrom Microsoft.FSharp.Collections\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs3\u0022\u003Eval zeroCreate: length1: int -\u0026gt; length2: int -\u0026gt; \u0026#39;T array2d\u003C/div\u003E\r\n\r\n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array2dmodule.html#get","title":"Array2D.get","content":"Array2D.get \nget \nFetches an element from a 2D array. You can also use the syntax \u003Ccode\u003Earray.[index1,index2]\u003C/code\u003E. \n\n Indexer syntax is generally preferred, e.g.\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 2)\u0022 class=\u0022fn\u0022\u003Earray2D\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E1.0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2.0\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3.0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E4.0\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\r\n\r\n \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 3)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 3)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003EMultiple items\u003Cbr /\u003Eval array: float array2d\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype \u0026#39;T array = \u0026#39;T array\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs2\u0022\u003Eval array2D: rows: #(\u0026#39;T seq) seq -\u0026gt; \u0026#39;T array2d\u003C/div\u003E\r\n\r\n\n Evaluates to \u003Ccode\u003E2.0\u003C/code\u003E.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html","title":"Array3D","content":"Array3D \nContains operations for working with rank 3 arrays. \n\n  See also \u003Ca href=\u0022https://learn.microsoft.com/dotnet/fsharp/language-reference/arrays\u0022\u003EF# Language Guide - Arrays\u003C/a\u003E.\n  \nArray3D.create \ncreate \nArray3D.init \ninit \nArray3D.get \nget \nArray3D.iter \niter \nArray3D.iteri \niteri \nArray3D.length1 \nlength1 \nArray3D.length2 \nlength2 \nArray3D.length3 \nlength3 \nArray3D.map \nmap \nArray3D.mapi \nmapi \nArray3D.set \nset \nArray3D.zeroCreate \nzeroCreate","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#create","title":"Array3D.create","content":"Array3D.create \ncreate \nCreates an array whose elements are all initially the given value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#init","title":"Array3D.init","content":"Array3D.init \ninit \nCreates an array given the dimensions and a generator function to compute the elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#get","title":"Array3D.get","content":"Array3D.get \nget \nFetches an element from a 3D array. You can also use the syntax \u0027array.[index1,index2,index3]\u0027 \n\n Indexer syntax is generally preferred, e.g.\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 2)\u0022 class=\u0022m\u0022\u003EArray3D\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E\u003Cspan onmouseout=\u0022hideTip(event, \u0027fs3\u0027, 3)\u0022 onmouseover=\u0022showTip(event, \u0027fs3\u0027, 3)\u0022 class=\u0022id\u0022\u003Einit\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022k\u0022\u003Efun\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs4\u0027, 4)\u0022 onmouseover=\u0022showTip(event, \u0027fs4\u0027, 4)\u0022 class=\u0022fn\u0022\u003Ei\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs5\u0027, 5)\u0022 onmouseover=\u0022showTip(event, \u0027fs5\u0027, 5)\u0022 class=\u0022fn\u0022\u003Ej\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs6\u0027, 6)\u0022 onmouseover=\u0022showTip(event, \u0027fs6\u0027, 6)\u0022 class=\u0022fn\u0022\u003Ek\u003C/span\u003E \u003Cspan class=\u0022k\u0022\u003E-\u0026gt;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E100\u003C/span\u003E\u003Cspan class=\u0022o\u0022\u003E*\u003C/span\u003E\u003Cspan onmouseout=\u0022hideTip(event, \u0027fs4\u0027, 7)\u0022 onmouseover=\u0022showTip(event, \u0027fs4\u0027, 7)\u0022 class=\u0022fn\u0022\u003Ei\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E\u002B\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022o\u0022\u003E*\u003C/span\u003E\u003Cspan onmouseout=\u0022hideTip(event, \u0027fs5\u0027, 8)\u0022 onmouseover=\u0022showTip(event, \u0027fs5\u0027, 8)\u0022 class=\u0022fn\u0022\u003Ej\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E\u002B\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs6\u0027, 9)\u0022 onmouseover=\u0022showTip(event, \u0027fs6\u0027, 9)\u0022 class=\u0022fn\u0022\u003Ek\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E)\u003C/span\u003E\r\n\r\n \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 10)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 10)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003EMultiple items\u003Cbr /\u003Eval array: int array3d\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype \u0026#39;T array = \u0026#39;T array\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs2\u0022\u003Emodule Array3D\n\nfrom Microsoft.FSharp.Collections\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs3\u0022\u003Eval init: length1: int -\u0026gt; length2: int -\u0026gt; length3: int -\u0026gt; initializer: (int -\u0026gt; int -\u0026gt; int -\u0026gt; \u0026#39;T) -\u0026gt; \u0026#39;T array3d\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs4\u0022\u003Eval i: int\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs5\u0022\u003Eval j: int\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs6\u0022\u003Eval k: int\u003C/div\u003E\r\n\r\n\n Evaluates to \u003Ccode\u003E11\u003C/code\u003E.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#iter","title":"Array3D.iter","content":"Array3D.iter \niter \nApplies the given function to each element of the array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#iteri","title":"Array3D.iteri","content":"Array3D.iteri \niteri \nApplies the given function to each element of the array. The integer indices passed to the\n function indicates the index of element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#length1","title":"Array3D.length1","content":"Array3D.length1 \nlength1 \nReturns the length of an array in the first dimension  ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#length2","title":"Array3D.length2","content":"Array3D.length2 \nlength2 \nReturns the length of an array in the second dimension.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#length3","title":"Array3D.length3","content":"Array3D.length3 \nlength3 \nReturns the length of an array in the third dimension.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#map","title":"Array3D.map","content":"Array3D.map \nmap \nBuilds a new array whose elements are the results of applying the given function\n to each of the elements of the array. \nFor non-zero-based arrays the basing on an input array will be propagated to the output\n array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#mapi","title":"Array3D.mapi","content":"Array3D.mapi \nmapi \nBuilds a new array whose elements are the results of applying the given function\n to each of the elements of the array. The integer indices passed to the\n function indicates the element being transformed. \nFor non-zero-based arrays the basing on an input array will be propagated to the output\n array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#set","title":"Array3D.set","content":"Array3D.set \nset \nSets the value of an element in an array. You can also\n use the syntax \u0027array.[index1,index2,index3] \u003C- value\u0027. \n\n Indexer syntax is generally preferred, e.g.\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 2)\u0022 class=\u0022m\u0022\u003EArray3D\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E\u003Cspan onmouseout=\u0022hideTip(event, \u0027fs3\u0027, 3)\u0022 onmouseover=\u0022showTip(event, \u0027fs3\u0027, 3)\u0022 class=\u0022id\u0022\u003EzeroCreate\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E\r\n\r\n \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 4)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 4)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E\u0026lt;\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E4.0\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003EMultiple items\u003Cbr /\u003Eval array: float array3d\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype \u0026#39;T array = \u0026#39;T array\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs2\u0022\u003Emodule Array3D\n\nfrom Microsoft.FSharp.Collections\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs3\u0022\u003Eval zeroCreate: length1: int -\u0026gt; length2: int -\u0026gt; length3: int -\u0026gt; \u0026#39;T array3d\u003C/div\u003E\r\n\r\n\n Evaluates to \u003Ccode\u003E11\u003C/code\u003E.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array3dmodule.html#zeroCreate","title":"Array3D.zeroCreate","content":"Array3D.zeroCreate \nzeroCreate \nCreates an array where the entries are initially the \u0022default\u0022 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html","title":"Array4D","content":"Array4D \nContains operations for working with rank 4 arrays.  \nArray4D.create \ncreate \nArray4D.init \ninit \nArray4D.length1 \nlength1 \nArray4D.length2 \nlength2 \nArray4D.length3 \nlength3 \nArray4D.length4 \nlength4 \nArray4D.zeroCreate \nzeroCreate \nArray4D.get \nget \nArray4D.set \nset","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html#create","title":"Array4D.create","content":"Array4D.create \ncreate \nCreates an array whose elements are all initially the given value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html#init","title":"Array4D.init","content":"Array4D.init \ninit \nCreates an array given the dimensions and a generator function to compute the elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html#length1","title":"Array4D.length1","content":"Array4D.length1 \nlength1 \nReturns the length of an array in the first dimension  ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html#length2","title":"Array4D.length2","content":"Array4D.length2 \nlength2 \nReturns the length of an array in the second dimension.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html#length3","title":"Array4D.length3","content":"Array4D.length3 \nlength3 \nReturns the length of an array in the third dimension.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html#length4","title":"Array4D.length4","content":"Array4D.length4 \nlength4 \nReturns the length of an array in the fourth dimension.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html#zeroCreate","title":"Array4D.zeroCreate","content":"Array4D.zeroCreate \nzeroCreate \nCreates an array where the entries are initially the \u0022default\u0022 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html#get","title":"Array4D.get","content":"Array4D.get \nget \nFetches an element from a 4D array. You can also use the syntax \u0027array.[index1,index2,index3,index4]\u0027 \n\n Indexer syntax is generally preferred, e.g.\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E:\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 2)\u0022 class=\u0022vt\u0022\u003Efloat\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs3\u0027, 3)\u0022 onmouseover=\u0022showTip(event, \u0027fs3\u0027, 3)\u0022 class=\u0022m\u0022\u003EArray4D\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E\u003Cspan onmouseout=\u0022hideTip(event, \u0027fs4\u0027, 4)\u0022 onmouseover=\u0022showTip(event, \u0027fs4\u0027, 4)\u0022 class=\u0022id\u0022\u003EzeroCreate\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E4\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E5\u003C/span\u003E\r\n\r\n \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 5)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 5)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003EMultiple items\u003Cbr /\u003Eval array: float array4d\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype \u0026#39;T array = \u0026#39;T array\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs2\u0022\u003EMultiple items\u003Cbr /\u003Eval float: value: \u0026#39;T -\u0026gt; float (requires member op_Explicit)\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype float = System.Double\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype float\u0026lt;\u0026#39;Measure\u0026gt; =\n  float\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs3\u0022\u003Emodule Array4D\n\nfrom Microsoft.FSharp.Collections\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs4\u0022\u003Eval zeroCreate: length1: int -\u0026gt; length2: int -\u0026gt; length3: int -\u0026gt; length4: int -\u0026gt; \u0026#39;T array4d\u003C/div\u003E\r\n\r\n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-array4dmodule.html#set","title":"Array4D.set","content":"Array4D.set \nset \nSets the value of an element in an array. You can also\n use the syntax \u0027array.[index1,index2,index3,index4] \u003C- value\u0027. \n\n Indexer syntax is generally preferred, e.g.\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E \u003Cspan class=\u0022k\u0022\u003Elet\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E:\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 2)\u0022 class=\u0022vt\u0022\u003Efloat\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs3\u0027, 3)\u0022 onmouseover=\u0022showTip(event, \u0027fs3\u0027, 3)\u0022 class=\u0022m\u0022\u003EArray4D\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E\u003Cspan onmouseout=\u0022hideTip(event, \u0027fs4\u0027, 4)\u0022 onmouseover=\u0022showTip(event, \u0027fs4\u0027, 4)\u0022 class=\u0022id\u0022\u003EzeroCreate\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E4\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E5\u003C/span\u003E\r\n\r\n \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 5)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 5)\u0022 class=\u0022id\u0022\u003Earray\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022n\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E]\u003C/span\u003E \u003Cspan class=\u0022k\u0022\u003E\u0026lt;-\u003C/span\u003E \u003Cspan class=\u0022n\u0022\u003E5.0\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003EMultiple items\u003Cbr /\u003Eval array: float array4d\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype \u0026#39;T array = \u0026#39;T array\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs2\u0022\u003EMultiple items\u003Cbr /\u003Eval float: value: \u0026#39;T -\u0026gt; float (requires member op_Explicit)\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype float = System.Double\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype float\u0026lt;\u0026#39;Measure\u0026gt; =\n  float\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs3\u0022\u003Emodule Array4D\n\nfrom Microsoft.FSharp.Collections\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs4\u0022\u003Eval zeroCreate: length1: int -\u0026gt; length2: int -\u0026gt; length3: int -\u0026gt; length4: int -\u0026gt; \u0026#39;T array4d\u003C/div\u003E\r\n\r\n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-comparisonidentity.html","title":"ComparisonIdentity","content":"ComparisonIdentity \nCommon notions of value ordering implementing the \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1\u0022\u003EIComparer\u003C/a\u003E\n interface, for constructing sorted data structures and performing sorting operations. \nComparisonIdentity.Structural \nStructural \nComparisonIdentity.NonStructural \nNonStructural \nComparisonIdentity.FromFunction \nFromFunction","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-comparisonidentity.html#Structural","title":"ComparisonIdentity.Structural","content":"ComparisonIdentity.Structural \nStructural \nGet an implementation of comparison semantics using structural comparison.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-comparisonidentity.html#NonStructural","title":"ComparisonIdentity.NonStructural","content":"ComparisonIdentity.NonStructural \nNonStructural \nGet an implementation of comparison semantics using non-structural comparison.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-comparisonidentity.html#FromFunction","title":"ComparisonIdentity.FromFunction","content":"ComparisonIdentity.FromFunction \nFromFunction \nGet an implementation of comparison semantics using the given function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-hashidentity.html","title":"HashIdentity","content":"HashIdentity \nCommon notions of value identity implementing the \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.iequalitycomparer-1\u0022\u003EIEqualityComparer\u003C/a\u003E\n interface, for constructing \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2\u0022\u003EDictionary\u003C/a\u003E objects and other collections \nHashIdentity.Structural \nStructural \nHashIdentity.NonStructural \nNonStructural \nHashIdentity.LimitedStructural \nLimitedStructural \nHashIdentity.Reference \nReference \nHashIdentity.FromFunctions \nFromFunctions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-hashidentity.html#Structural","title":"HashIdentity.Structural","content":"HashIdentity.Structural \nStructural \nGet an implementation of equality semantics using structural equality and structural hashing.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-hashidentity.html#NonStructural","title":"HashIdentity.NonStructural","content":"HashIdentity.NonStructural \nNonStructural \nGet an implementation of equality semantics using non-structural equality and non-structural hashing.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-hashidentity.html#LimitedStructural","title":"HashIdentity.LimitedStructural","content":"HashIdentity.LimitedStructural \nLimitedStructural \nGet an implementation of equality semantics using limited structural equality and structural hashing.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-hashidentity.html#Reference","title":"HashIdentity.Reference","content":"HashIdentity.Reference \nReference \nGet an implementation of equality semantics using reference equality and reference hashing.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-hashidentity.html#FromFunctions","title":"HashIdentity.FromFunctions","content":"HashIdentity.FromFunctions \nFromFunctions \nGet an implementation of equality semantics using the given functions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html","title":"List","content":"List \nContains operations for working with values of type \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-list-1.html\u0022\u003Elist\u003C/a\u003E. \nList.allPairs \nallPairs \nList.append \nappend \nList.average \naverage \nList.averageBy \naverageBy \nList.choose \nchoose \nList.chunkBySize \nchunkBySize \nList.collect \ncollect \nList.compareWith \ncompareWith \nList.concat \nconcat \nList.contains \ncontains \nList.distinct \ndistinct \nList.distinctBy \ndistinctBy \nList.countBy \ncountBy \nList.splitInto \nsplitInto \nList.empty \nempty \nList.except \nexcept \nList.exactlyOne \nexactlyOne \nList.tryExactlyOne \ntryExactlyOne \nList.exists \nexists \nList.exists2 \nexists2 \nList.find \nfind \nList.findBack \nfindBack \nList.findIndex \nfindIndex \nList.findIndexBack \nfindIndexBack \nList.filter \nfilter \nList.fold \nfold \nList.fold2 \nfold2 \nList.foldBack \nfoldBack \nList.foldBack2 \nfoldBack2 \nList.forall \nforall \nList.forall2 \nforall2 \nList.groupBy \ngroupBy \nList.head \nhead \nList.indexed \nindexed \nList.init \ninit \nList.isEmpty \nisEmpty \nList.item \nitem \nList.iter \niter \nList.iter2 \niter2 \nList.iteri \niteri \nList.iteri2 \niteri2 \nList.last \nlast \nList.length \nlength \nList.tryLast \ntryLast \nList.map \nmap \nList.map2 \nmap2 \nList.map3 \nmap3 \nList.mapFold \nmapFold \nList.mapFoldBack \nmapFoldBack \nList.mapi \nmapi \nList.mapi2 \nmapi2 \nList.max \nmax \nList.maxBy \nmaxBy \nList.min \nmin \nList.minBy \nminBy \nList.nth \nnth \nList.ofArray \nofArray \nList.ofSeq \nofSeq \nList.pairwise \npairwise \nList.partition \npartition \nList.pick \npick \nList.permute \npermute \nList.reduce \nreduce \nList.reduceBack \nreduceBack \nList.replicate \nreplicate \nList.rev \nrev \nList.scan \nscan \nList.scanBack \nscanBack \nList.singleton \nsingleton \nList.skip \nskip \nList.skipWhile \nskipWhile \nList.sortWith \nsortWith \nList.sortBy \nsortBy \nList.sort \nsort \nList.splitAt \nsplitAt \nList.sortByDescending \nsortByDescending \nList.sortDescending \nsortDescending \nList.sum \nsum \nList.sumBy \nsumBy \nList.tail \ntail \nList.take \ntake \nList.takeWhile \ntakeWhile \nList.toArray \ntoArray \nList.toSeq \ntoSeq \nList.tryHead \ntryHead \nList.transpose \ntranspose \nList.truncate \ntruncate \nList.tryPick \ntryPick \nList.tryFind \ntryFind \nList.tryFindBack \ntryFindBack \nList.tryFindIndex \ntryFindIndex \nList.tryItem \ntryItem \nList.tryFindIndexBack \ntryFindIndexBack \nList.unfold \nunfold \nList.unzip \nunzip \nList.unzip3 \nunzip3 \nList.where \nwhere \nList.windowed \nwindowed \nList.zip \nzip \nList.zip3 \nzip3 \nList.removeAt \nremoveAt \nList.removeManyAt \nremoveManyAt \nList.updateAt \nupdateAt \nList.insertAt \ninsertAt \nList.insertManyAt \ninsertManyAt \nList.randomShuffle \nrandomShuffle \nList.randomShuffleWith \nrandomShuffleWith \nList.randomShuffleBy \nrandomShuffleBy \nList.randomChoice \nrandomChoice \nList.randomChoiceWith \nrandomChoiceWith \nList.randomChoiceBy \nrandomChoiceBy \nList.randomChoices \nrandomChoices \nList.randomChoicesWith \nrandomChoicesWith \nList.randomChoicesBy \nrandomChoicesBy \nList.randomSample \nrandomSample \nList.randomSampleWith \nrandomSampleWith \nList.randomSampleBy \nrandomSampleBy","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#allPairs","title":"List.allPairs","content":"List.allPairs \nallPairs \nReturns a new list that contains all pairings of elements from two lists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#append","title":"List.append","content":"List.append \nappend \nReturns a new list that contains the elements of the first list\n followed by elements of the second list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#average","title":"List.average","content":"List.average \naverage \nReturns the average of the values in a non-empty list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#averageBy","title":"List.averageBy","content":"List.averageBy \naverageBy \nReturns the average of values in a list generated by applying a function to each element of the list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#choose","title":"List.choose","content":"List.choose \nchoose \nApplies a function to each element in a list and then returns\n a list of values \u003Ccode\u003Ev\u003C/code\u003E where the applied function returned \u003Ccode\u003ESome(v)\u003C/code\u003E.\n \n Returns an empty list when the input list is empty or when the applied chooser function\n returns \u003Ccode\u003ENone\u003C/code\u003E for all elements.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#chunkBySize","title":"List.chunkBySize","content":"List.chunkBySize \nchunkBySize \nDivides the input list into lists (chunks) of size at most \u003Ccode\u003EchunkSize\u003C/code\u003E.\n Returns a new list containing the generated lists (chunks) as its elements.\n \n Returns an empty list when the input list is empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#collect","title":"List.collect","content":"List.collect \ncollect \nFor each element of the list, applies the given function. Concatenates all the results and returns the combined list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#compareWith","title":"List.compareWith","content":"List.compareWith \ncompareWith \nCompares two lists using the given comparison function, element by element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#concat","title":"List.concat","content":"List.concat \nconcat \nReturns a new list that contains the elements of each of the lists in order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#contains","title":"List.contains","content":"List.contains \ncontains \nTests if the list contains the specified element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#distinct","title":"List.distinct","content":"List.distinct \ndistinct \nReturns a list that contains no duplicate entries according to generic hash and\n equality comparisons on the entries.\n If an element occurs multiple times in the list then the later occurrences are discarded.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#distinctBy","title":"List.distinctBy","content":"List.distinctBy \ndistinctBy \nReturns a list that contains no duplicate entries according to the \n generic hash and equality comparisons on the keys returned by the given key-generating function.\n If an element occurs multiple times in the list then the later occurrences are discarded.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#countBy","title":"List.countBy","content":"List.countBy \ncountBy \nApplies a key-generating function to each element of a list and returns a list yielding unique\n keys and their number of occurrences in the original list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#splitInto","title":"List.splitInto","content":"List.splitInto \nsplitInto \nSplits the input list into at most \u003Ccode\u003Ecount\u003C/code\u003E chunks.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#empty","title":"List.empty","content":"List.empty \nempty \nReturns an empty list of the given type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#except","title":"List.except","content":"List.except \nexcept \nReturns a new list with the distinct elements of the input list which do not appear in the itemsToExclude sequence,\n using generic hash and equality comparisons to compare values.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#exactlyOne","title":"List.exactlyOne","content":"List.exactlyOne \nexactlyOne \nReturns the only element of the list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tryExactlyOne","title":"List.tryExactlyOne","content":"List.tryExactlyOne \ntryExactlyOne \nReturns the only element of the list or \u003Ccode\u003ENone\u003C/code\u003E if it is empty or contains more than one element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#exists","title":"List.exists","content":"List.exists \nexists \nTests if any element of the list satisfies the given predicate. \nThe predicate is applied to the elements of the input list. If any application \n returns true then the overall result is true and no further elements are tested. \n Otherwise, false is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#exists2","title":"List.exists2","content":"List.exists2 \nexists2 \nTests if any pair of corresponding elements of the lists satisfies the given predicate. \nThe predicate is applied to matching elements in the two collections up to the lesser of the \n two lengths of the collections. If any application returns true then the overall result is \n true and no further elements are tested. Otherwise, if one collections is longer \n than the other then the \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E exception is raised. \n Otherwise, false is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#find","title":"List.find","content":"List.find \nfind \nReturns the first element for which the given function returns True.\n Raises \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#findBack","title":"List.findBack","content":"List.findBack \nfindBack \nReturns the last element for which the given function returns True.\n Raises \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#findIndex","title":"List.findIndex","content":"List.findIndex \nfindIndex \nReturns the index of the first element in the list\n that satisfies the given predicate.\n Raises \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#findIndexBack","title":"List.findIndexBack","content":"List.findIndexBack \nfindIndexBack \nReturns the index of the last element in the list\n that satisfies the given predicate.\n Raises \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#filter","title":"List.filter","content":"List.filter \nfilter \nReturns a new collection containing only the elements of the collection\n for which the given predicate returns \u0022true\u0022","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#fold","title":"List.fold","content":"List.fold \nfold \nApplies a function to each element of the collection, threading an accumulator argument\n through the computation. Take the second argument, and apply the function to it\n and the first element of the list. Then feed this result into the function along\n with the second element and so on. Return the final result.\n If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then \n computes \u003Ccode\u003Ef (... (f s i0) i1 ...) iN\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#fold2","title":"List.fold2","content":"List.fold2 \nfold2 \nApplies a function to corresponding elements of two collections, threading an accumulator argument\n through the computation. The collections must have identical sizes.\n If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E and \u003Ccode\u003Ej0...jN\u003C/code\u003E\n then computes \u003Ccode\u003Ef (... (f s i0 j0)...) iN jN\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#foldBack","title":"List.foldBack","content":"List.foldBack \nfoldBack \nApplies a function to each element of the collection, starting from the end, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then \n computes \u003Ccode\u003Ef i0 (...(f iN s))\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#foldBack2","title":"List.foldBack2","content":"List.foldBack2 \nfoldBack2 \nApplies a function to corresponding elements of two collections, threading an accumulator argument\n through the computation. The collections must have identical sizes.\n If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E and \u003Ccode\u003Ej0...jN\u003C/code\u003E\n then computes \u003Ccode\u003Ef i0 j0 (...(f iN jN s))\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#forall","title":"List.forall","content":"List.forall \nforall \nTests if all elements of the collection satisfy the given predicate. \nThe predicate is applied to the elements of the input list. If any application \n returns false then the overall result is false and no further elements are tested. \n Otherwise, true is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#forall2","title":"List.forall2","content":"List.forall2 \nforall2 \nTests if all corresponding elements of the collection satisfy the given predicate pairwise. \nThe predicate is applied to matching elements in the two collections up to the lesser of the \n two lengths of the collections. If any application returns false then the overall result is \n false and no further elements are tested. Otherwise, if one collection is longer \n than the other then the \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E exception is raised. \n Otherwise, true is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#groupBy","title":"List.groupBy","content":"List.groupBy \ngroupBy \nApplies a key-generating function to each element of a list and yields a list of \n unique keys. Each unique key contains a list of all elements that match \n to this key.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#head","title":"List.head","content":"List.head \nhead \nReturns the first element of the list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#indexed","title":"List.indexed","content":"List.indexed \nindexed \nReturns a new list whose elements are the corresponding elements\n of the input list paired with the index (from 0) of each element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#init","title":"List.init","content":"List.init \ninit \nCreates a list by calling the given generator on each index.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#isEmpty","title":"List.isEmpty","content":"List.isEmpty \nisEmpty \nReturns true if the list contains no elements, false otherwise.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#item","title":"List.item","content":"List.item \nitem \nIndexes into the list. The first element has index 0.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#iter","title":"List.iter","content":"List.iter \niter \nApplies the given function to each element of the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#iter2","title":"List.iter2","content":"List.iter2 \niter2 \nApplies the given function to two collections simultaneously. The\n collections must have identical sizes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#iteri","title":"List.iteri","content":"List.iteri \niteri \nApplies the given function to each element of the collection. The integer passed to the\n function indicates the index of the element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#iteri2","title":"List.iteri2","content":"List.iteri2 \niteri2 \nApplies the given function to two collections simultaneously. The\n collections must have identical sizes. The integer passed to the\n function indicates the index of the element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#last","title":"List.last","content":"List.last \nlast \nReturns the last element of the list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#length","title":"List.length","content":"List.length \nlength \nReturns the length of the list. \nThe notation \u003Ccode\u003Earray.Length\u003C/code\u003E is preferred.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tryLast","title":"List.tryLast","content":"List.tryLast \ntryLast \nReturns the last element of the list.\n Return \u003Ccode\u003ENone\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#map","title":"List.map","content":"List.map \nmap \nBuilds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#map2","title":"List.map2","content":"List.map2 \nmap2 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding elements of the two collections pairwise.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#map3","title":"List.map3","content":"List.map3 \nmap3 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding elements of the three collections simultaneously.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#mapFold","title":"List.mapFold","content":"List.mapFold \nmapFold \nCombines map and fold. Builds a new list whose elements are the results of applying the given function\n to each of the elements of the input list. The function is also used to accumulate a final value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#mapFoldBack","title":"List.mapFoldBack","content":"List.mapFoldBack \nmapFoldBack \nCombines map and foldBack. Builds a new list whose elements are the results of applying the given function\n to each of the elements of the input list. The function is also used to accumulate a final value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#mapi","title":"List.mapi","content":"List.mapi \nmapi \nBuilds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection. The integer index passed to the\n function indicates the index (from 0) of the element being transformed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#mapi2","title":"List.mapi2","content":"List.mapi2 \nmapi2 \nLike mapi, but mapping corresponding elements from two lists of equal length.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#max","title":"List.max","content":"List.max \nmax \nReturn the greatest of all elements of the list, compared via Operators.max. \nRaises \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E if \u003Ccode\u003Elist\u003C/code\u003E is empty","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#maxBy","title":"List.maxBy","content":"List.maxBy \nmaxBy \nReturns the greatest of all elements of the list, compared via Operators.max on the function result. \nRaises \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E if \u003Ccode\u003Elist\u003C/code\u003E is empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#min","title":"List.min","content":"List.min \nmin \nReturns the lowest of all elements of the list, compared via Operators.min. \nRaises \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E if \u003Ccode\u003Elist\u003C/code\u003E is empty","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#minBy","title":"List.minBy","content":"List.minBy \nminBy \nReturns the lowest of all elements of the list, compared via Operators.min on the function result \nRaises \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E if \u003Ccode\u003Elist\u003C/code\u003E is empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#nth","title":"List.nth","content":"List.nth \nnth \nIndexes into the list. The first element has index 0.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#ofArray","title":"List.ofArray","content":"List.ofArray \nofArray \nBuilds a list from the given array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#ofSeq","title":"List.ofSeq","content":"List.ofSeq \nofSeq \nBuilds a new list from the given enumerable object.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#pairwise","title":"List.pairwise","content":"List.pairwise \npairwise \nReturns a list of each element in the input list and its predecessor, with the\n exception of the first element which is only returned as the predecessor of the second element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#partition","title":"List.partition","content":"List.partition \npartition \nSplits the collection into two collections, containing the \n elements for which the given predicate returns True and False\n respectively. Element order is preserved in both of the created lists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#pick","title":"List.pick","content":"List.pick \npick \nApplies the given function to successive elements, returning the first\n result where function returns \u003Ccode\u003ESome(x)\u003C/code\u003E for some x. If no such\n element exists then raise \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception\u0022\u003EKeyNotFoundException\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#permute","title":"List.permute","content":"List.permute \npermute \nReturns a list with all elements permuted according to the\n specified permutation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#reduce","title":"List.reduce","content":"List.reduce \nreduce \nApply a function to each element of the collection, threading an accumulator argument\n through the computation. Apply the function to the first two elements of the list.\n Then feed this result into the function along with the third element and so on. \n Return the final result. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then computes \n \u003Ccode\u003Ef (... (f i0 i1) i2 ...) iN\u003C/code\u003E. \nRaises \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E if \u003Ccode\u003Elist\u003C/code\u003E is empty","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#reduceBack","title":"List.reduceBack","content":"List.reduceBack \nreduceBack \nApplies a function to each element of the collection, starting from the end, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E then computes \n \u003Ccode\u003Ef i0 (...(f iN-1 iN))\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#replicate","title":"List.replicate","content":"List.replicate \nreplicate \nCreates a list by replicating the given initial value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#rev","title":"List.rev","content":"List.rev \nrev \nReturns a new list with the elements in reverse order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#scan","title":"List.scan","content":"List.scan \nscan \nApplies a function to each element of the collection, threading an accumulator argument\n through the computation. Take the second argument, and apply the function to it\n and the first element of the list. Then feed this result into the function along\n with the second element and so on. Returns the list of intermediate results and the final result.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#scanBack","title":"List.scanBack","content":"List.scanBack \nscanBack \nLike \u003Ccode\u003EfoldBack\u003C/code\u003E, but returns both the intermediary and final results","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#singleton","title":"List.singleton","content":"List.singleton \nsingleton \nReturns a list that contains one item only.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#skip","title":"List.skip","content":"List.skip \nskip \nReturns the list after removing the first N elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#skipWhile","title":"List.skipWhile","content":"List.skipWhile \nskipWhile \nBypasses elements in a list while the given predicate returns True, and then returns\n the remaining elements of the list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#sortWith","title":"List.sortWith","content":"List.sortWith \nsortWith \nSorts the given list using the given comparison function. \nThis is a stable sort, i.e. the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#sortBy","title":"List.sortBy","content":"List.sortBy \nsortBy \nSorts the given list using keys given by the given projection. Keys are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is a stable sort, i.e. the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#sort","title":"List.sort","content":"List.sort \nsort \nSorts the given list using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is a stable sort, i.e. the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#splitAt","title":"List.splitAt","content":"List.splitAt \nsplitAt \nSplits a list into two lists, at the given index.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#sortByDescending","title":"List.sortByDescending","content":"List.sortByDescending \nsortByDescending \nSorts the given list in descending order using keys given by the given projection. Keys are compared using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is a stable sort, i.e. the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#sortDescending","title":"List.sortDescending","content":"List.sortDescending \nsortDescending \nSorts the given list in descending order using \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis is a stable sort, i.e. the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#sum","title":"List.sum","content":"List.sum \nsum \nReturns the sum of the elements in the list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#sumBy","title":"List.sumBy","content":"List.sumBy \nsumBy \nReturns the sum of the results generated by applying the function to each element of the list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tail","title":"List.tail","content":"List.tail \ntail \nReturns the list after removing the first element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#take","title":"List.take","content":"List.take \ntake \nReturns the first N elements of the list. \nThrows \u003Ccode\u003EInvalidOperationException\u003C/code\u003E\n if the count exceeds the number of elements in the list. \u003Ccode\u003EList.truncate\u003C/code\u003E\n returns as many items as the list contains instead of throwing an exception.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#takeWhile","title":"List.takeWhile","content":"List.takeWhile \ntakeWhile \nReturns a list that contains all elements of the original list while the \n given predicate returns True, and then returns no further elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#toArray","title":"List.toArray","content":"List.toArray \ntoArray \nBuilds an array from the given list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#toSeq","title":"List.toSeq","content":"List.toSeq \ntoSeq \nViews the given list as a sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tryHead","title":"List.tryHead","content":"List.tryHead \ntryHead \nReturns the first element of the list, or\n \u003Ccode\u003ENone\u003C/code\u003E if the list is empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#transpose","title":"List.transpose","content":"List.transpose \ntranspose \nReturns the transpose of the given sequence of lists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#truncate","title":"List.truncate","content":"List.truncate \ntruncate \nReturns at most N elements in a new list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tryPick","title":"List.tryPick","content":"List.tryPick \ntryPick \nApplies the given function to successive elements, returning \u003Ccode\u003ESome(x)\u003C/code\u003E the first\n result where function returns \u003Ccode\u003ESome(x)\u003C/code\u003E for some x. If no such element \n exists then return \u003Ccode\u003ENone\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tryFind","title":"List.tryFind","content":"List.tryFind \ntryFind \nReturns the first element for which the given function returns True.\n Return None if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tryFindBack","title":"List.tryFindBack","content":"List.tryFindBack \ntryFindBack \nReturns the last element for which the given function returns True.\n Return None if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tryFindIndex","title":"List.tryFindIndex","content":"List.tryFindIndex \ntryFindIndex \nReturns the index of the first element in the list\n that satisfies the given predicate.\n Return \u003Ccode\u003ENone\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tryItem","title":"List.tryItem","content":"List.tryItem \ntryItem \nTries to find the nth element in the list.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if index is negative or the list does not contain enough elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#tryFindIndexBack","title":"List.tryFindIndexBack","content":"List.tryFindIndexBack \ntryFindIndexBack \nReturns the index of the last element in the list\n that satisfies the given predicate.\n Return \u003Ccode\u003ENone\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#unfold","title":"List.unfold","content":"List.unfold \nunfold \nReturns a list that contains the elements generated by the given computation.\n The generator is repeatedly called to build the list until it returns \u003Ccode\u003ENone\u003C/code\u003E.\n The given initial \u003Ccode\u003Estate\u003C/code\u003E argument is passed to the element generator. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#unzip","title":"List.unzip","content":"List.unzip \nunzip \nSplits a list of pairs into two lists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#unzip3","title":"List.unzip3","content":"List.unzip3 \nunzip3 \nSplits a list of triples into three lists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#where","title":"List.where","content":"List.where \nwhere \nReturns a new list containing only the elements of the list\n for which the given predicate returns \u0022true\u0022 \nThis is identical to \u003Ccode\u003EList.filter\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#windowed","title":"List.windowed","content":"List.windowed \nwindowed \nReturns a list of sliding windows containing elements drawn from the input\n list. Each window is returned as a fresh list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#zip","title":"List.zip","content":"List.zip \nzip \nCombines the two lists into a list of pairs. The two lists must have equal lengths.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#zip3","title":"List.zip3","content":"List.zip3 \nzip3 \nCombines the three lists into a list of triples. The lists must have equal lengths.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#removeAt","title":"List.removeAt","content":"List.removeAt \nremoveAt \nReturn a new list with the item at a given index removed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#removeManyAt","title":"List.removeManyAt","content":"List.removeManyAt \nremoveManyAt \nReturn a new list with the number of items starting at a given index removed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#updateAt","title":"List.updateAt","content":"List.updateAt \nupdateAt \nReturn a new list with the item at a given index set to the new value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#insertAt","title":"List.insertAt","content":"List.insertAt \ninsertAt \nReturn a new list with a new item inserted before the given index.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#insertManyAt","title":"List.insertManyAt","content":"List.insertManyAt \ninsertManyAt \nReturn a new list with new items inserted before the given index.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomShuffle","title":"List.randomShuffle","content":"List.randomShuffle \nrandomShuffle \nReturn a new list shuffled in a random order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomShuffleWith","title":"List.randomShuffleWith","content":"List.randomShuffleWith \nrandomShuffleWith \nReturn a new list shuffled in a random order with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomShuffleBy","title":"List.randomShuffleBy","content":"List.randomShuffleBy \nrandomShuffleBy \nReturn a new list shuffled in a random order using the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomChoice","title":"List.randomChoice","content":"List.randomChoice \nrandomChoice \nReturns a random element from the given list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomChoiceWith","title":"List.randomChoiceWith","content":"List.randomChoiceWith \nrandomChoiceWith \nReturns a random element from the given list with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance, each element can be selected multiple times.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomChoiceBy","title":"List.randomChoiceBy","content":"List.randomChoiceBy \nrandomChoiceBy \nReturns a random element from the given list using the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomChoices","title":"List.randomChoices","content":"List.randomChoices \nrandomChoices \nReturns a list of random elements from the given list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomChoicesWith","title":"List.randomChoicesWith","content":"List.randomChoicesWith \nrandomChoicesWith \nReturns a list of random elements from the given list with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance, each element can be selected multiple times.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomChoicesBy","title":"List.randomChoicesBy","content":"List.randomChoicesBy \nrandomChoicesBy \nReturns a list of random elements from the given list using the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomSample","title":"List.randomSample","content":"List.randomSample \nrandomSample \nReturns a random sample of elements from the given list, each element can be selected only once.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomSampleWith","title":"List.randomSampleWith","content":"List.randomSampleWith \nrandomSampleWith \nReturns a random sample of elements from the given list with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance, each element can be selected only once.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html#randomSampleBy","title":"List.randomSampleBy","content":"List.randomSampleBy \nrandomSampleBy \nReturns a random sample of elements from the given list using the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function, each element can be selected only once.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html","title":"Map","content":"Map \nContains operations for working with values of type \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html\u0022\u003EMap\u003C/a\u003E. \nMap.add \nadd \nMap.change \nchange \nMap.ofList \nofList \nMap.ofArray \nofArray \nMap.ofSeq \nofSeq \nMap.toSeq \ntoSeq \nMap.toList \ntoList \nMap.toArray \ntoArray \nMap.isEmpty \nisEmpty \nMap.empty \nempty \nMap.find \nfind \nMap.tryPick \ntryPick \nMap.pick \npick \nMap.foldBack \nfoldBack \nMap.fold \nfold \nMap.iter \niter \nMap.exists \nexists \nMap.filter \nfilter \nMap.forall \nforall \nMap.map \nmap \nMap.containsKey \ncontainsKey \nMap.partition \npartition \nMap.remove \nremove \nMap.tryFind \ntryFind \nMap.findKey \nfindKey \nMap.tryFindKey \ntryFindKey \nMap.count \ncount \nMap.keys \nkeys \nMap.values \nvalues \nMap.minKeyValue \nminKeyValue \nMap.maxKeyValue \nmaxKeyValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#add","title":"Map.add","content":"Map.add \nadd \nReturns a new map with the binding added to the given map.\n If a binding with the given key already exists in the input map, the existing binding is replaced by the new binding in the result map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#change","title":"Map.change","content":"Map.change \nchange \nReturns a new map with the value stored under key changed according to f.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#ofList","title":"Map.ofList","content":"Map.ofList \nofList \nReturns a new map made from the given bindings.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#ofArray","title":"Map.ofArray","content":"Map.ofArray \nofArray \nReturns a new map made from the given bindings.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#ofSeq","title":"Map.ofSeq","content":"Map.ofSeq \nofSeq \nReturns a new map made from the given bindings.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#toSeq","title":"Map.toSeq","content":"Map.toSeq \ntoSeq \nViews the collection as an enumerable sequence of pairs.\n The sequence will be ordered by the keys of the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#toList","title":"Map.toList","content":"Map.toList \ntoList \nReturns a list of all key-value pairs in the mapping.\n The list will be ordered by the keys of the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#toArray","title":"Map.toArray","content":"Map.toArray \ntoArray \nReturns an array of all key-value pairs in the mapping.\n The array will be ordered by the keys of the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#isEmpty","title":"Map.isEmpty","content":"Map.isEmpty \nisEmpty \nIs the map empty?","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#empty","title":"Map.empty","content":"Map.empty \nempty \nThe empty map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#find","title":"Map.find","content":"Map.find \nfind \nLookup an element in the map, raising \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no binding\n exists in the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#tryPick","title":"Map.tryPick","content":"Map.tryPick \ntryPick \nSearches the map looking for the first element where the given function returns a \u003Ccode\u003ESome\u003C/code\u003E value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#pick","title":"Map.pick","content":"Map.pick \npick \nSearches the map looking for the first element where the given function returns a \u003Ccode\u003ESome\u003C/code\u003E value.\n Raise \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#foldBack","title":"Map.foldBack","content":"Map.foldBack \nfoldBack \nFolds over the bindings in the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#fold","title":"Map.fold","content":"Map.fold \nfold \nFolds over the bindings in the map ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#iter","title":"Map.iter","content":"Map.iter \niter \nApplies the given function to each binding in the dictionary","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#exists","title":"Map.exists","content":"Map.exists \nexists \nReturns true if the given predicate returns true for one of the\n bindings in the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#filter","title":"Map.filter","content":"Map.filter \nfilter \nBuilds a new map containing only the bindings for which the given predicate returns \u0027true\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#forall","title":"Map.forall","content":"Map.forall \nforall \nReturns true if the given predicate returns true for all of the\n bindings in the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#map","title":"Map.map","content":"Map.map \nmap \nBuilds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection. The key passed to the\n function indicates the key of element being transformed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#containsKey","title":"Map.containsKey","content":"Map.containsKey \ncontainsKey \nTests if an element is in the domain of the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#partition","title":"Map.partition","content":"Map.partition \npartition \nBuilds two new maps, one containing the bindings for which the given predicate returns \u0027true\u0027,\n and the other the remaining bindings.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#remove","title":"Map.remove","content":"Map.remove \nremove \nRemoves an element from the domain of the map. No exception is raised if the element is not present.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#tryFind","title":"Map.tryFind","content":"Map.tryFind \ntryFind \nLookup an element in the map, returning a \u003Ccode\u003ESome\u003C/code\u003E value if the element is in the domain\n of the map and \u003Ccode\u003ENone\u003C/code\u003E if not.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#findKey","title":"Map.findKey","content":"Map.findKey \nfindKey \nEvaluates the function on each mapping in the collection. Returns the key for the first mapping\n where the function returns \u0027true\u0027. Raise \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#tryFindKey","title":"Map.tryFindKey","content":"Map.tryFindKey \ntryFindKey \nReturns the key of the first mapping in the collection that satisfies the given predicate.\n Returns \u0027None\u0027 if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#count","title":"Map.count","content":"Map.count \ncount \nThe number of bindings in the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#keys","title":"Map.keys","content":"Map.keys \nkeys \nThe keys in the map.\n The sequence will be ordered by the keys of the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#values","title":"Map.values","content":"Map.values \nvalues \nThe values in the map, including the duplicates.\n The sequence will be ordered by the keys of the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#minKeyValue","title":"Map.minKeyValue","content":"Map.minKeyValue \nminKeyValue \nReturns binding for the smallest key in the map.\n Raise \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E when map is empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html#maxKeyValue","title":"Map.maxKeyValue","content":"Map.maxKeyValue \nmaxKeyValue \nReturns binding for the largest key in the map.\n Raise \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E when map is empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html","title":"Seq","content":"Seq \nContains operations for working with values of type \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seq-1.html\u0022\u003Eseq\u003C/a\u003E. \nSeq.allPairs \nallPairs \nSeq.append \nappend \nSeq.average \naverage \nSeq.averageBy \naverageBy \nSeq.cache \ncache \nSeq.cast \ncast \nSeq.choose \nchoose \nSeq.chunkBySize \nchunkBySize \nSeq.collect \ncollect \nSeq.compareWith \ncompareWith \nSeq.concat \nconcat \nSeq.contains \ncontains \nSeq.countBy \ncountBy \nSeq.delay \ndelay \nSeq.distinct \ndistinct \nSeq.distinctBy \ndistinctBy \nSeq.splitInto \nsplitInto \nSeq.empty \nempty \nSeq.except \nexcept \nSeq.exists \nexists \nSeq.exists2 \nexists2 \nSeq.filter \nfilter \nSeq.where \nwhere \nSeq.find \nfind \nSeq.findBack \nfindBack \nSeq.findIndex \nfindIndex \nSeq.findIndexBack \nfindIndexBack \nSeq.fold \nfold \nSeq.fold2 \nfold2 \nSeq.foldBack \nfoldBack \nSeq.foldBack2 \nfoldBack2 \nSeq.forall \nforall \nSeq.forall2 \nforall2 \nSeq.groupBy \ngroupBy \nSeq.head \nhead \nSeq.tryHead \ntryHead \nSeq.last \nlast \nSeq.tryLast \ntryLast \nSeq.exactlyOne \nexactlyOne \nSeq.tryExactlyOne \ntryExactlyOne \nSeq.isEmpty \nisEmpty \nSeq.indexed \nindexed \nSeq.init \ninit \nSeq.initInfinite \ninitInfinite \nSeq.item \nitem \nSeq.iter \niter \nSeq.iteri \niteri \nSeq.iter2 \niter2 \nSeq.iteri2 \niteri2 \nSeq.length \nlength \nSeq.map \nmap \nSeq.map2 \nmap2 \nSeq.mapFold \nmapFold \nSeq.mapFoldBack \nmapFoldBack \nSeq.map3 \nmap3 \nSeq.mapi \nmapi \nSeq.mapi2 \nmapi2 \nSeq.max \nmax \nSeq.maxBy \nmaxBy \nSeq.min \nmin \nSeq.minBy \nminBy \nSeq.nth \nnth \nSeq.ofArray \nofArray \nSeq.ofList \nofList \nSeq.pairwise \npairwise \nSeq.permute \npermute \nSeq.pick \npick \nSeq.readonly \nreadonly \nSeq.reduce \nreduce \nSeq.replicate \nreplicate \nSeq.reduceBack \nreduceBack \nSeq.rev \nrev \nSeq.scan \nscan \nSeq.scanBack \nscanBack \nSeq.singleton \nsingleton \nSeq.skip \nskip \nSeq.skipWhile \nskipWhile \nSeq.sort \nsort \nSeq.sortWith \nsortWith \nSeq.sortBy \nsortBy \nSeq.sortDescending \nsortDescending \nSeq.sortByDescending \nsortByDescending \nSeq.sum \nsum \nSeq.sumBy \nsumBy \nSeq.tail \ntail \nSeq.take \ntake \nSeq.takeWhile \ntakeWhile \nSeq.toArray \ntoArray \nSeq.toList \ntoList \nSeq.tryFind \ntryFind \nSeq.tryFindBack \ntryFindBack \nSeq.tryFindIndex \ntryFindIndex \nSeq.tryItem \ntryItem \nSeq.tryFindIndexBack \ntryFindIndexBack \nSeq.tryPick \ntryPick \nSeq.transpose \ntranspose \nSeq.truncate \ntruncate \nSeq.unfold \nunfold \nSeq.windowed \nwindowed \nSeq.zip \nzip \nSeq.zip3 \nzip3 \nSeq.removeAt \nremoveAt \nSeq.removeManyAt \nremoveManyAt \nSeq.updateAt \nupdateAt \nSeq.insertAt \ninsertAt \nSeq.insertManyAt \ninsertManyAt \nSeq.randomShuffle \nrandomShuffle \nSeq.randomShuffleWith \nrandomShuffleWith \nSeq.randomShuffleBy \nrandomShuffleBy \nSeq.randomChoice \nrandomChoice \nSeq.randomChoiceWith \nrandomChoiceWith \nSeq.randomChoiceBy \nrandomChoiceBy \nSeq.randomChoices \nrandomChoices \nSeq.randomChoicesWith \nrandomChoicesWith \nSeq.randomChoicesBy \nrandomChoicesBy \nSeq.randomSample \nrandomSample \nSeq.randomSampleWith \nrandomSampleWith \nSeq.randomSampleBy \nrandomSampleBy","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#allPairs","title":"Seq.allPairs","content":"Seq.allPairs \nallPairs \nReturns a new sequence that contains all pairings of elements from the first and second sequences.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#append","title":"Seq.append","content":"Seq.append \nappend \nWraps the two given enumerations as a single concatenated\n enumeration. \nThe returned sequence may be passed between threads safely. However,\n individual IEnumerator values generated from the returned sequence should not be accessed\n concurrently.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#average","title":"Seq.average","content":"Seq.average \naverage \nReturns the average of the elements in the sequence. \nThe elements are averaged using the \u003Ccode\u003E\u002B\u003C/code\u003E operator, \u003Ccode\u003EDivideByInt\u003C/code\u003E method and \u003Ccode\u003EZero\u003C/code\u003E property\n associated with the element type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#averageBy","title":"Seq.averageBy","content":"Seq.averageBy \naverageBy \nReturns the average of the results generated by applying the function to each element\n of the sequence. \nThe elements are averaged using the \u003Ccode\u003E\u002B\u003C/code\u003E operator, \u003Ccode\u003EDivideByInt\u003C/code\u003E method and \u003Ccode\u003EZero\u003C/code\u003E property\n associated with the generated type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#cache","title":"Seq.cache","content":"Seq.cache \ncache \nReturns a sequence that corresponds to a cached version of the input sequence. \n\n The result sequence will have the same elements as the input sequence. The result\n can be enumerated multiple times. The input sequence will be enumerated at most\n once and only as far as is necessary.  Caching a sequence is typically useful when repeatedly\n evaluating items in the original sequence is computationally expensive or if\n iterating the sequence causes side-effects that the user does not want to be\n repeated multiple times.\n\n Enumeration of the result sequence is thread safe in the sense that multiple independent IEnumerator\n values may be used simultaneously from different threads (accesses to\n the internal lookaside table are thread safe). Each individual IEnumerator\n is not typically thread safe and should not be accessed concurrently.\n\n Once enumeration of the input sequence has started,\n it\u0027s enumerator will be kept live by this object until the enumeration has completed.\n At that point, the enumerator will be disposed.\n\n The enumerator may be disposed and underlying cache storage released by\n converting the returned sequence object to type IDisposable, and calling the Dispose method\n on this object. The sequence object may then be re-enumerated and a fresh enumerator will\n be used.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#cast","title":"Seq.cast","content":"Seq.cast \ncast \nWraps a loosely-typed System.Collections sequence as a typed sequence. \nThe use of this function usually requires a type annotation.\n An incorrect type annotation may result in runtime type\n errors.\n Individual IEnumerator values generated from the returned sequence should not be accessed concurrently.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#choose","title":"Seq.choose","content":"Seq.choose \nchoose \nApplies the given function to each element of the sequence. Returns\n a sequence comprised of the results \u0022x\u0022 for each element where\n the function returns Some(x). \nThe returned sequence may be passed between threads safely. However,\n individual IEnumerator values generated from the returned sequence should not\n be accessed concurrently.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#chunkBySize","title":"Seq.chunkBySize","content":"Seq.chunkBySize \nchunkBySize \nDivides the input sequence into chunks of size at most \u003Ccode\u003EchunkSize\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#collect","title":"Seq.collect","content":"Seq.collect \ncollect \nApplies the given function to each element of the sequence and concatenates all the\n results. \nRemember sequence is lazy, effects are delayed until it is enumerated.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#compareWith","title":"Seq.compareWith","content":"Seq.compareWith \ncompareWith \nCompares two sequences using the given comparison function, element by element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#concat","title":"Seq.concat","content":"Seq.concat \nconcat \nCombines the given enumeration-of-enumerations as a single concatenated\n enumeration. \nThe returned sequence may be passed between threads safely. However,\n individual IEnumerator values generated from the returned sequence should not be accessed concurrently.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#contains","title":"Seq.contains","content":"Seq.contains \ncontains \nTests if the sequence contains the specified element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#countBy","title":"Seq.countBy","content":"Seq.countBy \ncountBy \nApplies a key-generating function to each element of a sequence and returns a sequence yielding unique\n keys and their number of occurrences in the original sequence. \nNote that this function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences. The function makes no assumption on the ordering of the original\n sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#delay","title":"Seq.delay","content":"Seq.delay \ndelay \nReturns a sequence that is built from the given delayed specification of a\n sequence. \nThe input function is evaluated each time an IEnumerator for the sequence\n is requested.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#distinct","title":"Seq.distinct","content":"Seq.distinct \ndistinct \nReturns a sequence that contains no duplicate entries according to generic hash and\n equality comparisons on the entries.\n If an element occurs multiple times in the sequence then the later occurrences are discarded.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#distinctBy","title":"Seq.distinctBy","content":"Seq.distinctBy \ndistinctBy \nReturns a sequence that contains no duplicate entries according to the\n generic hash and equality comparisons on the keys returned by the given key-generating function.\n If an element occurs multiple times in the sequence then the later occurrences are discarded.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#splitInto","title":"Seq.splitInto","content":"Seq.splitInto \nsplitInto \nSplits the input sequence into at most \u003Ccode\u003Ecount\u003C/code\u003E chunks. \nThis function returns a sequence that digests the whole initial sequence as soon as that\n sequence is iterated. As a result this function should not be used with large or infinite sequences.This function consumes the whole input sequence before yielding the first element of the result sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#empty","title":"Seq.empty","content":"Seq.empty \nempty \nCreates an empty sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#except","title":"Seq.except","content":"Seq.except \nexcept \nReturns a new sequence with the distinct elements of the second sequence which do not appear in the first sequence,\n using generic hash and equality comparisons to compare values. \nNote that this function returns a sequence that digests the whole of the first input sequence as soon as\n the result sequence is iterated. As a result this function should not be used with\n large or infinite sequences in the first parameter. The function makes no assumption on the ordering of the first input\n sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#exists","title":"Seq.exists","content":"Seq.exists \nexists \nTests if any element of the sequence satisfies the given predicate. \nThe predicate is applied to the elements of the input sequence. If any application\n returns true then the overall result is true and no further elements are tested.\n Otherwise, false is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#exists2","title":"Seq.exists2","content":"Seq.exists2 \nexists2 \nTests if any pair of corresponding elements of the input sequences satisfies the given predicate. \nThe predicate is applied to matching elements in the two sequences up to the lesser of the\n two lengths of the collections. If any application returns true then the overall result is\n true and no further elements are tested. Otherwise, false is returned. If one sequence is shorter than\n the other then the remaining elements of the longer sequence are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#filter","title":"Seq.filter","content":"Seq.filter \nfilter \nReturns a new collection containing only the elements of the collection\n for which the given predicate returns \u0022true\u0022. This is a synonym for Seq.where. \nThe returned sequence may be passed between threads safely. However,\n individual IEnumerator values generated from the returned sequence should not be accessed concurrently.\n\n Remember sequence is lazy, effects are delayed until it is enumerated.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#where","title":"Seq.where","content":"Seq.where \nwhere \nReturns a new collection containing only the elements of the collection\n for which the given predicate returns \u0022true\u0022. \nThe returned sequence may be passed between threads safely. However,\n individual IEnumerator values generated from the returned sequence should not be accessed concurrently.\n\n Remember sequence is lazy, effects are delayed until it is enumerated.\n\n A synonym for Seq.filter.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#find","title":"Seq.find","content":"Seq.find \nfind \nReturns the first element for which the given function returns True.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#findBack","title":"Seq.findBack","content":"Seq.findBack \nfindBack \nReturns the last element for which the given function returns True. \nThis function digests the whole initial sequence as soon as it is called. As a\n result this function should not be used with large or infinite sequences.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#findIndex","title":"Seq.findIndex","content":"Seq.findIndex \nfindIndex \nReturns the index of the first element for which the given function returns True.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#findIndexBack","title":"Seq.findIndexBack","content":"Seq.findIndexBack \nfindIndexBack \nReturns the index of the last element for which the given function returns True. \nThis function digests the whole initial sequence as soon as it is called. As a\n result this function should not be used with large or infinite sequences.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#fold","title":"Seq.fold","content":"Seq.fold \nfold \nApplies a function to each element of the collection, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E\n then computes \u003Ccode\u003Ef (... (f s i0)...) iN\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#fold2","title":"Seq.fold2","content":"Seq.fold2 \nfold2 \nApplies a function to corresponding elements of two collections, threading an accumulator argument\n through the computation. \n The two sequences need not have equal lengths:\n when one sequence is exhausted any remaining elements in the other sequence are ignored.\n If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E and \u003Ccode\u003Ej0...jN\u003C/code\u003E\n then computes \u003Ccode\u003Ef (... (f s i0 j0)...) iN jN\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#foldBack","title":"Seq.foldBack","content":"Seq.foldBack \nfoldBack \nApplies a function to each element of the collection, starting from the end, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E\n then computes \u003Ccode\u003Ef i0 (... (f iN s)...)\u003C/code\u003E \nThis function consumes the whole input sequence before returning the result.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#foldBack2","title":"Seq.foldBack2","content":"Seq.foldBack2 \nfoldBack2 \nApplies a function to corresponding elements of two collections, starting from the end of the shorter collection,\n threading an accumulator argument through the computation. The two sequences need not have equal lengths.\n If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E and \u003Ccode\u003Ej0...jM\u003C/code\u003E, N \u003C M\n then computes \u003Ccode\u003Ef i0 j0 (... (f iN jN s)...)\u003C/code\u003E. \n\n This function consumes the whole of both inputs sequences before returning the result. As a\n result this function should not be used with large or infinite sequences.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#forall","title":"Seq.forall","content":"Seq.forall \nforall \nTests if all elements of the sequence satisfy the given predicate. \nThe predicate is applied to the elements of the input sequence. If any application\n returns false then the overall result is false and no further elements are tested.\n Otherwise, true is returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#forall2","title":"Seq.forall2","content":"Seq.forall2 \nforall2 \nTests the all pairs of elements drawn from the two sequences satisfy the\n given predicate. If one sequence is shorter than\n the other then the remaining elements of the longer sequence are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#groupBy","title":"Seq.groupBy","content":"Seq.groupBy \ngroupBy \nApplies a key-generating function to each element of a sequence and yields a sequence of\n unique keys. Each unique key contains a sequence of all elements that match\n to this key. \nThis function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences. The function makes no assumption on the ordering of the original\n sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#head","title":"Seq.head","content":"Seq.head \nhead \nReturns the first element of the sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tryHead","title":"Seq.tryHead","content":"Seq.tryHead \ntryHead \nReturns the first element of the sequence, or None if the sequence is empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#last","title":"Seq.last","content":"Seq.last \nlast \nReturns the last element of the sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tryLast","title":"Seq.tryLast","content":"Seq.tryLast \ntryLast \nReturns the last element of the sequence.\n Return \u003Ccode\u003ENone\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#exactlyOne","title":"Seq.exactlyOne","content":"Seq.exactlyOne \nexactlyOne \nReturns the only element of the sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tryExactlyOne","title":"Seq.tryExactlyOne","content":"Seq.tryExactlyOne \ntryExactlyOne \nReturns the only element of the sequence or \u003Ccode\u003ENone\u003C/code\u003E if sequence is empty or contains more than one element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#isEmpty","title":"Seq.isEmpty","content":"Seq.isEmpty \nisEmpty \nReturns true if the sequence contains no elements, false otherwise.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#indexed","title":"Seq.indexed","content":"Seq.indexed \nindexed \nBuilds a new collection whose elements are the corresponding elements of the input collection\n paired with the integer index (from 0) of each element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#init","title":"Seq.init","content":"Seq.init \ninit \nGenerates a new sequence which, when iterated, will return successive\n elements by calling the given function, up to the given count.  Each element is saved after its\n initialization.  The function is passed the index of the item being\n generated. \nThe returned sequence may be passed between threads safely. However,\n individual IEnumerator values generated from the returned sequence should not be accessed concurrently.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#initInfinite","title":"Seq.initInfinite","content":"Seq.initInfinite \ninitInfinite \nGenerates a new sequence which, when iterated, will return successive\n elements by calling the given function.  The results of calling the function\n will not be saved, that is the function will be reapplied as necessary to\n regenerate the elements.  The function is passed the index of the item being\n generated. \nThe returned sequence may be passed between threads safely. However,\n individual IEnumerator values generated from the returned sequence should not be accessed concurrently.\n Iteration can continue up to \u003Ccode\u003EInt32.MaxValue\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#item","title":"Seq.item","content":"Seq.item \nitem \nComputes the element at the specified index in the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#iter","title":"Seq.iter","content":"Seq.iter \niter \nApplies the given function to each element of the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#iteri","title":"Seq.iteri","content":"Seq.iteri \niteri \nApplies the given function to each element of the collection. The integer passed to the\n function indicates the index of element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#iter2","title":"Seq.iter2","content":"Seq.iter2 \niter2 \nApplies the given function to two collections simultaneously. If one sequence is shorter than\n the other then the remaining elements of the longer sequence are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#iteri2","title":"Seq.iteri2","content":"Seq.iteri2 \niteri2 \nApplies the given function to two collections simultaneously. If one sequence is shorter than\n the other then the remaining elements of the longer sequence are ignored. The integer passed to the\n function indicates the index of element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#length","title":"Seq.length","content":"Seq.length \nlength \nReturns the length of the sequence","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#map","title":"Seq.map","content":"Seq.map \nmap \nBuilds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection.  The given function will be applied\n as elements are demanded using the \u003Ccode\u003EMoveNext\u003C/code\u003E method on enumerators retrieved from the\n object. \nThe returned sequence may be passed between threads safely. However,\n individual IEnumerator values generated from the returned sequence should not be accessed concurrently.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#map2","title":"Seq.map2","content":"Seq.map2 \nmap2 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding pairs of elements from the two sequences. If one input sequence is shorter than\n the other then the remaining elements of the longer sequence are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#mapFold","title":"Seq.mapFold","content":"Seq.mapFold \nmapFold \nCombines map and fold. Builds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection. The function is also used to accumulate a final value. \nThis function digests the whole initial sequence as soon as it is called. As a result this function should\n not be used with large or infinite sequences.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#mapFoldBack","title":"Seq.mapFoldBack","content":"Seq.mapFoldBack \nmapFoldBack \nCombines map and foldBack. Builds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection. The function is also used to accumulate a final value. \nThis function digests the whole initial sequence as soon as it is called. As a result this function should\n not be used with large or infinite sequences.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#map3","title":"Seq.map3","content":"Seq.map3 \nmap3 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding triples of elements from the three sequences. If one input sequence if shorter than\n the others then the remaining elements of the longer sequences are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#mapi","title":"Seq.mapi","content":"Seq.mapi \nmapi \nBuilds a new collection whose elements are the results of applying the given function\n to each of the elements of the collection. The integer index passed to the\n function indicates the index (from 0) of element being transformed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#mapi2","title":"Seq.mapi2","content":"Seq.mapi2 \nmapi2 \nBuilds a new collection whose elements are the results of applying the given function\n to the corresponding pairs of elements from the two sequences. If one input sequence is shorter than\n the other then the remaining elements of the longer sequence are ignored. The integer index passed to the\n function indicates the index (from 0) of element being transformed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#max","title":"Seq.max","content":"Seq.max \nmax \nReturns the greatest of all elements of the sequence, compared via Operators.max","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#maxBy","title":"Seq.maxBy","content":"Seq.maxBy \nmaxBy \nReturns the greatest of all elements of the sequence, compared via Operators.max on the function result.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#min","title":"Seq.min","content":"Seq.min \nmin \nReturns the lowest of all elements of the sequence, compared via \u003Ccode\u003EOperators.min\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#minBy","title":"Seq.minBy","content":"Seq.minBy \nminBy \nReturns the lowest of all elements of the sequence, compared via Operators.min on the function result.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#nth","title":"Seq.nth","content":"Seq.nth \nnth \nComputes the nth element in the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#ofArray","title":"Seq.ofArray","content":"Seq.ofArray \nofArray \nViews the given array as a sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#ofList","title":"Seq.ofList","content":"Seq.ofList \nofList \nViews the given list as a sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#pairwise","title":"Seq.pairwise","content":"Seq.pairwise \npairwise \nReturns a sequence of each element in the input sequence and its predecessor, with the\n exception of the first element which is only returned as the predecessor of the second element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#permute","title":"Seq.permute","content":"Seq.permute \npermute \nReturns a sequence with all elements permuted according to the\n specified permutation. \nThis function consumes the whole input sequence before yielding the first element of the result sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#pick","title":"Seq.pick","content":"Seq.pick \npick \nApplies the given function to successive elements, returning the first\n \u003Ccode\u003Ex\u003C/code\u003E where the function returns \u0022Some(x)\u0022.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#readonly","title":"Seq.readonly","content":"Seq.readonly \nreadonly \nBuilds a new sequence object that delegates to the given sequence object. This ensures\n the original sequence cannot be rediscovered and mutated by a type cast. For example,\n if given an array the returned sequence will return the elements of the array, but\n you cannot cast the returned sequence object to an array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#reduce","title":"Seq.reduce","content":"Seq.reduce \nreduce \nApplies a function to each element of the sequence, threading an accumulator argument\n through the computation. Begin by applying the function to the first two elements.\n Then feed this result into the function along with the third element and so on.\n Return the final result.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#replicate","title":"Seq.replicate","content":"Seq.replicate \nreplicate \nCreates a sequence by replicating the given initial value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#reduceBack","title":"Seq.reduceBack","content":"Seq.reduceBack \nreduceBack \nApplies a function to each element of the sequence, starting from the end, threading an accumulator argument\n through the computation. If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E\n then computes \u003Ccode\u003Ef i0 (...(f iN-1 iN))\u003C/code\u003E. \nThis function consumes the whole input sequence before returning the result.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#rev","title":"Seq.rev","content":"Seq.rev \nrev \nReturns a new sequence with the elements in reverse order. \nThis function consumes the whole input sequence before yielding the first element of the reversed sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#scan","title":"Seq.scan","content":"Seq.scan \nscan \nLike fold, but computes on-demand and returns the sequence of intermediary and final results.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#scanBack","title":"Seq.scanBack","content":"Seq.scanBack \nscanBack \nLike \u003Ccode\u003EfoldBack\u003C/code\u003E, but returns the sequence of intermediary and final results. \nThis function returns a sequence that digests the whole initial sequence as soon as that\n sequence is iterated. As a result this function should not be used with large or infinite sequences.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#singleton","title":"Seq.singleton","content":"Seq.singleton \nsingleton \nReturns a sequence yielding one item only.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#skip","title":"Seq.skip","content":"Seq.skip \nskip \nReturns a sequence that skips N elements of the underlying sequence and then yields the\n remaining elements of the sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#skipWhile","title":"Seq.skipWhile","content":"Seq.skipWhile \nskipWhile \nReturns a sequence that, when iterated, skips elements of the underlying sequence while the\n given predicate returns True, and then yields the remaining elements of the sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#sort","title":"Seq.sort","content":"Seq.sort \nsort \nYields a sequence ordered by keys. \nThis function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences.\n\n The function makes no assumption on the ordering of the original\n sequence and uses a stable sort, that is the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#sortWith","title":"Seq.sortWith","content":"Seq.sortWith \nsortWith \nYields a sequence ordered using the given comparison function. \nThis function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences.\n\n The function makes no assumption on the ordering of the original\n sequence and uses a stable sort, that is the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#sortBy","title":"Seq.sortBy","content":"Seq.sortBy \nsortBy \nApplies a key-generating function to each element of a sequence and yield a sequence ordered\n by keys.  The keys are compared using generic comparison as implemented by \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences.\n\n The function makes no assumption on the ordering of the original\n sequence and uses a stable sort, that is the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#sortDescending","title":"Seq.sortDescending","content":"Seq.sortDescending \nsortDescending \nYields a sequence ordered descending by keys. \nThis function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences. The function makes no assumption on the ordering of the original\n sequence.\n\n This is a stable sort, that is the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#sortByDescending","title":"Seq.sortByDescending","content":"Seq.sortByDescending \nsortByDescending \nApplies a key-generating function to each element of a sequence and yield a sequence ordered\n descending by keys.  The keys are compared using generic comparison as implemented by \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare\u0022\u003EOperators.compare\u003C/a\u003E. \nThis function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences. The function makes no assumption on the ordering of the original\n sequence.\n\n This is a stable sort, that is the original order of equal elements is preserved.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#sum","title":"Seq.sum","content":"Seq.sum \nsum \nReturns the sum of the elements in the sequence. \nThe elements are summed using the \u003Ccode\u003E\u002B\u003C/code\u003E operator and \u003Ccode\u003EZero\u003C/code\u003E property associated with the generated type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#sumBy","title":"Seq.sumBy","content":"Seq.sumBy \nsumBy \nReturns the sum of the results generated by applying the function to each element of the sequence. \nThe generated elements are summed using the \u003Ccode\u003E\u002B\u003C/code\u003E operator and \u003Ccode\u003EZero\u003C/code\u003E property associated with the generated type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tail","title":"Seq.tail","content":"Seq.tail \ntail \nReturns a sequence that skips 1 element of the underlying sequence and then yields the\n remaining elements of the sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#take","title":"Seq.take","content":"Seq.take \ntake \nReturns the first N elements of the sequence. \nThrows \u003Ccode\u003EInvalidOperationException\u003C/code\u003E\n if the count exceeds the number of elements in the sequence. \u003Ccode\u003ESeq.truncate\u003C/code\u003E\n returns as many items as the sequence contains instead of throwing an exception.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#takeWhile","title":"Seq.takeWhile","content":"Seq.takeWhile \ntakeWhile \nReturns a sequence that, when iterated, yields elements of the underlying sequence while the\n given predicate returns True, and then returns no further elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#toArray","title":"Seq.toArray","content":"Seq.toArray \ntoArray \nBuilds an array from the given collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#toList","title":"Seq.toList","content":"Seq.toList \ntoList \nBuilds a list from the given collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tryFind","title":"Seq.tryFind","content":"Seq.tryFind \ntryFind \nReturns the first element for which the given function returns True.\n Return None if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tryFindBack","title":"Seq.tryFindBack","content":"Seq.tryFindBack \ntryFindBack \nReturns the last element for which the given function returns True.\n Return None if no such element exists. \nThis function digests the whole initial sequence as soon as it is called. As a\n result this function should not be used with large or infinite sequences.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tryFindIndex","title":"Seq.tryFindIndex","content":"Seq.tryFindIndex \ntryFindIndex \nReturns the index of the first element in the sequence\n that satisfies the given predicate. Return \u003Ccode\u003ENone\u003C/code\u003E if no such element exists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tryItem","title":"Seq.tryItem","content":"Seq.tryItem \ntryItem \nTries to find the nth element in the sequence.\n Returns \u003Ccode\u003ENone\u003C/code\u003E if index is negative or the input sequence does not contain enough elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tryFindIndexBack","title":"Seq.tryFindIndexBack","content":"Seq.tryFindIndexBack \ntryFindIndexBack \nReturns the index of the last element in the sequence\n that satisfies the given predicate. Return \u003Ccode\u003ENone\u003C/code\u003E if no such element exists. \nThis function digests the whole initial sequence as soon as it is called. As a\n result this function should not be used with large or infinite sequences.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#tryPick","title":"Seq.tryPick","content":"Seq.tryPick \ntryPick \nApplies the given function to successive elements, returning the first\n result where the function returns \u0022Some(x)\u0022.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#transpose","title":"Seq.transpose","content":"Seq.transpose \ntranspose \nReturns the transpose of the given sequence of sequences. \nThis function returns a sequence that digests the whole initial sequence as soon as\n that sequence is iterated. As a result this function should not be used with\n large or infinite sequences.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#truncate","title":"Seq.truncate","content":"Seq.truncate \ntruncate \nReturns a sequence that when enumerated returns at most N elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#unfold","title":"Seq.unfold","content":"Seq.unfold \nunfold \nReturns a sequence that contains the elements generated by the given computation.\n The given initial \u003Ccode\u003Estate\u003C/code\u003E argument is passed to the element generator.\n For each IEnumerator elements in the stream are generated on-demand by applying the element\n generator, until a None value is returned by the element generator. Each call to the element\n generator returns a new residual \u003Ccode\u003Estate\u003C/code\u003E. \nThe stream will be recomputed each time an IEnumerator is requested and iterated for the Seq.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#windowed","title":"Seq.windowed","content":"Seq.windowed \nwindowed \nReturns a sequence yielding sliding windows containing elements drawn from the input\n sequence. Each window is returned as a fresh array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#zip","title":"Seq.zip","content":"Seq.zip \nzip \nCombines the two sequences into a sequence of pairs. The two sequences need not have equal lengths:\n when one sequence is exhausted any remaining elements in the other\n sequence are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#zip3","title":"Seq.zip3","content":"Seq.zip3 \nzip3 \nCombines the three sequences into a sequence of triples. The sequences need not have equal lengths:\n when one sequence is exhausted any remaining elements in the other\n sequences are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#removeAt","title":"Seq.removeAt","content":"Seq.removeAt \nremoveAt \nReturn a new sequence with the item at a given index removed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#removeManyAt","title":"Seq.removeManyAt","content":"Seq.removeManyAt \nremoveManyAt \nReturn a new sequence with the number of items starting at a given index removed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#updateAt","title":"Seq.updateAt","content":"Seq.updateAt \nupdateAt \nReturn a new sequence with the item at a given index set to the new value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#insertAt","title":"Seq.insertAt","content":"Seq.insertAt \ninsertAt \nReturn a new sequence with a new item inserted before the given index.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#insertManyAt","title":"Seq.insertManyAt","content":"Seq.insertManyAt \ninsertManyAt \nReturn a new sequence with new items inserted before the given index.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomShuffle","title":"Seq.randomShuffle","content":"Seq.randomShuffle \nrandomShuffle \nReturn a new sequence shuffled in a random order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomShuffleWith","title":"Seq.randomShuffleWith","content":"Seq.randomShuffleWith \nrandomShuffleWith \nReturn a new sequence shuffled in a random order with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomShuffleBy","title":"Seq.randomShuffleBy","content":"Seq.randomShuffleBy \nrandomShuffleBy \nReturn a new sequence shuffled in a random order with the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomChoice","title":"Seq.randomChoice","content":"Seq.randomChoice \nrandomChoice \n\n Returns a random element from the given sequence.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomChoiceWith","title":"Seq.randomChoiceWith","content":"Seq.randomChoiceWith \nrandomChoiceWith \n\n Returns a random element from the given sequence with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomChoiceBy","title":"Seq.randomChoiceBy","content":"Seq.randomChoiceBy \nrandomChoiceBy \n\n Returns a random element from the given sequence with the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomChoices","title":"Seq.randomChoices","content":"Seq.randomChoices \nrandomChoices \n\n Returns an sequence of random elements from the given sequence, each element can be selected multiple times.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomChoicesWith","title":"Seq.randomChoicesWith","content":"Seq.randomChoicesWith \nrandomChoicesWith \n\n Returns a sequence of random elements from the given sequence with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance, each element can be selected multiple times.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomChoicesBy","title":"Seq.randomChoicesBy","content":"Seq.randomChoicesBy \nrandomChoicesBy \n\n Returns a sequence of random elements from the given sequence with the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function, each element can be selected multiple times.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomSample","title":"Seq.randomSample","content":"Seq.randomSample \nrandomSample \n\n Returns a random sample of elements from the given sequence, each element can be selected only once.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomSampleWith","title":"Seq.randomSampleWith","content":"Seq.randomSampleWith \nrandomSampleWith \n\n Returns a random sample of elements from the given sequence with the specified \u003Ccode\u003ERandom\u003C/code\u003E instance, each element can be selected only once.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html#randomSampleBy","title":"Seq.randomSampleBy","content":"Seq.randomSampleBy \nrandomSampleBy \n\n Returns a random sample of elements from the given sequence with the specified \u003Ccode\u003Erandomizer\u003C/code\u003E function, each element can be selected only once.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html","title":"Set","content":"Set \nContains operations for working with values of type \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html\u0022\u003ESet\u003C/a\u003E. \nSet.empty \nempty \nSet.singleton \nsingleton \nSet.add \nadd \nSet.contains \ncontains \nSet.isSubset \nisSubset \nSet.isProperSubset \nisProperSubset \nSet.isSuperset \nisSuperset \nSet.isProperSuperset \nisProperSuperset \nSet.count \ncount \nSet.exists \nexists \nSet.filter \nfilter \nSet.map \nmap \nSet.fold \nfold \nSet.foldBack \nfoldBack \nSet.forall \nforall \nSet.intersect \nintersect \nSet.intersectMany \nintersectMany \nSet.union \nunion \nSet.unionMany \nunionMany \nSet.isEmpty \nisEmpty \nSet.iter \niter \nSet.partition \npartition \nSet.remove \nremove \nSet.minElement \nminElement \nSet.maxElement \nmaxElement \nSet.ofList \nofList \nSet.toList \ntoList \nSet.ofArray \nofArray \nSet.toArray \ntoArray \nSet.toSeq \ntoSeq \nSet.ofSeq \nofSeq \nSet.difference \ndifference","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#empty","title":"Set.empty","content":"Set.empty \nempty \nThe empty set for the type \u0027T.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#singleton","title":"Set.singleton","content":"Set.singleton \nsingleton \nThe set containing the given element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#add","title":"Set.add","content":"Set.add \nadd \nReturns a new set with an element added to the set. No exception is raised if\n the set already contains the given element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#contains","title":"Set.contains","content":"Set.contains \ncontains \nEvaluates to \u0022true\u0022 if the given element is in the given set.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#isSubset","title":"Set.isSubset","content":"Set.isSubset \nisSubset \nEvaluates to \u0022true\u0022 if all elements of the first set are in the second","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#isProperSubset","title":"Set.isProperSubset","content":"Set.isProperSubset \nisProperSubset \nEvaluates to \u0022true\u0022 if all elements of the first set are in the second, and at least\n one element of the second is not in the first.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#isSuperset","title":"Set.isSuperset","content":"Set.isSuperset \nisSuperset \nEvaluates to \u0022true\u0022 if all elements of the second set are in the first.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#isProperSuperset","title":"Set.isProperSuperset","content":"Set.isProperSuperset \nisProperSuperset \nEvaluates to \u0022true\u0022 if all elements of the second set are in the first, and at least\n one element of the first is not in the second.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#count","title":"Set.count","content":"Set.count \ncount \nReturns the number of elements in the set. Same as \u003Ccode\u003Esize\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#exists","title":"Set.exists","content":"Set.exists \nexists \nTests if any element of the collection satisfies the given predicate.\n If the input function is \u003Ccode\u003Epredicate\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E\n then computes \u003Ccode\u003Ep i0 or ... or p iN\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#filter","title":"Set.filter","content":"Set.filter \nfilter \nReturns a new collection containing only the elements of the collection\n for which the given predicate returns True.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#map","title":"Set.map","content":"Set.map \nmap \nReturns a new collection containing the results of applying the\n given function to each element of the input set.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#fold","title":"Set.fold","content":"Set.fold \nfold \nApplies the given accumulating function to all the elements of the set","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#foldBack","title":"Set.foldBack","content":"Set.foldBack \nfoldBack \nApplies the given accumulating function to all the elements of the set.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#forall","title":"Set.forall","content":"Set.forall \nforall \nTests if all elements of the collection satisfy the given predicate.\n If the input function is \u003Ccode\u003Ef\u003C/code\u003E and the elements are \u003Ccode\u003Ei0...iN\u003C/code\u003E and \u0022j0...jN\u0022\n then computes \u003Ccode\u003Ep i0 \u0026amp;\u0026amp; ... \u0026amp;\u0026amp; p iN\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#intersect","title":"Set.intersect","content":"Set.intersect \nintersect \nComputes the intersection of the two sets.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#intersectMany","title":"Set.intersectMany","content":"Set.intersectMany \nintersectMany \nComputes the intersection of a sequence of sets. The sequence must be non-empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#union","title":"Set.union","content":"Set.union \nunion \nComputes the union of the two sets.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#unionMany","title":"Set.unionMany","content":"Set.unionMany \nunionMany \nComputes the union of a sequence of sets.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#isEmpty","title":"Set.isEmpty","content":"Set.isEmpty \nisEmpty \nReturns \u0022true\u0022 if the set is empty.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#iter","title":"Set.iter","content":"Set.iter \niter \nApplies the given function to each element of the set, in order according\n to the comparison function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#partition","title":"Set.partition","content":"Set.partition \npartition \nSplits the set into two sets containing the elements for which the given predicate\n returns true and false respectively.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#remove","title":"Set.remove","content":"Set.remove \nremove \nReturns a new set with the given element removed. No exception is raised if\n the set doesn\u0027t contain the given element.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#minElement","title":"Set.minElement","content":"Set.minElement \nminElement \nReturns the lowest element in the set according to the ordering being used for the set.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#maxElement","title":"Set.maxElement","content":"Set.maxElement \nmaxElement \nReturns the highest element in the set according to the ordering being used for the set.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#ofList","title":"Set.ofList","content":"Set.ofList \nofList \nBuilds a set that contains the same elements as the given list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#toList","title":"Set.toList","content":"Set.toList \ntoList \nBuilds a list that contains the elements of the set in order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#ofArray","title":"Set.ofArray","content":"Set.ofArray \nofArray \nBuilds a set that contains the same elements as the given array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#toArray","title":"Set.toArray","content":"Set.toArray \ntoArray \nBuilds an array that contains the elements of the set in order.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#toSeq","title":"Set.toSeq","content":"Set.toSeq \ntoSeq \nReturns an ordered view of the collection as an enumerable object.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#ofSeq","title":"Set.ofSeq","content":"Set.ofSeq \nofSeq \nBuilds a new collection from the given enumerable object.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html#difference","title":"Set.difference","content":"Set.difference \ndifference \nReturns a new set with the elements of the second set removed from the first.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharplist.html","title":"List","content":"List \nContains methods for compiler use related to lists. \nList.Create \nCreate","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharplist.html#Create","title":"List.Create","content":"List.Create \nCreate \nCreates a list with the specified items.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html","title":"Map\u003C\u0027Key, \u0027Value\u003E","content":"Map\u003C\u0027Key, \u0027Value\u003E \nImmutable maps based on binary trees, where keys are ordered by F# generic comparison. By default\n comparison is the F# structural comparison function or uses implementations of the IComparable interface on key values. \nSee the \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-mapmodule.html\u0022\u003EMap\u003C/a\u003E module for further operations on maps.\n\n All members of this class are thread-safe and may be used concurrently from multiple threads. \nMap\u003C\u0027Key, \u0027Value\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMap\u003C\u0027Key, \u0027Value\u003E.Add \nAdd \nMap\u003C\u0027Key, \u0027Value\u003E.Change \nChange \nMap\u003C\u0027Key, \u0027Value\u003E.ContainsKey \nContainsKey \nMap\u003C\u0027Key, \u0027Value\u003E.Remove \nRemove \nMap\u003C\u0027Key, \u0027Value\u003E.TryFind \nTryFind \nMap\u003C\u0027Key, \u0027Value\u003E.TryGetValue \nTryGetValue \nMap\u003C\u0027Key, \u0027Value\u003E.Count \nCount \nMap\u003C\u0027Key, \u0027Value\u003E.IsEmpty \nIsEmpty \nMap\u003C\u0027Key, \u0027Value\u003E.Keys \nKeys \nMap\u003C\u0027Key, \u0027Value\u003E.Values \nValues \nMap\u003C\u0027Key, \u0027Value\u003E.Item \nItem","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#\u0060\u0060.ctor\u0060\u0060","title":"Map\u003C\u0027Key, \u0027Value\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Map\u003C\u0027Key, \u0027Value\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nBuilds a map that contains the bindings of the given IEnumerable.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#Add","title":"Map\u003C\u0027Key, \u0027Value\u003E.Add","content":"Map\u003C\u0027Key, \u0027Value\u003E.Add \nAdd \nReturns a new map with the binding added to the given map.\n If a binding with the given key already exists in the input map, the existing binding is replaced by the new binding in the result map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#Change","title":"Map\u003C\u0027Key, \u0027Value\u003E.Change","content":"Map\u003C\u0027Key, \u0027Value\u003E.Change \nChange \nReturns a new map with the value stored under key changed according to f.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#ContainsKey","title":"Map\u003C\u0027Key, \u0027Value\u003E.ContainsKey","content":"Map\u003C\u0027Key, \u0027Value\u003E.ContainsKey \nContainsKey \nTests if an element is in the domain of the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#Remove","title":"Map\u003C\u0027Key, \u0027Value\u003E.Remove","content":"Map\u003C\u0027Key, \u0027Value\u003E.Remove \nRemove \nRemoves an element from the domain of the map. No exception is raised if the element is not present.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#TryFind","title":"Map\u003C\u0027Key, \u0027Value\u003E.TryFind","content":"Map\u003C\u0027Key, \u0027Value\u003E.TryFind \nTryFind \nLookup an element in the map, returning a \u003Ccode\u003ESome\u003C/code\u003E value if the element is in the domain\n of the map and \u003Ccode\u003ENone\u003C/code\u003E if not.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#TryGetValue","title":"Map\u003C\u0027Key, \u0027Value\u003E.TryGetValue","content":"Map\u003C\u0027Key, \u0027Value\u003E.TryGetValue \nTryGetValue \nLookup an element in the map, assigning to \u003Ccode\u003Evalue\u003C/code\u003E if the element is in the domain\n of the map and returning \u003Ccode\u003Efalse\u003C/code\u003E if not.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#Count","title":"Map\u003C\u0027Key, \u0027Value\u003E.Count","content":"Map\u003C\u0027Key, \u0027Value\u003E.Count \nCount \nThe number of bindings in the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#IsEmpty","title":"Map\u003C\u0027Key, \u0027Value\u003E.IsEmpty","content":"Map\u003C\u0027Key, \u0027Value\u003E.IsEmpty \nIsEmpty \nReturns true if there are no bindings in the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#Keys","title":"Map\u003C\u0027Key, \u0027Value\u003E.Keys","content":"Map\u003C\u0027Key, \u0027Value\u003E.Keys \nKeys \nThe keys in the map.\n The sequence will be ordered by the keys of the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#Values","title":"Map\u003C\u0027Key, \u0027Value\u003E.Values","content":"Map\u003C\u0027Key, \u0027Value\u003E.Values \nValues \nAll the values in the map, including the duplicates.\n The sequence will be ordered by the keys of the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpmap-2.html#Item","title":"Map\u003C\u0027Key, \u0027Value\u003E.Item","content":"Map\u003C\u0027Key, \u0027Value\u003E.Item \nItem \nLookup an element in the map. Raise \u003Ccode\u003EKeyNotFoundException\u003C/code\u003E if no binding\n exists in the map.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html","title":"Set\u003C\u0027T\u003E","content":"Set\u003C\u0027T\u003E \nImmutable sets based on binary trees, where elements are ordered by F# generic comparison. By default\n comparison is the F# structural comparison function or uses implementations of the IComparable interface on element values. \nSee the \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-setmodule.html\u0022\u003ESet\u003C/a\u003E module for further operations on sets.\n\n All members of this class are thread-safe and may be used concurrently from multiple threads. \nSet\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSet\u003C\u0027T\u003E.Add \nAdd \nSet\u003C\u0027T\u003E.Contains \nContains \nSet\u003C\u0027T\u003E.IsProperSubsetOf \nIsProperSubsetOf \nSet\u003C\u0027T\u003E.IsProperSupersetOf \nIsProperSupersetOf \nSet\u003C\u0027T\u003E.IsSubsetOf \nIsSubsetOf \nSet\u003C\u0027T\u003E.IsSupersetOf \nIsSupersetOf \nSet\u003C\u0027T\u003E.Remove \nRemove \nSet\u003C\u0027T\u003E.Count \nCount \nSet\u003C\u0027T\u003E.MinimumElement \nMinimumElement \nSet\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nSet\u003C\u0027T\u003E.MaximumElement \nMaximumElement \nSet\u003C\u0027T\u003E.(\u002B) \n(\u002B) \nSet\u003C\u0027T\u003E.(-) \n(-)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#\u0060\u0060.ctor\u0060\u0060","title":"Set\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Set\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreate a set containing elements drawn from the given sequence.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#Add","title":"Set\u003C\u0027T\u003E.Add","content":"Set\u003C\u0027T\u003E.Add \nAdd \nA useful shortcut for Set.add. Note this operation produces a new set\n and does not mutate the original set. The new set will share many storage\n nodes with the original. See the Set module for further operations on sets.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#Contains","title":"Set\u003C\u0027T\u003E.Contains","content":"Set\u003C\u0027T\u003E.Contains \nContains \nA useful shortcut for Set.contains. See the Set module for further operations on sets.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#IsProperSubsetOf","title":"Set\u003C\u0027T\u003E.IsProperSubsetOf","content":"Set\u003C\u0027T\u003E.IsProperSubsetOf \nIsProperSubsetOf \nEvaluates to \u0022true\u0022 if all elements of the first set are in the second, and at least\n one element of the second is not in the first.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#IsProperSupersetOf","title":"Set\u003C\u0027T\u003E.IsProperSupersetOf","content":"Set\u003C\u0027T\u003E.IsProperSupersetOf \nIsProperSupersetOf \nEvaluates to \u0022true\u0022 if all elements of the second set are in the first, and at least\n one element of the first is not in the second.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#IsSubsetOf","title":"Set\u003C\u0027T\u003E.IsSubsetOf","content":"Set\u003C\u0027T\u003E.IsSubsetOf \nIsSubsetOf \nEvaluates to \u0022true\u0022 if all elements of the first set are in the second.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#IsSupersetOf","title":"Set\u003C\u0027T\u003E.IsSupersetOf","content":"Set\u003C\u0027T\u003E.IsSupersetOf \nIsSupersetOf \nEvaluates to \u0022true\u0022 if all elements of the second set are in the first.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#Remove","title":"Set\u003C\u0027T\u003E.Remove","content":"Set\u003C\u0027T\u003E.Remove \nRemove \nA useful shortcut for Set.remove. Note this operation produces a new set\n and does not mutate the original set. The new set will share many storage\n nodes with the original. See the Set module for further operations on sets.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#Count","title":"Set\u003C\u0027T\u003E.Count","content":"Set\u003C\u0027T\u003E.Count \nCount \nThe number of elements in the set","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#MinimumElement","title":"Set\u003C\u0027T\u003E.MinimumElement","content":"Set\u003C\u0027T\u003E.MinimumElement \nMinimumElement \nReturns the lowest element in the set according to the ordering being used for the set.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#IsEmpty","title":"Set\u003C\u0027T\u003E.IsEmpty","content":"Set\u003C\u0027T\u003E.IsEmpty \nIsEmpty \nA useful shortcut for Set.isEmpty. See the Set module for further operations on sets.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#MaximumElement","title":"Set\u003C\u0027T\u003E.MaximumElement","content":"Set\u003C\u0027T\u003E.MaximumElement \nMaximumElement \nReturns the highest element in the set according to the ordering being used for the set.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#(\u002B)","title":"Set\u003C\u0027T\u003E.(\u002B)","content":"Set\u003C\u0027T\u003E.(\u002B) \n(\u002B) \nCompute the union of the two sets.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset-1.html#(-)","title":"Set\u003C\u0027T\u003E.(-)","content":"Set\u003C\u0027T\u003E.(-) \n(-) \nReturns a new set with the elements of the second set removed from the first.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset.html","title":"Set","content":"Set \nContains methods for compiler use related to sets. \nSet.Create \nCreate","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-fsharpset.html#Create","title":"Set.Create","content":"Set.Create \nCreate \nCreates a set with the specified items.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-list-1.html","title":"\u0027T list","content":"\u0027T list \nThe type of immutable singly-linked lists.  \nSee the \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-listmodule.html\u0022\u003EList\u003C/a\u003E module for further operations related to lists.\n\n Use the constructors \u003Ccode\u003E[]\u003C/code\u003E and \u003Ccode\u003E::\u003C/code\u003E (infix) to create values of this type, or\n the notation \u003Ccode\u003E[1; 2; 3]\u003C/code\u003E. Use the values in the \u003Ccode\u003EList\u003C/code\u003E module to manipulate \n values of this type, or pattern match against the values directly.\n\n  See also \u003Ca href=\u0022https://learn.microsoft.com/dotnet/fsharp/language-reference/lists\u0022\u003EF# Language Guide - Lists\u003C/a\u003E.\n  \n\u0027T list.Head \nHead \n\u0027T list.IsEmpty \nIsEmpty \n\u0027T list.Tail \nTail \n\u0027T list.Length \nLength \n\u0027T list.Item \nItem \n\u0027T list.Empty \nEmpty","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-list-1.html#Head","title":"\u0027T list.Head","content":"\u0027T list.Head \nHead \nGets the first element of the list","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-list-1.html#IsEmpty","title":"\u0027T list.IsEmpty","content":"\u0027T list.IsEmpty \nIsEmpty \nGets a value indicating if the list contains no entries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-list-1.html#Tail","title":"\u0027T list.Tail","content":"\u0027T list.Tail \nTail \nGets the tail of the list, which is a list containing all the elements of the list, excluding the first element ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-list-1.html#Length","title":"\u0027T list.Length","content":"\u0027T list.Length \nLength \nGets the number of items contained in the list","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-list-1.html#Item","title":"\u0027T list.Item","content":"\u0027T list.Item \nItem \nGets the element of the list at the given position. \nLists are represented as linked lists so this is an O(n) operation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-list-1.html#Empty","title":"\u0027T list.Empty","content":"\u0027T list.Empty \nEmpty \nReturns an empty list of a particular type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seq-1.html","title":"\u0027T seq","content":"\u0027T seq \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1\u0022\u003EIEnumerable\u003C/a\u003E \n\n  See the \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-seqmodule.html\u0022\u003ESeq\u003C/a\u003E module for further operations related to sequences.\n\n  See also \u003Ca href=\u0022https://learn.microsoft.com/dotnet/fsharp/language-reference/sequences\u0022\u003EF# Language Guide - Sequences\u003C/a\u003E.\n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncprimitives.html","title":"AsyncPrimitives","content":"AsyncPrimitives \nEntry points for generated code \nAsyncPrimitives.MakeAsync \nMakeAsync \nAsyncPrimitives.Invoke \nInvoke \nAsyncPrimitives.CallThenInvoke \nCallThenInvoke \nAsyncPrimitives.Bind \nBind \nAsyncPrimitives.TryFinally \nTryFinally \nAsyncPrimitives.TryWith \nTryWith","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncprimitives.html#MakeAsync","title":"AsyncPrimitives.MakeAsync","content":"AsyncPrimitives.MakeAsync \nMakeAsync \nThe F# compiler emits calls to this function to implement F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncprimitives.html#Invoke","title":"AsyncPrimitives.Invoke","content":"AsyncPrimitives.Invoke \nInvoke \nThe F# compiler emits calls to this function to implement constructs for F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncprimitives.html#CallThenInvoke","title":"AsyncPrimitives.CallThenInvoke","content":"AsyncPrimitives.CallThenInvoke \nCallThenInvoke \nThe F# compiler emits calls to this function to implement constructs for F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncprimitives.html#Bind","title":"AsyncPrimitives.Bind","content":"AsyncPrimitives.Bind \nBind \nThe F# compiler emits calls to this function to implement the \u003Ccode\u003Elet!\u003C/code\u003E construct for F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncprimitives.html#TryFinally","title":"AsyncPrimitives.TryFinally","content":"AsyncPrimitives.TryFinally \nTryFinally \nThe F# compiler emits calls to this function to implement the \u003Ccode\u003Etry/finally\u003C/code\u003E construct for F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncprimitives.html#TryWith","title":"AsyncPrimitives.TryWith","content":"AsyncPrimitives.TryWith \nTryWith \nThe F# compiler emits calls to this function to implement the \u003Ccode\u003Etry/with\u003C/code\u003E construct for F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-commonextensions.html","title":"CommonExtensions","content":"CommonExtensions \nA module of extension members providing asynchronous operations for some basic CLI types related to concurrency and I/O. \nCommonExtensions.AsyncRead \nAsyncRead \nCommonExtensions.AsyncRead \nAsyncRead \nCommonExtensions.AsyncWrite \nAsyncWrite \nCommonExtensions.Add \nAdd \nCommonExtensions.Subscribe \nSubscribe","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-commonextensions.html#AsyncRead","title":"CommonExtensions.AsyncRead","content":"CommonExtensions.AsyncRead \nAsyncRead \nReturns an asynchronous computation that will read from the stream into the given buffer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-commonextensions.html#AsyncRead","title":"CommonExtensions.AsyncRead","content":"CommonExtensions.AsyncRead \nAsyncRead \nReturns an asynchronous computation that will read the given number of bytes from the stream.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-commonextensions.html#AsyncWrite","title":"CommonExtensions.AsyncWrite","content":"CommonExtensions.AsyncWrite \nAsyncWrite \nReturns an asynchronous computation that will write the given bytes to the stream.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-commonextensions.html#Add","title":"CommonExtensions.Add","content":"CommonExtensions.Add \nAdd \nPermanently connects a listener function to the observable. The listener will\n be invoked for each observation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-commonextensions.html#Subscribe","title":"CommonExtensions.Subscribe","content":"CommonExtensions.Subscribe \nSubscribe \nConnects a listener function to the observable. The listener will\n be invoked for each observation. The listener can be removed by\n calling Dispose on the returned IDisposable object.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html","title":"Event","content":"Event \nContains operations for working with values of type \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-ievent-1.html\u0022\u003EIEvent\u003C/a\u003E. \nEvent.merge \nmerge \nEvent.map \nmap \nEvent.filter \nfilter \nEvent.partition \npartition \nEvent.split \nsplit \nEvent.choose \nchoose \nEvent.scan \nscan \nEvent.add \nadd \nEvent.pairwise \npairwise","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html#merge","title":"Event.merge","content":"Event.merge \nmerge \nFires the output event when either of the input events fire.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html#map","title":"Event.map","content":"Event.map \nmap \nReturns a new event that passes values transformed by the given function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html#filter","title":"Event.filter","content":"Event.filter \nfilter \nReturns a new event that listens to the original event and triggers the resulting\n event only when the argument to the event passes the given function.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html#partition","title":"Event.partition","content":"Event.partition \npartition \nReturns a new event that listens to the original event and triggers the\n first resulting event if the application of the predicate to the event arguments\n returned true, and the second event if it returned false.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html#split","title":"Event.split","content":"Event.split \nsplit \nReturns a new event that listens to the original event and triggers the\n first resulting event if the application of the function to the event arguments\n returned a Choice1Of2, and the second event if it returns a Choice2Of2.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html#choose","title":"Event.choose","content":"Event.choose \nchoose \nReturns a new event which fires on a selection of messages from the original event.\n The selection function takes an original message to an optional new message.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html#scan","title":"Event.scan","content":"Event.scan \nscan \nReturns a new event consisting of the results of applying the given accumulating function\n to successive values triggered on the input event.  An item of internal state\n records the current value of the state parameter.  The internal state is not locked during the\n execution of the accumulation function, so care should be taken that the\n input IEvent not triggered by multiple threads simultaneously.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html#add","title":"Event.add","content":"Event.add \nadd \nRuns the given function each time the given event is triggered.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-eventmodule.html#pairwise","title":"Event.pairwise","content":"Event.pairwise \npairwise \nReturns a new event that triggers on the second and subsequent triggerings of the input event.\n The Nth triggering of the input event passes the arguments from the N-1th and Nth triggering as\n a pair. The argument passed to the N-1th triggering is held in hidden internal state until the\n Nth triggering occurs.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-lazyextensions.html","title":"LazyExtensions","content":"LazyExtensions \nExtensions related to Lazy values. \nLazyExtensions.Create \nCreate \nLazyExtensions.CreateFromValue \nCreateFromValue \nLazyExtensions.Force \nForce","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-lazyextensions.html#Create","title":"LazyExtensions.Create","content":"LazyExtensions.Create \nCreate \nCreates a lazy computation that evaluates to the result of the given function when forced.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-lazyextensions.html#CreateFromValue","title":"LazyExtensions.CreateFromValue","content":"LazyExtensions.CreateFromValue \nCreateFromValue \nCreates a lazy computation that evaluates to the given value when forced.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-lazyextensions.html#Force","title":"LazyExtensions.Force","content":"LazyExtensions.Force \nForce \nForces the execution of this value and return its result. Same as Value. Mutual exclusion is used to \n prevent other threads also computing the value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html","title":"Observable","content":"Observable \nContains operations for working with first class event and other observable objects. \nObservable.merge \nmerge \nObservable.map \nmap \nObservable.filter \nfilter \nObservable.partition \npartition \nObservable.split \nsplit \nObservable.choose \nchoose \nObservable.scan \nscan \nObservable.add \nadd \nObservable.subscribe \nsubscribe \nObservable.pairwise \npairwise","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#merge","title":"Observable.merge","content":"Observable.merge \nmerge \nReturns an observable for the merged observations from the sources.\n The returned object propagates success and error values arising\n from either source and completes when both the sources have completed. \nFor each observer, the registered intermediate observing object is not\n thread safe. That is, observations arising from the sources must not\n be triggered concurrently on different threads.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#map","title":"Observable.map","content":"Observable.map \nmap \nReturns an observable which transforms the observations of the source by the\n given function. The transformation function is executed once for each\n subscribed observer. The returned object also propagates error observations\n arising from the source and completes when the source completes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#filter","title":"Observable.filter","content":"Observable.filter \nfilter \nReturns an observable which filters the observations of the source\n by the given function. The observable will see only those observations\n for which the predicate returns true. The predicate is executed once for\n each subscribed observer. The returned object also propagates error\n observations arising from the source and completes when the source completes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#partition","title":"Observable.partition","content":"Observable.partition \npartition \nReturns two observables which partition the observations of the source by\n the given function. The first will trigger observations for those values\n for which the predicate returns true. The second will trigger observations\n for those values where the predicate returns false. The predicate is\n executed once for each subscribed observer. Both also propagate all error\n observations arising from the source and each completes when the source\n completes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#split","title":"Observable.split","content":"Observable.split \nsplit \nReturns two observables which split the observations of the source by the\n given function. The first will trigger observations \u003Ccode\u003Ex\u003C/code\u003E for which the\n splitter returns \u003Ccode\u003EChoice1Of2 x\u003C/code\u003E. The second will trigger observations\n \u003Ccode\u003Ey\u003C/code\u003E for which the splitter returns \u003Ccode\u003EChoice2Of2 y\u003C/code\u003E The splitter is\n executed once for each subscribed observer. Both also propagate error\n observations arising from the source and each completes when the source\n completes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#choose","title":"Observable.choose","content":"Observable.choose \nchoose \nReturns an observable which chooses a projection of observations from the source\n using the given function. The returned object will trigger observations \u003Ccode\u003Ex\u003C/code\u003E\n for which the splitter returns \u003Ccode\u003ESome x\u003C/code\u003E. The returned object also propagates\n all errors arising from the source and completes when the source completes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#scan","title":"Observable.scan","content":"Observable.scan \nscan \nReturns an observable which, for each observer, allocates an item of state\n and applies the given accumulating function to successive values arising from\n the input. The returned object will trigger observations for each computed\n state value, excluding the initial value. The returned object propagates\n all errors arising from the source and completes when the source completes. \nFor each observer, the registered intermediate observing object is not thread safe.\n That is, observations arising from the source must not be triggered concurrently\n on different threads.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#add","title":"Observable.add","content":"Observable.add \nadd \nCreates an observer which permanently subscribes to the given observable and which calls\n the given function for each observation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#subscribe","title":"Observable.subscribe","content":"Observable.subscribe \nsubscribe \nCreates an observer which subscribes to the given observable and which calls\n the given function for each observation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-observablemodule.html#pairwise","title":"Observable.pairwise","content":"Observable.pairwise \npairwise \nReturns a new observable that triggers on the second and subsequent triggerings of the input observable.\n The Nth triggering of the input observable passes the arguments from the N-1th and Nth triggering as\n a pair. The argument passed to the N-1th triggering is held in hidden internal state until the\n Nth triggering occurs. \nFor each observer, the registered intermediate observing object is not thread safe.\n That is, observations arising from the source must not be triggered concurrently\n on different threads.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuildermodule.html","title":"TaskBuilder","content":"TaskBuilder \n Contains the \u0060task\u0060 computation expression builder. \nTaskBuilder.task \ntask \nTaskBuilder.backgroundTask \nbackgroundTask","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuildermodule.html#task","title":"TaskBuilder.task","content":"TaskBuilder.task \ntask \n\n Builds a task using computation expression syntax.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuildermodule.html#backgroundTask","title":"TaskBuilder.backgroundTask","content":"TaskBuilder.backgroundTask \nbackgroundTask \n\n Builds a task using computation expression syntax which switches to execute on a background thread if not\n already doing so.\n  \n\n If the task is created on a foreground thread (where \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.synchronizationcontext.current\u0022\u003ESynchronizationContext.Current\u003C/a\u003E is non-null)\n its body is executed on a background thread using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.task.run\u0022\u003ETask.Run\u003C/a\u003E.\n If created on a background thread (where \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.synchronizationcontext.current\u0022\u003ESynchronizationContext.Current\u003C/a\u003E is null) it is executed\n immediately on that thread.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-webextensions.html","title":"WebExtensions","content":"WebExtensions \nA module of extension members providing asynchronous operations for some basic Web operations. \nWebExtensions.AsyncGetResponse \nAsyncGetResponse \nWebExtensions.AsyncDownloadString \nAsyncDownloadString \nWebExtensions.AsyncDownloadData \nAsyncDownloadData \nWebExtensions.AsyncDownloadFile \nAsyncDownloadFile","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-webextensions.html#AsyncGetResponse","title":"WebExtensions.AsyncGetResponse","content":"WebExtensions.AsyncGetResponse \nAsyncGetResponse \nReturns an asynchronous computation that, when run, will wait for a response to the given WebRequest.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-webextensions.html#AsyncDownloadString","title":"WebExtensions.AsyncDownloadString","content":"WebExtensions.AsyncDownloadString \nAsyncDownloadString \nReturns an asynchronous computation that, when run, will wait for the download of the given URI.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-webextensions.html#AsyncDownloadData","title":"WebExtensions.AsyncDownloadData","content":"WebExtensions.AsyncDownloadData \nAsyncDownloadData \nReturns an asynchronous computation that, when run, will wait for the download of the given URI.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-webextensions.html#AsyncDownloadFile","title":"WebExtensions.AsyncDownloadFile","content":"WebExtensions.AsyncDownloadFile \nAsyncDownloadFile \nReturns an asynchronous computation that, when run, will wait for the download of the given URI to specified file.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync-1.html","title":"Async\u003C\u0027T\u003E","content":"Async\u003C\u0027T\u003E \n\n An asynchronous computation, which, when run, will eventually produce a value  of type T, or else raises an exception.\n  \n\n  This type has no members. Asynchronous computations are normally specified either by using an async expression\n  or the static methods in the \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync-1.html\u0022\u003EAsync\u003C/a\u003E type.\n\n  See also \u003Ca href=\u0022https://learn.microsoft.com/dotnet/fsharp/language-reference/async-expressions\u0022\u003EF# Language Guide - Async Workflows\u003C/a\u003E.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html","title":"Async","content":"Async \nHolds static members for creating and manipulating asynchronous computations. \n\n  See also \u003Ca href=\u0022https://learn.microsoft.com/dotnet/fsharp/language-reference/async-expressions\u0022\u003EF# Language Guide - Async Workflows\u003C/a\u003E.\n  \nAsync.AsBeginEnd \nAsBeginEnd \nAsync.AwaitEvent \nAwaitEvent \nAsync.AwaitIAsyncResult \nAwaitIAsyncResult \nAsync.AwaitTask \nAwaitTask \nAsync.AwaitTask \nAwaitTask \nAsync.AwaitWaitHandle \nAwaitWaitHandle \nAsync.CancelDefaultToken \nCancelDefaultToken \nAsync.Catch \nCatch \nAsync.Choice \nChoice \nAsync.FromBeginEnd \nFromBeginEnd \nAsync.FromBeginEnd \nFromBeginEnd \nAsync.FromBeginEnd \nFromBeginEnd \nAsync.FromBeginEnd \nFromBeginEnd \nAsync.FromContinuations \nFromContinuations \nAsync.Ignore \nIgnore \nAsync.OnCancel \nOnCancel \nAsync.Parallel \nParallel \nAsync.Parallel \nParallel \nAsync.RunSynchronously \nRunSynchronously \nAsync.Sequential \nSequential \nAsync.Sleep \nSleep \nAsync.Sleep \nSleep \nAsync.Start \nStart \nAsync.StartAsTask \nStartAsTask \nAsync.StartChild \nStartChild \nAsync.StartChildAsTask \nStartChildAsTask \nAsync.StartImmediate \nStartImmediate \nAsync.StartImmediateAsTask \nStartImmediateAsTask \nAsync.StartWithContinuations \nStartWithContinuations \nAsync.SwitchToContext \nSwitchToContext \nAsync.SwitchToNewThread \nSwitchToNewThread \nAsync.SwitchToThreadPool \nSwitchToThreadPool \nAsync.TryCancelled \nTryCancelled \nAsync.CancellationToken \nCancellationToken \nAsync.DefaultCancellationToken \nDefaultCancellationToken","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#AsBeginEnd","title":"Async.AsBeginEnd","content":"Async.AsBeginEnd \nAsBeginEnd \nCreates three functions that can be used to implement the .NET 1.0 Asynchronous \n Programming Model (APM) for a given asynchronous computation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#AwaitEvent","title":"Async.AwaitEvent","content":"Async.AwaitEvent \nAwaitEvent \nCreates an asynchronous computation that waits for a single invocation of a CLI \n event by adding a handler to the event. Once the computation completes or is \n cancelled, the handler is removed from the event. \nThe computation will respond to cancellation while waiting for the event. If a \n cancellation occurs, and \u003Ccode\u003EcancelAction\u003C/code\u003E is specified, then it is executed, and \n the computation continues to wait for the event.\n\n If \u003Ccode\u003EcancelAction\u003C/code\u003E is not specified, then cancellation causes the computation\n to cancel immediately.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#AwaitIAsyncResult","title":"Async.AwaitIAsyncResult","content":"Async.AwaitIAsyncResult \nAwaitIAsyncResult \nCreates an asynchronous computation that will wait on the IAsyncResult. \nThe computation returns true if the handle indicated a result within the given timeout.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#AwaitTask","title":"Async.AwaitTask","content":"Async.AwaitTask \nAwaitTask \nReturn an asynchronous computation that will wait for the given task to complete and return\n its result. \nIf an exception occurs in the asynchronous computation then an exception is re-raised by this\n function.\n\n If the task is cancelled then \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception\u0022\u003ETasks.TaskCanceledException\u003C/a\u003E is raised. Note\n that the task may be governed by a different cancellation token to the overall async computation\n where the AwaitTask occurs. In practice you should normally start the task with the\n cancellation token returned by \u003Ccode\u003Elet! ct = Async.CancellationToken\u003C/code\u003E, and catch\n any \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception\u0022\u003ETasks.TaskCanceledException\u003C/a\u003E at the point where the\n overall async is started.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#AwaitTask","title":"Async.AwaitTask","content":"Async.AwaitTask \nAwaitTask \nReturn an asynchronous computation that will wait for the given task to complete and return\n its result. \nIf an exception occurs in the asynchronous computation then an exception is re-raised by this\n function.\n\n If the task is cancelled then \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception\u0022\u003ETasks.TaskCanceledException\u003C/a\u003E is raised. Note\n that the task may be governed by a different cancellation token to the overall async computation\n where the AwaitTask occurs. In practice you should normally start the task with the\n cancellation token returned by \u003Ccode\u003Elet! ct = Async.CancellationToken\u003C/code\u003E, and catch\n any \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception\u0022\u003ETasks.TaskCanceledException\u003C/a\u003E at the point where the\n overall async is started.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#AwaitWaitHandle","title":"Async.AwaitWaitHandle","content":"Async.AwaitWaitHandle \nAwaitWaitHandle \nCreates an asynchronous computation that will wait on the given WaitHandle. \nThe computation returns true if the handle indicated a result within the given timeout.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#CancelDefaultToken","title":"Async.CancelDefaultToken","content":"Async.CancelDefaultToken \nCancelDefaultToken \nRaises the cancellation condition for the most recent set of asynchronous computations started \n without any specific CancellationToken. Replaces the global CancellationTokenSource with a new \n global token source for any asynchronous computations created after this point without any \n specific CancellationToken.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#Catch","title":"Async.Catch","content":"Async.Catch \nCatch \nCreates an asynchronous computation that executes \u003Ccode\u003Ecomputation\u003C/code\u003E.\n If this computation completes successfully then return \u003Ccode\u003EChoice1Of2\u003C/code\u003E with the returned\n value. If this computation raises an exception before it completes then return \u003Ccode\u003EChoice2Of2\u003C/code\u003E\n with the raised exception.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#Choice","title":"Async.Choice","content":"Async.Choice \nChoice \n\n Creates an asynchronous computation that executes all given asynchronous computations in parallel, \n returning the result of the first succeeding computation (one whose result is \u0027Some x\u0027).\n If all child computations complete with None, the parent computation also returns None.\n  \n\n If any child computation raises an exception, then the overall computation will trigger an \n exception, and cancel the others. \n\n The overall computation will respond to cancellation while executing the child computations.\n If cancelled, the computation will cancel any remaining child computations but will still wait\n for the other child computations to complete.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#FromBeginEnd","title":"Async.FromBeginEnd","content":"Async.FromBeginEnd \nFromBeginEnd \nCreates an asynchronous computation in terms of a Begin/End pair of actions in \n the style used in .NET 2.0 APIs. \nThe computation will respond to cancellation while waiting for the completion\n of the operation. If a cancellation occurs, and \u003Ccode\u003EcancelAction\u003C/code\u003E is specified, then it is \n executed, and the computation continues to wait for the completion of the operation.\n\n If \u003Ccode\u003EcancelAction\u003C/code\u003E is not specified, then cancellation causes the computation\n to stop immediately, and subsequent invocations of the callback are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#FromBeginEnd","title":"Async.FromBeginEnd","content":"Async.FromBeginEnd \nFromBeginEnd \n\n Creates an asynchronous computation in terms of a Begin/End pair of actions in \n the style used in .NET 2.0 APIs. \nThe computation will respond to cancellation while waiting for the completion\n of the operation. If a cancellation occurs, and \u003Ccode\u003EcancelAction\u003C/code\u003E is specified, then it is \n executed, and the computation continues to wait for the completion of the operation.\n\n If \u003Ccode\u003EcancelAction\u003C/code\u003E is not specified, then cancellation causes the computation\n to stop immediately, and subsequent invocations of the callback are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#FromBeginEnd","title":"Async.FromBeginEnd","content":"Async.FromBeginEnd \nFromBeginEnd \n\n  Creates an asynchronous computation in terms of a Begin/End pair of actions in \n  the style used in .NET 2.0 APIs.\n  \nThe computation will respond to cancellation while waiting for the completion\n of the operation. If a cancellation occurs, and \u003Ccode\u003EcancelAction\u003C/code\u003E is specified, then it is \n executed, and the computation continues to wait for the completion of the operation.\n\n  If \u003Ccode\u003EcancelAction\u003C/code\u003E is not specified, then cancellation causes the computation\n  to stop immediately, and subsequent invocations of the callback are ignored.\n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#FromBeginEnd","title":"Async.FromBeginEnd","content":"Async.FromBeginEnd \nFromBeginEnd \n\n  Creates an asynchronous computation in terms of a Begin/End pair of actions in \n  the style used in CLI APIs.\n  \n\n The computation will respond to cancellation while waiting for the completion\n of the operation. If a cancellation occurs, and \u003Ccode\u003EcancelAction\u003C/code\u003E is specified, then it is \n executed, and the computation continues to wait for the completion of the operation.\n\n If \u003Ccode\u003EcancelAction\u003C/code\u003E is not specified, then cancellation causes the computation\n to stop immediately, and subsequent invocations of the callback are ignored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#FromContinuations","title":"Async.FromContinuations","content":"Async.FromContinuations \nFromContinuations \nCreates an asynchronous computation that captures the current\n success, exception and cancellation continuations. The callback must \n eventually call exactly one of the given continuations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#Ignore","title":"Async.Ignore","content":"Async.Ignore \nIgnore \nCreates an asynchronous computation that runs the given computation and ignores \n its result.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#OnCancel","title":"Async.OnCancel","content":"Async.OnCancel \nOnCancel \nGenerates a scoped, cooperative cancellation handler for use within an asynchronous workflow. \nFor example,\n     \u003Ccode\u003Easync { use! holder = Async.OnCancel interruption ... }\u003C/code\u003E \n generates an asynchronous computation where, if a cancellation happens any time during \n the execution of the asynchronous computation in the scope of \u003Ccode\u003Eholder\u003C/code\u003E, then action \n \u003Ccode\u003Einterruption\u003C/code\u003E is executed on the thread that is performing the cancellation. This can \n be used to arrange for a computation to be asynchronously notified that a cancellation \n has occurred, e.g. by setting a flag, or deregistering a pending I/O action.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#Parallel","title":"Async.Parallel","content":"Async.Parallel \nParallel \nCreates an asynchronous computation that executes all the given asynchronous computations,\n initially queueing each as work items and using a fork/join pattern. \nIf all child computations succeed, an array of results is passed to the success continuation.\n\n If any child computation raises an exception, then the overall computation will trigger an\n exception, and cancel the others.\n\n The overall computation will respond to cancellation while executing the child computations.\n If cancelled, the computation will cancel any remaining child computations but will still wait\n for the other child computations to complete.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#Parallel","title":"Async.Parallel","content":"Async.Parallel \nParallel \nCreates an asynchronous computation that executes all the given asynchronous computations, \n initially queueing each as work items and using a fork/join pattern. \nIf all child computations succeed, an array of results is passed to the success continuation.\n\n If any child computation raises an exception, then the overall computation will trigger an \n exception, and cancel the others. \n\n The overall computation will respond to cancellation while executing the child computations.\n If cancelled, the computation will cancel any remaining child computations but will still wait\n for the other child computations to complete.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#RunSynchronously","title":"Async.RunSynchronously","content":"Async.RunSynchronously \nRunSynchronously \nRuns the asynchronous computation and await its result. \nIf an exception occurs in the asynchronous computation then an exception is re-raised by this\n function.\n\n If no cancellation token is provided then the default cancellation token is used.\n\n The computation is started on the current thread if \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.synchronizationcontext.current\u0022\u003ESynchronizationContext.Current\u003C/a\u003E is null,\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.thread.currentthread\u0022\u003EThread.CurrentThread\u003C/a\u003E has  \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.thread.isthreadpoolthread\u0022\u003EThread.IsThreadPoolThread\u003C/a\u003E\n of \u003Ccode\u003Etrue\u003C/code\u003E, and no timeout is specified. Otherwise the computation is started by queueing a new work item in the thread pool,\n and the current thread is blocked awaiting the completion of the computation.\n\n The timeout parameter is given in milliseconds.  A value of -1 is equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.timeout.infinite\u0022\u003ETimeout.Infinite\u003C/a\u003E.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#Sequential","title":"Async.Sequential","content":"Async.Sequential \nSequential \nCreates an asynchronous computation that executes all the given asynchronous computations sequentially. \nIf all child computations succeed, an array of results is passed to the success continuation.\n\n If any child computation raises an exception, then the overall computation will trigger an\n exception, and cancel the others.\n\n The overall computation will respond to cancellation while executing the child computations.\n If cancelled, the computation will cancel any remaining child computations but will still wait\n for the other child computations to complete.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#Sleep","title":"Async.Sleep","content":"Async.Sleep \nSleep \n\n  Creates an asynchronous computation that will sleep for the given time. This is scheduled\n  using a System.Threading.Timer object. The operation will not block operating system threads\n  for the duration of the wait.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#Sleep","title":"Async.Sleep","content":"Async.Sleep \nSleep \n\n  Creates an asynchronous computation that will sleep for the given time. This is scheduled\n  using a System.Threading.Timer object. The operation will not block operating system threads\n  for the duration of the wait.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#Start","title":"Async.Start","content":"Async.Start \nStart \nStarts the asynchronous computation in the thread pool. Do not await its result. \nIf no cancellation token is provided then the default cancellation token is used.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#StartAsTask","title":"Async.StartAsTask","content":"Async.StartAsTask \nStartAsTask \nExecutes a computation in the thread pool. \nIf no cancellation token is provided then the default cancellation token is used.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#StartChild","title":"Async.StartChild","content":"Async.StartChild \nStartChild \nStarts a child computation within an asynchronous workflow. \n This allows multiple asynchronous computations to be executed simultaneously. \nThis method should normally be used as the immediate \n right-hand-side of a \u003Ccode\u003Elet!\u003C/code\u003E binding in an F# asynchronous workflow, that is,\n \u003Cpre class=\u0022fssnip highlighted\u0022\u003E\u003Ccode lang=\u0022fsharp\u0022\u003E     \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs1\u0027, 1)\u0022 onmouseover=\u0022showTip(event, \u0027fs1\u0027, 1)\u0022 class=\u0022id\u0022\u003Easync\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E{\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E..\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E\r\n            \u003Cspan class=\u0022k\u0022\u003Elet!\u003C/span\u003E \u003Cspan class=\u0022id\u0022\u003Ecompletor1\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan class=\u0022id\u0022\u003EchildComputation1\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E|\u0026gt;\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 2)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 2)\u0022 class=\u0022id\u0022\u003EAsync\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E\u003Cspan onmouseout=\u0022hideTip(event, \u0027fs3\u0027, 3)\u0022 onmouseover=\u0022showTip(event, \u0027fs3\u0027, 3)\u0022 class=\u0022id\u0022\u003EStartChild\u003C/span\u003E  \r\n            \u003Cspan class=\u0022k\u0022\u003Elet!\u003C/span\u003E \u003Cspan class=\u0022id\u0022\u003Ecompletor2\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan class=\u0022id\u0022\u003EchildComputation2\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E|\u0026gt;\u003C/span\u003E \u003Cspan onmouseout=\u0022hideTip(event, \u0027fs2\u0027, 4)\u0022 onmouseover=\u0022showTip(event, \u0027fs2\u0027, 4)\u0022 class=\u0022id\u0022\u003EAsync\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E\u003Cspan onmouseout=\u0022hideTip(event, \u0027fs3\u0027, 5)\u0022 onmouseover=\u0022showTip(event, \u0027fs3\u0027, 5)\u0022 class=\u0022id\u0022\u003EStartChild\u003C/span\u003E  \r\n            \u003Cspan class=\u0022o\u0022\u003E..\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E \r\n            \u003Cspan class=\u0022k\u0022\u003Elet!\u003C/span\u003E \u003Cspan class=\u0022id\u0022\u003Eresult1\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan class=\u0022id\u0022\u003Ecompletor1\u003C/span\u003E \r\n            \u003Cspan class=\u0022k\u0022\u003Elet!\u003C/span\u003E \u003Cspan class=\u0022id\u0022\u003Eresult2\u003C/span\u003E \u003Cspan class=\u0022o\u0022\u003E=\u003C/span\u003E \u003Cspan class=\u0022id\u0022\u003Ecompletor2\u003C/span\u003E \r\n            \u003Cspan class=\u0022o\u0022\u003E..\u003C/span\u003E\u003Cspan class=\u0022pn\u0022\u003E.\u003C/span\u003E \u003Cspan class=\u0022pn\u0022\u003E}\u003C/span\u003E\r\n\u003C/code\u003E\u003C/pre\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs1\u0022\u003Eval async: AsyncBuilder\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs2\u0022\u003EMultiple items\u003Cbr /\u003Etype Async =\n  static member AsBeginEnd: computation: (\u0026#39;Arg -\u0026gt; Async\u0026lt;\u0026#39;T\u0026gt;) -\u0026gt; (\u0026#39;Arg * AsyncCallback * obj -\u0026gt; IAsyncResult) * (IAsyncResult -\u0026gt; \u0026#39;T) * (IAsyncResult -\u0026gt; unit)\n  static member AwaitEvent: event: IEvent\u0026lt;\u0026#39;Del,\u0026#39;T\u0026gt; * ?cancelAction: (unit -\u0026gt; unit) -\u0026gt; Async\u0026lt;\u0026#39;T\u0026gt; (requires delegate and \u0026#39;Del :\u0026gt; Delegate)\n  static member AwaitIAsyncResult: iar: IAsyncResult * ?millisecondsTimeout: int -\u0026gt; Async\u0026lt;bool\u0026gt;\n  static member AwaitTask: task: Task\u0026lt;\u0026#39;T\u0026gt; -\u0026gt; Async\u0026lt;\u0026#39;T\u0026gt; \u002B 1 overload\n  static member AwaitWaitHandle: waitHandle: WaitHandle * ?millisecondsTimeout: int -\u0026gt; Async\u0026lt;bool\u0026gt;\n  static member CancelDefaultToken: unit -\u0026gt; unit\n  static member Catch: computation: Async\u0026lt;\u0026#39;T\u0026gt; -\u0026gt; Async\u0026lt;Choice\u0026lt;\u0026#39;T,exn\u0026gt;\u0026gt;\n  static member Choice: computations: Async\u0026lt;\u0026#39;T option\u0026gt; seq -\u0026gt; Async\u0026lt;\u0026#39;T option\u0026gt;\n  static member FromBeginEnd: beginAction: (AsyncCallback * obj -\u0026gt; IAsyncResult) * endAction: (IAsyncResult -\u0026gt; \u0026#39;T) * ?cancelAction: (unit -\u0026gt; unit) -\u0026gt; Async\u0026lt;\u0026#39;T\u0026gt; \u002B 3 overloads\n  static member FromContinuations: callback: ((\u0026#39;T -\u0026gt; unit) * (exn -\u0026gt; unit) * (OperationCanceledException -\u0026gt; unit) -\u0026gt; unit) -\u0026gt; Async\u0026lt;\u0026#39;T\u0026gt;\n  ...\u003Cbr /\u003E\u003Cbr /\u003E--------------------\u003Cbr /\u003Etype Async\u0026lt;\u0026#39;T\u0026gt;\u003C/div\u003E\r\n\u003Cdiv class=\u0022fsdocs-tip\u0022 id=\u0022fs3\u0022\u003Estatic member Async.StartChild: computation: Async\u0026lt;\u0026#39;T\u0026gt; * ?millisecondsTimeout: int -\u0026gt; Async\u0026lt;Async\u0026lt;\u0026#39;T\u0026gt;\u0026gt;\u003C/div\u003E\r\n\r\n\n\n When used in this way, each use of \u003Ccode\u003EStartChild\u003C/code\u003E starts an instance of \u003Ccode\u003EchildComputation\u003C/code\u003E \n and returns a completor object representing a computation to wait for the completion of the operation.\n When executed, the completor awaits the completion of \u003Ccode\u003EchildComputation\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#StartChildAsTask","title":"Async.StartChildAsTask","content":"Async.StartChildAsTask \nStartChildAsTask \nCreates an asynchronous computation which starts the given computation as a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1\u0022\u003ETask\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#StartImmediate","title":"Async.StartImmediate","content":"Async.StartImmediate \nStartImmediate \nRuns an asynchronous computation, starting immediately on the current operating system\n thread. \nIf no cancellation token is provided then the default cancellation token is used.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#StartImmediateAsTask","title":"Async.StartImmediateAsTask","content":"Async.StartImmediateAsTask \nStartImmediateAsTask \nRuns an asynchronous computation, starting immediately on the current operating system\n thread, but also returns the execution as \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1\u0022\u003ETask\u003C/a\u003E \nIf no cancellation token is provided then the default cancellation token is used.\n You may prefer using this method if you want to achieve a similar behavior to async await in C# as \n async computation starts on the current thread with an ability to return a result.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#StartWithContinuations","title":"Async.StartWithContinuations","content":"Async.StartWithContinuations \nStartWithContinuations \nRuns an asynchronous computation, starting immediately on the current operating system\n thread. Call one of the three continuations when the operation completes. \nIf no cancellation token is provided then the default cancellation token\n is used.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#SwitchToContext","title":"Async.SwitchToContext","content":"Async.SwitchToContext \nSwitchToContext \nCreates an asynchronous computation that runs\n its continuation using syncContext.Post. If syncContext is null \n then the asynchronous computation is equivalent to SwitchToThreadPool().","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#SwitchToNewThread","title":"Async.SwitchToNewThread","content":"Async.SwitchToNewThread \nSwitchToNewThread \nCreates an asynchronous computation that creates a new thread and runs\n its continuation in that thread.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#SwitchToThreadPool","title":"Async.SwitchToThreadPool","content":"Async.SwitchToThreadPool \nSwitchToThreadPool \nCreates an asynchronous computation that queues a work item that runs\n its continuation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#TryCancelled","title":"Async.TryCancelled","content":"Async.TryCancelled \nTryCancelled \nCreates an asynchronous computation that executes \u003Ccode\u003Ecomputation\u003C/code\u003E.\n If this computation is cancelled before it completes then the computation generated by \n running \u003Ccode\u003Ecompensation\u003C/code\u003E is executed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#CancellationToken","title":"Async.CancellationToken","content":"Async.CancellationToken \nCancellationToken \nCreates an asynchronous computation that returns the CancellationToken governing the execution \n of the computation. \nIn \u003Ccode\u003Easync { let! token = Async.CancellationToken ...}\u003C/code\u003E token can be used to initiate other \n asynchronous operations that will cancel cooperatively with this workflow.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasync.html#DefaultCancellationToken","title":"Async.DefaultCancellationToken","content":"Async.DefaultCancellationToken \nDefaultCancellationToken \nGets the default cancellation token for executing asynchronous computations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncactivation-1.html","title":"AsyncActivation\u003C\u0027T\u003E","content":"AsyncActivation\u003C\u0027T\u003E \nThe F# compiler emits references to this type to implement F# async expressions. \nAsyncActivation\u003C\u0027T\u003E.OnCancellation \nOnCancellation \nAsyncActivation\u003C\u0027T\u003E.OnExceptionRaised \nOnExceptionRaised \nAsyncActivation\u003C\u0027T\u003E.OnSuccess \nOnSuccess \nAsyncActivation\u003C\u0027T\u003E.IsCancellationRequested \nIsCancellationRequested \nAsyncActivation\u003C\u0027T\u003E.Success \nSuccess","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncactivation-1.html#OnCancellation","title":"AsyncActivation\u003C\u0027T\u003E.OnCancellation","content":"AsyncActivation\u003C\u0027T\u003E.OnCancellation \nOnCancellation \nThe F# compiler emits calls to this function to implement F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncactivation-1.html#OnExceptionRaised","title":"AsyncActivation\u003C\u0027T\u003E.OnExceptionRaised","content":"AsyncActivation\u003C\u0027T\u003E.OnExceptionRaised \nOnExceptionRaised \nThe F# compiler emits calls to this function to implement F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncactivation-1.html#OnSuccess","title":"AsyncActivation\u003C\u0027T\u003E.OnSuccess","content":"AsyncActivation\u003C\u0027T\u003E.OnSuccess \nOnSuccess \nThe F# compiler emits calls to this function to implement F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncactivation-1.html#IsCancellationRequested","title":"AsyncActivation\u003C\u0027T\u003E.IsCancellationRequested","content":"AsyncActivation\u003C\u0027T\u003E.IsCancellationRequested \nIsCancellationRequested \nThe F# compiler emits calls to this function to implement F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncactivation-1.html#Success","title":"AsyncActivation\u003C\u0027T\u003E.Success","content":"AsyncActivation\u003C\u0027T\u003E.Success \nSuccess \nThe F# compiler emits calls to this function to implement F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html","title":"AsyncBuilder","content":"AsyncBuilder \nThe type of the \u003Ccode\u003Easync\u003C/code\u003E operator, used to build workflows for asynchronous computations. \nAsyncBuilder.Bind \nBind \nAsyncBuilder.Combine \nCombine \nAsyncBuilder.Delay \nDelay \nAsyncBuilder.For \nFor \nAsyncBuilder.Return \nReturn \nAsyncBuilder.ReturnFrom \nReturnFrom \nAsyncBuilder.TryFinally \nTryFinally \nAsyncBuilder.TryWith \nTryWith \nAsyncBuilder.Using \nUsing \nAsyncBuilder.While \nWhile \nAsyncBuilder.Zero \nZero","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#Bind","title":"AsyncBuilder.Bind","content":"AsyncBuilder.Bind \nBind \nCreates an asynchronous computation that runs \u003Ccode\u003Ecomputation\u003C/code\u003E, and when \n \u003Ccode\u003Ecomputation\u003C/code\u003E generates a result \u003Ccode\u003ET\u003C/code\u003E, runs \u003Ccode\u003Ebinder res\u003C/code\u003E. \nA cancellation check is performed when the computation is executed.\n\n The existence of this method permits the use of \u003Ccode\u003Elet!\u003C/code\u003E in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#Combine","title":"AsyncBuilder.Combine","content":"AsyncBuilder.Combine \nCombine \nCreates an asynchronous computation that first runs \u003Ccode\u003Ecomputation1\u003C/code\u003E\n and then runs \u003Ccode\u003Ecomputation2\u003C/code\u003E, returning the result of \u003Ccode\u003Ecomputation2\u003C/code\u003E. \nA cancellation check is performed when the computation is executed.\n\n The existence of this method permits the use of expression sequencing in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#Delay","title":"AsyncBuilder.Delay","content":"AsyncBuilder.Delay \nDelay \nCreates an asynchronous computation that runs \u003Ccode\u003Egenerator\u003C/code\u003E. \nA cancellation check is performed when the computation is executed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#For","title":"AsyncBuilder.For","content":"AsyncBuilder.For \nFor \nCreates an asynchronous computation that enumerates the sequence \u003Ccode\u003Eseq\u003C/code\u003E\n on demand and runs \u003Ccode\u003Ebody\u003C/code\u003E for each element. \nA cancellation check is performed on each iteration of the loop.\n\n The existence of this method permits the use of \u003Ccode\u003Efor\u003C/code\u003E in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#Return","title":"AsyncBuilder.Return","content":"AsyncBuilder.Return \nReturn \nCreates an asynchronous computation that returns the result \u003Ccode\u003Ev\u003C/code\u003E. \nA cancellation check is performed when the computation is executed.\n\n The existence of this method permits the use of \u003Ccode\u003Ereturn\u003C/code\u003E in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#ReturnFrom","title":"AsyncBuilder.ReturnFrom","content":"AsyncBuilder.ReturnFrom \nReturnFrom \nDelegates to the input computation. \nThe existence of this method permits the use of \u003Ccode\u003Ereturn!\u003C/code\u003E in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#TryFinally","title":"AsyncBuilder.TryFinally","content":"AsyncBuilder.TryFinally \nTryFinally \nCreates an asynchronous computation that runs \u003Ccode\u003Ecomputation\u003C/code\u003E. The action \u003Ccode\u003Ecompensation\u003C/code\u003E is executed \n after \u003Ccode\u003Ecomputation\u003C/code\u003E completes, whether \u003Ccode\u003Ecomputation\u003C/code\u003E exits normally or by an exception. If \u003Ccode\u003Ecompensation\u003C/code\u003E raises an exception itself\n the original exception is discarded and the new exception becomes the overall result of the computation. \nA cancellation check is performed when the computation is executed.\n\n The existence of this method permits the use of \u003Ccode\u003Etry/finally\u003C/code\u003E in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#TryWith","title":"AsyncBuilder.TryWith","content":"AsyncBuilder.TryWith \nTryWith \nCreates an asynchronous computation that runs \u003Ccode\u003Ecomputation\u003C/code\u003E and returns its result.\n If an exception happens then \u003Ccode\u003EcatchHandler(exn)\u003C/code\u003E is called and the resulting computation executed instead. \nA cancellation check is performed when the computation is executed.\n\n The existence of this method permits the use of \u003Ccode\u003Etry/with\u003C/code\u003E in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#Using","title":"AsyncBuilder.Using","content":"AsyncBuilder.Using \nUsing \nCreates an asynchronous computation that runs \u003Ccode\u003Ebinder(resource)\u003C/code\u003E. \n The action \u003Ccode\u003Eresource.Dispose()\u003C/code\u003E is executed as this computation yields its result\n or if the asynchronous computation exits by an exception or by cancellation. \nA cancellation check is performed when the computation is executed.\n\n The existence of this method permits the use of \u003Ccode\u003Euse\u003C/code\u003E and \u003Ccode\u003Euse!\u003C/code\u003E in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#While","title":"AsyncBuilder.While","content":"AsyncBuilder.While \nWhile \nCreates an asynchronous computation that runs \u003Ccode\u003Ecomputation\u003C/code\u003E repeatedly \n until \u003Ccode\u003Eguard()\u003C/code\u003E becomes false. \nA cancellation check is performed whenever the computation is executed.\n\n The existence of this method permits the use of \u003Ccode\u003Ewhile\u003C/code\u003E in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncbuilder.html#Zero","title":"AsyncBuilder.Zero","content":"AsyncBuilder.Zero \nZero \nCreates an asynchronous computation that just returns \u003Ccode\u003E()\u003C/code\u003E. \nA cancellation check is performed when the computation is executed.\n\n The existence of this method permits the use of empty \u003Ccode\u003Eelse\u003C/code\u003E branches in the \n \u003Ccode\u003Easync { ... }\u003C/code\u003E computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncreplychannel-1.html","title":"AsyncReplyChannel\u003C\u0027Reply\u003E","content":"AsyncReplyChannel\u003C\u0027Reply\u003E \nA handle to a capability to reply to a PostAndReply message. \nAsyncReplyChannel\u003C\u0027Reply\u003E.Reply \nReply","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpasyncreplychannel-1.html#Reply","title":"AsyncReplyChannel\u003C\u0027Reply\u003E.Reply","content":"AsyncReplyChannel\u003C\u0027Reply\u003E.Reply \nReply \nSends a reply to a PostAndReply message.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-asyncreturn.html","title":"AsyncReturn","content":"AsyncReturn \nThe F# compiler emits references to this type to implement F# async expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-backgroundtaskbuilder.html","title":"BackgroundTaskBuilder","content":"BackgroundTaskBuilder \n Contains methods to build tasks using the F# computation expression syntax \nBackgroundTaskBuilder.Run \nRun \nBackgroundTaskBuilder.RunDynamic \nRunDynamic","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-backgroundtaskbuilder.html#Run","title":"BackgroundTaskBuilder.Run","content":"BackgroundTaskBuilder.Run \nRun \n Hosts the task code in a state machine and starts the task, executing in the threadpool using Task.Run","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-backgroundtaskbuilder.html#RunDynamic","title":"BackgroundTaskBuilder.RunDynamic","content":"BackgroundTaskBuilder.RunDynamic \nRunDynamic \n The entry point for the dynamic implementation of the corresponding operation. Do not use directly, only used when executing quotations that involve tasks or other reflective execution of F# code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpdelegateevent-1.html","title":"DelegateEvent\u003C\u0027Delegate\u003E","content":"DelegateEvent\u003C\u0027Delegate\u003E \nEvent implementations for an arbitrary type of delegate. \nDelegateEvent\u003C\u0027Delegate\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDelegateEvent\u003C\u0027Delegate\u003E.Trigger \nTrigger \nDelegateEvent\u003C\u0027Delegate\u003E.Publish \nPublish","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpdelegateevent-1.html#\u0060\u0060.ctor\u0060\u0060","title":"DelegateEvent\u003C\u0027Delegate\u003E.\u0060\u0060.ctor\u0060\u0060","content":"DelegateEvent\u003C\u0027Delegate\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an event object suitable for implementing an arbitrary type of delegate.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpdelegateevent-1.html#Trigger","title":"DelegateEvent\u003C\u0027Delegate\u003E.Trigger","content":"DelegateEvent\u003C\u0027Delegate\u003E.Trigger \nTrigger \nTriggers the event using the given parameters.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpdelegateevent-1.html#Publish","title":"DelegateEvent\u003C\u0027Delegate\u003E.Publish","content":"DelegateEvent\u003C\u0027Delegate\u003E.Publish \nPublish \nPublishes the event as a first class event value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpevent-2.html","title":"Event\u003C\u0027Delegate, \u0027Args\u003E","content":"Event\u003C\u0027Delegate, \u0027Args\u003E \nEvent implementations for a delegate types following the standard .NET Framework convention of a first \u0027sender\u0027 argument. \nEvent\u003C\u0027Delegate, \u0027Args\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEvent\u003C\u0027Delegate, \u0027Args\u003E.Trigger \nTrigger \nEvent\u003C\u0027Delegate, \u0027Args\u003E.Publish \nPublish","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpevent-2.html#\u0060\u0060.ctor\u0060\u0060","title":"Event\u003C\u0027Delegate, \u0027Args\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Event\u003C\u0027Delegate, \u0027Args\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an event object suitable for delegate types following the standard .NET Framework convention of a first \u0027sender\u0027 argument.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpevent-2.html#Trigger","title":"Event\u003C\u0027Delegate, \u0027Args\u003E.Trigger","content":"Event\u003C\u0027Delegate, \u0027Args\u003E.Trigger \nTrigger \nTriggers the event using the given sender object and parameters. The sender object may be \u003Ccode\u003Enull\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpevent-2.html#Publish","title":"Event\u003C\u0027Delegate, \u0027Args\u003E.Publish","content":"Event\u003C\u0027Delegate, \u0027Args\u003E.Publish \nPublish \nPublishes the event as a first class event value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpevent-1.html","title":"Event\u003C\u0027T\u003E","content":"Event\u003C\u0027T\u003E \nEvent implementations for the IEvent\u003C_\u003E type. \nEvent\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nEvent\u003C\u0027T\u003E.Trigger \nTrigger \nEvent\u003C\u0027T\u003E.Publish \nPublish","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpevent-1.html#\u0060\u0060.ctor\u0060\u0060","title":"Event\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Event\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an observable object.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpevent-1.html#Trigger","title":"Event\u003C\u0027T\u003E.Trigger","content":"Event\u003C\u0027T\u003E.Trigger \nTrigger \nTriggers the event using the given parameters.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpevent-1.html#Publish","title":"Event\u003C\u0027T\u003E.Publish","content":"Event\u003C\u0027T\u003E.Publish \nPublish \nPublishes the event as a first class value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharphandler-1.html","title":"Handler\u003C\u0027T\u003E","content":"Handler\u003C\u0027T\u003E \nA delegate type associated with the F# event type \u003Ccode\u003EIEvent\u0026lt;_\u0026gt;\u003C/code\u003E \nHandler\u003C\u0027T\u003E.Invoke \nInvoke","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharphandler-1.html#Invoke","title":"Handler\u003C\u0027T\u003E.Invoke","content":"Handler\u003C\u0027T\u003E.Invoke \nInvoke \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-idelegateevent-1.html","title":"IDelegateEvent\u003C\u0027Delegate\u003E","content":"IDelegateEvent\u003C\u0027Delegate\u003E \nFirst class event values for arbitrary delegate types. \nF# gives special status to member properties compatible with type IDelegateEvent and \n tagged with the CLIEventAttribute. In this case the F# compiler generates appropriate \n CLI metadata to make the member appear to other CLI languages as a CLI event. \nIDelegateEvent\u003C\u0027Delegate\u003E.AddHandler \nAddHandler \nIDelegateEvent\u003C\u0027Delegate\u003E.RemoveHandler \nRemoveHandler","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-idelegateevent-1.html#AddHandler","title":"IDelegateEvent\u003C\u0027Delegate\u003E.AddHandler","content":"IDelegateEvent\u003C\u0027Delegate\u003E.AddHandler \nAddHandler \nConnect a handler delegate object to the event. A handler can\n be later removed using RemoveHandler. The listener will\n be invoked when the event is fired.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-idelegateevent-1.html#RemoveHandler","title":"IDelegateEvent\u003C\u0027Delegate\u003E.RemoveHandler","content":"IDelegateEvent\u003C\u0027Delegate\u003E.RemoveHandler \nRemoveHandler \nRemove a listener delegate from an event listener store.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-ievent-2.html","title":"IEvent\u003C\u0027Delegate, \u0027Args\u003E","content":"IEvent\u003C\u0027Delegate, \u0027Args\u003E \nFirst class event values for CLI events conforming to CLI Framework standards.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-ievent-1.html","title":"IEvent\u003C\u0027T\u003E","content":"IEvent\u003C\u0027T\u003E \nFirst-class listening points (i.e. objects that permit you to register a callback\n activated when the event is triggered). ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html","title":"MailboxProcessor\u003C\u0027Msg\u003E","content":"MailboxProcessor\u003C\u0027Msg\u003E \nA message-processing agent which executes an asynchronous computation. \nThe agent encapsulates a message queue that supports multiple-writers and\n a single reader agent. Writers send messages to the agent by using the Post\n method and its variations.\n\n The agent may wait for messages using the Receive or TryReceive methods or\n scan through all available messages using the Scan or TryScan method. \nMailboxProcessor\u003C\u0027Msg\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMailboxProcessor\u003C\u0027Msg\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nMailboxProcessor\u003C\u0027Msg\u003E.Dispose \nDispose \nMailboxProcessor\u003C\u0027Msg\u003E.Post \nPost \nMailboxProcessor\u003C\u0027Msg\u003E.PostAndAsyncReply \nPostAndAsyncReply \nMailboxProcessor\u003C\u0027Msg\u003E.PostAndReply \nPostAndReply \nMailboxProcessor\u003C\u0027Msg\u003E.PostAndTryAsyncReply \nPostAndTryAsyncReply \nMailboxProcessor\u003C\u0027Msg\u003E.Receive \nReceive \nMailboxProcessor\u003C\u0027Msg\u003E.Scan \nScan \nMailboxProcessor\u003C\u0027Msg\u003E.Start \nStart \nMailboxProcessor\u003C\u0027Msg\u003E.StartImmediate \nStartImmediate \nMailboxProcessor\u003C\u0027Msg\u003E.TryPostAndReply \nTryPostAndReply \nMailboxProcessor\u003C\u0027Msg\u003E.TryReceive \nTryReceive \nMailboxProcessor\u003C\u0027Msg\u003E.TryScan \nTryScan \nMailboxProcessor\u003C\u0027Msg\u003E.CurrentQueueLength \nCurrentQueueLength \nMailboxProcessor\u003C\u0027Msg\u003E.DefaultTimeout \nDefaultTimeout \nMailboxProcessor\u003C\u0027Msg\u003E.Error \nError \nMailboxProcessor\u003C\u0027Msg\u003E.Start \nStart \nMailboxProcessor\u003C\u0027Msg\u003E.Start \nStart \nMailboxProcessor\u003C\u0027Msg\u003E.StartImmediate \nStartImmediate \nMailboxProcessor\u003C\u0027Msg\u003E.StartImmediate \nStartImmediate","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#\u0060\u0060.ctor\u0060\u0060","title":"MailboxProcessor\u003C\u0027Msg\u003E.\u0060\u0060.ctor\u0060\u0060","content":"MailboxProcessor\u003C\u0027Msg\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an agent. The \u003Ccode\u003Ebody\u003C/code\u003E function is used to generate the asynchronous\n computation executed by the agent. This function is not executed until\n \u003Ccode\u003EStart\u003C/code\u003E is called.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#\u0060\u0060.ctor\u0060\u0060","title":"MailboxProcessor\u003C\u0027Msg\u003E.\u0060\u0060.ctor\u0060\u0060","content":"MailboxProcessor\u003C\u0027Msg\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an agent. The \u003Ccode\u003Ebody\u003C/code\u003E function is used to generate the asynchronous\n computation executed by the agent. This function is not executed until\n \u003Ccode\u003EStart\u003C/code\u003E is called.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#Dispose","title":"MailboxProcessor\u003C\u0027Msg\u003E.Dispose","content":"MailboxProcessor\u003C\u0027Msg\u003E.Dispose \nDispose \nDisposes the agent\u0027s internal resources.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#Post","title":"MailboxProcessor\u003C\u0027Msg\u003E.Post","content":"MailboxProcessor\u003C\u0027Msg\u003E.Post \nPost \nPosts a message to the message queue of the MailboxProcessor, asynchronously.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#PostAndAsyncReply","title":"MailboxProcessor\u003C\u0027Msg\u003E.PostAndAsyncReply","content":"MailboxProcessor\u003C\u0027Msg\u003E.PostAndAsyncReply \nPostAndAsyncReply \nPosts a message to an agent and await a reply on the channel, asynchronously. \nThe message is generated by applying \u003Ccode\u003EbuildMessage\u003C/code\u003E to a new reply channel\n to be incorporated into the message. The receiving agent must process this\n message and invoke the Reply method on this reply channel precisely once.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#PostAndReply","title":"MailboxProcessor\u003C\u0027Msg\u003E.PostAndReply","content":"MailboxProcessor\u003C\u0027Msg\u003E.PostAndReply \nPostAndReply \nPosts a message to an agent and await a reply on the channel, synchronously. \nThe message is generated by applying \u003Ccode\u003EbuildMessage\u003C/code\u003E to a new reply channel\n to be incorporated into the message. The receiving agent must process this\n message and invoke the Reply method on this reply channel precisely once.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#PostAndTryAsyncReply","title":"MailboxProcessor\u003C\u0027Msg\u003E.PostAndTryAsyncReply","content":"MailboxProcessor\u003C\u0027Msg\u003E.PostAndTryAsyncReply \nPostAndTryAsyncReply \nLike AsyncPostAndReply, but returns None if no reply within the timeout period.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#Receive","title":"MailboxProcessor\u003C\u0027Msg\u003E.Receive","content":"MailboxProcessor\u003C\u0027Msg\u003E.Receive \nReceive \nWaits for a message. This will consume the first message in arrival order. \nThis method is for use within the body of the agent.\n\n This method is for use within the body of the agent. For each agent, at most\n one concurrent reader may be active, so no more than one concurrent call to\n Receive, TryReceive, Scan and/or TryScan may be active.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#Scan","title":"MailboxProcessor\u003C\u0027Msg\u003E.Scan","content":"MailboxProcessor\u003C\u0027Msg\u003E.Scan \nScan \nScans for a message by looking through messages in arrival order until \u003Ccode\u003Escanner\u003C/code\u003E\n returns a Some value. Other messages remain in the queue. \nReturns None if a timeout is given and the timeout is exceeded.\n\n This method is for use within the body of the agent. For each agent, at most\n one concurrent reader may be active, so no more than one concurrent call to\n Receive, TryReceive, Scan and/or TryScan may be active.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#Start","title":"MailboxProcessor\u003C\u0027Msg\u003E.Start","content":"MailboxProcessor\u003C\u0027Msg\u003E.Start \nStart \nStarts the agent.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#StartImmediate","title":"MailboxProcessor\u003C\u0027Msg\u003E.StartImmediate","content":"MailboxProcessor\u003C\u0027Msg\u003E.StartImmediate \nStartImmediate \nStarts the agent immediately on the current operating system thread.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#TryPostAndReply","title":"MailboxProcessor\u003C\u0027Msg\u003E.TryPostAndReply","content":"MailboxProcessor\u003C\u0027Msg\u003E.TryPostAndReply \nTryPostAndReply \nLike PostAndReply, but returns None if no reply within the timeout period.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#TryReceive","title":"MailboxProcessor\u003C\u0027Msg\u003E.TryReceive","content":"MailboxProcessor\u003C\u0027Msg\u003E.TryReceive \nTryReceive \nWaits for a message. This will consume the first message in arrival order. \nThis method is for use within the body of the agent.\n\n Returns None if a timeout is given and the timeout is exceeded.\n\n This method is for use within the body of the agent. For each agent, at most\n one concurrent reader may be active, so no more than one concurrent call to\n Receive, TryReceive, Scan and/or TryScan may be active.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#TryScan","title":"MailboxProcessor\u003C\u0027Msg\u003E.TryScan","content":"MailboxProcessor\u003C\u0027Msg\u003E.TryScan \nTryScan \nScans for a message by looking through messages in arrival order until \u003Ccode\u003Escanner\u003C/code\u003E\n returns a Some value. Other messages remain in the queue. \nThis method is for use within the body of the agent. For each agent, at most\n one concurrent reader may be active, so no more than one concurrent call to\n Receive, TryReceive, Scan and/or TryScan may be active.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#CurrentQueueLength","title":"MailboxProcessor\u003C\u0027Msg\u003E.CurrentQueueLength","content":"MailboxProcessor\u003C\u0027Msg\u003E.CurrentQueueLength \nCurrentQueueLength \nReturns the number of unprocessed messages in the message queue of the agent.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#DefaultTimeout","title":"MailboxProcessor\u003C\u0027Msg\u003E.DefaultTimeout","content":"MailboxProcessor\u003C\u0027Msg\u003E.DefaultTimeout \nDefaultTimeout \nRaises a timeout exception if a message not received in this amount of time. By default\n no timeout is used.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#Error","title":"MailboxProcessor\u003C\u0027Msg\u003E.Error","content":"MailboxProcessor\u003C\u0027Msg\u003E.Error \nError \nOccurs when the execution of the agent results in an exception.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#Start","title":"MailboxProcessor\u003C\u0027Msg\u003E.Start","content":"MailboxProcessor\u003C\u0027Msg\u003E.Start \nStart \nCreates and starts an agent. The \u003Ccode\u003Ebody\u003C/code\u003E function is used to generate the asynchronous\n computation executed by the agent.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#Start","title":"MailboxProcessor\u003C\u0027Msg\u003E.Start","content":"MailboxProcessor\u003C\u0027Msg\u003E.Start \nStart \nCreates and starts an agent. The \u003Ccode\u003Ebody\u003C/code\u003E function is used to generate the asynchronous\n computation executed by the agent.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#StartImmediate","title":"MailboxProcessor\u003C\u0027Msg\u003E.StartImmediate","content":"MailboxProcessor\u003C\u0027Msg\u003E.StartImmediate \nStartImmediate \nCreates and starts an agent immediately on the current operating system thread. The \u003Ccode\u003Ebody\u003C/code\u003E\n function is used to generate the asynchronous computation executed by the agent.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-fsharpmailboxprocessor-1.html#StartImmediate","title":"MailboxProcessor\u003C\u0027Msg\u003E.StartImmediate","content":"MailboxProcessor\u003C\u0027Msg\u003E.StartImmediate \nStartImmediate \nCreates and starts an agent immediately on the current operating system thread. The \u003Ccode\u003Ebody\u003C/code\u003E\n function is used to generate the asynchronous computation executed by the agent.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilder.html","title":"TaskBuilder","content":"TaskBuilder \n Contains methods to build tasks using the F# computation expression syntax \nTaskBuilder.Run \nRun \nTaskBuilder.RunDynamic \nRunDynamic","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilder.html#Run","title":"TaskBuilder.Run","content":"TaskBuilder.Run \nRun \n Hosts the task code in a state machine and starts the task.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilder.html#RunDynamic","title":"TaskBuilder.RunDynamic","content":"TaskBuilder.RunDynamic \nRunDynamic \n The entry point for the dynamic implementation of the corresponding operation. Do not use directly, only used when executing quotations that involve tasks or other reflective execution of F# code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html","title":"TaskBuilderBase","content":"TaskBuilderBase \n Contains methods to build tasks using the F# computation expression syntax \nTaskBuilderBase.Combine \nCombine \nTaskBuilderBase.Delay \nDelay \nTaskBuilderBase.For \nFor \nTaskBuilderBase.Return \nReturn \nTaskBuilderBase.TryFinally \nTryFinally \nTaskBuilderBase.TryWith \nTryWith \nTaskBuilderBase.Using \nUsing \nTaskBuilderBase.While \nWhile \nTaskBuilderBase.Zero \nZero","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html#Combine","title":"TaskBuilderBase.Combine","content":"TaskBuilderBase.Combine \nCombine \n Specifies the sequential composition of two units of task code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html#Delay","title":"TaskBuilderBase.Delay","content":"TaskBuilderBase.Delay \nDelay \n Specifies the delayed execution of a unit of task code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html#For","title":"TaskBuilderBase.For","content":"TaskBuilderBase.For \nFor \n Specifies the iterative execution of a unit of task code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html#Return","title":"TaskBuilderBase.Return","content":"TaskBuilderBase.Return \nReturn \n Specifies a unit of task code which returns a value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html#TryFinally","title":"TaskBuilderBase.TryFinally","content":"TaskBuilderBase.TryFinally \nTryFinally \n Specifies a unit of task code which executed using try/finally semantics","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html#TryWith","title":"TaskBuilderBase.TryWith","content":"TaskBuilderBase.TryWith \nTryWith \n Specifies a unit of task code which executed using try/with semantics","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html#Using","title":"TaskBuilderBase.Using","content":"TaskBuilderBase.Using \nUsing \n Specifies a unit of task code which binds to the resource implementing IAsyncDisposable and disposes it asynchronously","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html#While","title":"TaskBuilderBase.While","content":"TaskBuilderBase.While \nWhile \n Specifies the iterative execution of a unit of task code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderbase.html#Zero","title":"TaskBuilderBase.Zero","content":"TaskBuilderBase.Zero \nZero \n Specifies a unit of task code which produces no result","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskcode-2.html","title":"TaskCode\u003C\u0027TOverall, \u0027T\u003E","content":"TaskCode\u003C\u0027TOverall, \u0027T\u003E \n A special compiler-recognised delegate type for specifying blocks of task code\n with access to the state machine.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskresumptionfunc-1.html","title":"TaskResumptionFunc\u003C\u0027TOverall\u003E","content":"TaskResumptionFunc\u003C\u0027TOverall\u003E \n Represents the runtime continuation of a task state machine created dynamically","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskstatemachine-1.html","title":"TaskStateMachine\u003C\u0027TOverall\u003E","content":"TaskStateMachine\u003C\u0027TOverall\u003E \n This is used by the compiler as a template for creating state machine structs","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskstatemachinedata-1.html","title":"TaskStateMachineData\u003C\u0027T\u003E","content":"TaskStateMachineData\u003C\u0027T\u003E \n The extra data stored in ResumableStateMachine for tasks \nTaskStateMachineData\u003C\u0027T\u003E.Result \nResult \nTaskStateMachineData\u003C\u0027T\u003E.MethodBuilder \nMethodBuilder","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskstatemachinedata-1.html#Result","title":"TaskStateMachineData\u003C\u0027T\u003E.Result","content":"TaskStateMachineData\u003C\u0027T\u003E.Result \nResult \n Holds the final result of the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskstatemachinedata-1.html#MethodBuilder","title":"TaskStateMachineData\u003C\u0027T\u003E.MethodBuilder","content":"TaskStateMachineData\u003C\u0027T\u003E.MethodBuilder \nMethodBuilder \n Holds the MethodBuilder for the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-highpriority.html","title":"HighPriority","content":"HighPriority \n Contains high-priority overloads for the \u0060task\u0060 computation expression builder. \nHighPriority.Bind \nBind \nHighPriority.ReturnFrom \nReturnFrom \nHighPriority.BindDynamic \nBindDynamic","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-highpriority.html#Bind","title":"HighPriority.Bind","content":"HighPriority.Bind \nBind \n Specifies a unit of task code which draws a result from a task then calls a continuation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-highpriority.html#ReturnFrom","title":"HighPriority.ReturnFrom","content":"HighPriority.ReturnFrom \nReturnFrom \n Specifies a unit of task code which draws a result from a task.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-highpriority.html#BindDynamic","title":"HighPriority.BindDynamic","content":"HighPriority.BindDynamic \nBindDynamic \n The entry point for the dynamic implementation of the corresponding operation. Do not use directly, only used when executing quotations that involve tasks or other reflective execution of F# code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-lowpriority.html","title":"LowPriority","content":"LowPriority \n Contains low-priority overloads for the \u0060task\u0060 computation expression builder. \nLowPriority.Bind \nBind \nLowPriority.ReturnFrom \nReturnFrom \nLowPriority.BindDynamic \nBindDynamic \nLowPriority.Using \nUsing","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-lowpriority.html#Bind","title":"LowPriority.Bind","content":"LowPriority.Bind \nBind \n Specifies a unit of task code which draws a result from a task-like value\n satisfying the GetAwaiter pattern and calls a continuation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-lowpriority.html#ReturnFrom","title":"LowPriority.ReturnFrom","content":"LowPriority.ReturnFrom \nReturnFrom \n Specifies a unit of task code which draws its result from a task-like value\n satisfying the GetAwaiter pattern.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-lowpriority.html#BindDynamic","title":"LowPriority.BindDynamic","content":"LowPriority.BindDynamic \nBindDynamic \n The entry point for the dynamic implementation of the corresponding operation. Do not use directly, only used when executing quotations that involve tasks or other reflective execution of F# code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-lowpriority.html#Using","title":"LowPriority.Using","content":"LowPriority.Using \nUsing \n Specifies a unit of task code which binds to the resource implementing IDisposable and disposes it synchronously","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-mediumpriority.html","title":"MediumPriority","content":"MediumPriority \n Contains medium-priority overloads for the \u0060task\u0060 computation expression builder. \nMediumPriority.Bind \nBind \nMediumPriority.ReturnFrom \nReturnFrom","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-mediumpriority.html#Bind","title":"MediumPriority.Bind","content":"MediumPriority.Bind \nBind \n Specifies a unit of task code which draws a result from an F# async value then calls a continuation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-control-taskbuilderextensions-mediumpriority.html#ReturnFrom","title":"MediumPriority.ReturnFrom","content":"MediumPriority.ReturnFrom \nReturnFrom \n Specifies a unit of task code which draws a result from an F# async value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-byrefkinds.html","title":"ByRefKinds","content":"ByRefKinds \nRepresents the types of byrefs in F# 4.5\u002B \nByRefKinds.In \nIn \nByRefKinds.InOut \nInOut \nByRefKinds.Out \nOut","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-byrefkinds-in.html","title":"In","content":"In \n Represents a byref that can be read","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-byrefkinds-inout.html","title":"InOut","content":"InOut \n Represents a byref that can be both read and written","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-byrefkinds-out.html","title":"Out","content":"Out \n Represents a byref that can be written","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html","title":"ExtraTopLevelOperators","content":"ExtraTopLevelOperators \nA set of extra operators and functions. This module is automatically opened in all F# code. \nExtraTopLevelOperators.Checked \nChecked \nExtraTopLevelOperators.printf \nprintf \nExtraTopLevelOperators.printfn \nprintfn \nExtraTopLevelOperators.eprintf \neprintf \nExtraTopLevelOperators.eprintfn \neprintfn \nExtraTopLevelOperators.sprintf \nsprintf \nExtraTopLevelOperators.failwithf \nfailwithf \nExtraTopLevelOperators.fprintf \nfprintf \nExtraTopLevelOperators.fprintfn \nfprintfn \nExtraTopLevelOperators.set \nset \nExtraTopLevelOperators.async \nasync \nExtraTopLevelOperators.single \nsingle \nExtraTopLevelOperators.double \ndouble \nExtraTopLevelOperators.uint8 \nuint8 \nExtraTopLevelOperators.int8 \nint8 \nExtraTopLevelOperators.dict \ndict \nExtraTopLevelOperators.readOnlyDict \nreadOnlyDict \nExtraTopLevelOperators.array2D \narray2D \nExtraTopLevelOperators.(~%) \n(~%) \nExtraTopLevelOperators.(~%%) \n(~%%) \nExtraTopLevelOperators.query \nquery \nExtraTopLevelOperators.(|Lazy|) \n(|Lazy|)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#printf","title":"ExtraTopLevelOperators.printf","content":"ExtraTopLevelOperators.printf \nprintf \nPrint to \u003Ccode\u003Estdout\u003C/code\u003E using the given format.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#printfn","title":"ExtraTopLevelOperators.printfn","content":"ExtraTopLevelOperators.printfn \nprintfn \nPrint to \u003Ccode\u003Estdout\u003C/code\u003E using the given format, and add a newline.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#eprintf","title":"ExtraTopLevelOperators.eprintf","content":"ExtraTopLevelOperators.eprintf \neprintf \nPrint to \u003Ccode\u003Estderr\u003C/code\u003E using the given format.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#eprintfn","title":"ExtraTopLevelOperators.eprintfn","content":"ExtraTopLevelOperators.eprintfn \neprintfn \nPrint to \u003Ccode\u003Estderr\u003C/code\u003E using the given format, and add a newline.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#sprintf","title":"ExtraTopLevelOperators.sprintf","content":"ExtraTopLevelOperators.sprintf \nsprintf \nPrint to a string using the given format.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#failwithf","title":"ExtraTopLevelOperators.failwithf","content":"ExtraTopLevelOperators.failwithf \nfailwithf \nPrint to a string buffer and raise an exception with the given\n result. Helper printers must return strings.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#fprintf","title":"ExtraTopLevelOperators.fprintf","content":"ExtraTopLevelOperators.fprintf \nfprintf \nPrint to a file using the given format.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#fprintfn","title":"ExtraTopLevelOperators.fprintfn","content":"ExtraTopLevelOperators.fprintfn \nfprintfn \nPrint to a file using the given format, and add a newline.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#set","title":"ExtraTopLevelOperators.set","content":"ExtraTopLevelOperators.set \nset \nBuilds a set from a sequence of objects. The objects are indexed using generic comparison.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#async","title":"ExtraTopLevelOperators.async","content":"ExtraTopLevelOperators.async \nasync \nBuilds an asynchronous workflow using computation expression syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#single","title":"ExtraTopLevelOperators.single","content":"ExtraTopLevelOperators.single \nsingle \nConverts the argument to 32-bit float. \nThis is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003ESingle.Parse()\u003C/code\u003E  with InvariantCulture settings. Otherwise the operation requires and invokes a \u003Ccode\u003EToSingle\u003C/code\u003E method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#double","title":"ExtraTopLevelOperators.double","content":"ExtraTopLevelOperators.double \ndouble \nConverts the argument to 64-bit float. \nThis is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EDouble.Parse()\u003C/code\u003E  with InvariantCulture settings. Otherwise the operation requires and invokes a \u003Ccode\u003EToDouble\u003C/code\u003E method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#uint8","title":"ExtraTopLevelOperators.uint8","content":"ExtraTopLevelOperators.uint8 \nuint8 \nConverts the argument to byte. \nThis is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EByte.Parse()\u003C/code\u003E on strings and otherwise requires a \u003Ccode\u003EToByte\u003C/code\u003E method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#int8","title":"ExtraTopLevelOperators.int8","content":"ExtraTopLevelOperators.int8 \nint8 \nConverts the argument to signed byte. \nThis is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003ESByte.Parse()\u003C/code\u003E  with InvariantCulture settings.\n Otherwise the operation requires and invokes a \u003Ccode\u003EToSByte\u003C/code\u003E method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#dict","title":"ExtraTopLevelOperators.dict","content":"ExtraTopLevelOperators.dict \ndict \nBuilds a read-only lookup table from a sequence of key/value pairs. The key objects are indexed using generic hashing and equality.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#readOnlyDict","title":"ExtraTopLevelOperators.readOnlyDict","content":"ExtraTopLevelOperators.readOnlyDict \nreadOnlyDict \nBuilds a read-only lookup table from a sequence of key/value pairs. The key objects are indexed using generic hashing and equality.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#array2D","title":"ExtraTopLevelOperators.array2D","content":"ExtraTopLevelOperators.array2D \narray2D \nBuilds a 2D array from a sequence of sequences of elements.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#(~%)","title":"ExtraTopLevelOperators.(~%)","content":"ExtraTopLevelOperators.(~%) \n(~%) \nSpecial prefix operator for splicing typed expressions into quotation holes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#(~%%)","title":"ExtraTopLevelOperators.(~%%)","content":"ExtraTopLevelOperators.(~%%) \n(~%%) \nSpecial prefix operator for splicing untyped expressions into quotation holes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#query","title":"ExtraTopLevelOperators.query","content":"ExtraTopLevelOperators.query \nquery \nBuilds a query using query syntax and operators.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators.html#(|Lazy|)","title":"ExtraTopLevelOperators.(|Lazy|)","content":"ExtraTopLevelOperators.(|Lazy|) \n(|Lazy|) \nAn active pattern to force the execution of values of type \u003Ccode\u003ELazy\u0026lt;_\u0026gt;\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators-checked.html","title":"Checked","content":"Checked \n \nChecked.uint8 \nuint8 \nChecked.int8 \nint8","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators-checked.html#uint8","title":"Checked.uint8","content":"Checked.uint8 \nuint8 \nConverts the argument to byte. \nThis is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EByte.Parse()\u003C/code\u003E on strings and otherwise requires a \u003Ccode\u003EToByte\u003C/code\u003E method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-extratopleveloperators-checked.html#int8","title":"Checked.int8","content":"Checked.int8 \nint8 \nConverts the argument to signed byte. \nThis is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003ESByte.Parse()\u003C/code\u003E  with InvariantCulture settings.\n Otherwise the operation requires and invokes a \u003Ccode\u003EToSByte\u003C/code\u003E method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html","title":"LanguagePrimitives","content":"LanguagePrimitives \nLanguage primitives associated with the F# language \nLanguagePrimitives.ErrorStrings \nErrorStrings \nLanguagePrimitives.HashCompare \nHashCompare \nLanguagePrimitives.IntrinsicFunctions \nIntrinsicFunctions \nLanguagePrimitives.IntrinsicOperators \nIntrinsicOperators \nLanguagePrimitives.GenericEquality \nGenericEquality \nLanguagePrimitives.GenericEqualityER \nGenericEqualityER \nLanguagePrimitives.GenericEqualityWithComparer \nGenericEqualityWithComparer \nLanguagePrimitives.GenericComparison \nGenericComparison \nLanguagePrimitives.GenericComparisonWithComparer \nGenericComparisonWithComparer \nLanguagePrimitives.GenericLessThan \nGenericLessThan \nLanguagePrimitives.GenericGreaterThan \nGenericGreaterThan \nLanguagePrimitives.GenericLessOrEqual \nGenericLessOrEqual \nLanguagePrimitives.GenericGreaterOrEqual \nGenericGreaterOrEqual \nLanguagePrimitives.GenericMinimum \nGenericMinimum \nLanguagePrimitives.GenericMaximum \nGenericMaximum \nLanguagePrimitives.PhysicalEquality \nPhysicalEquality \nLanguagePrimitives.PhysicalHash \nPhysicalHash \nLanguagePrimitives.GenericEqualityComparer \nGenericEqualityComparer \nLanguagePrimitives.GenericEqualityERComparer \nGenericEqualityERComparer \nLanguagePrimitives.GenericComparer \nGenericComparer \nLanguagePrimitives.FastGenericComparer \nFastGenericComparer \nLanguagePrimitives.FastGenericEqualityComparer \nFastGenericEqualityComparer \nLanguagePrimitives.FastLimitedGenericEqualityComparer \nFastLimitedGenericEqualityComparer \nLanguagePrimitives.FastGenericEqualityComparerFromTable \nFastGenericEqualityComparerFromTable \nLanguagePrimitives.FastGenericComparerFromTable \nFastGenericComparerFromTable \nLanguagePrimitives.GenericHash \nGenericHash \nLanguagePrimitives.GenericLimitedHash \nGenericLimitedHash \nLanguagePrimitives.GenericHashWithComparer \nGenericHashWithComparer \nLanguagePrimitives.EnumOfValue \nEnumOfValue \nLanguagePrimitives.EnumToValue \nEnumToValue \nLanguagePrimitives.FloatWithMeasure \nFloatWithMeasure \nLanguagePrimitives.Float32WithMeasure \nFloat32WithMeasure \nLanguagePrimitives.DecimalWithMeasure \nDecimalWithMeasure \nLanguagePrimitives.Int32WithMeasure \nInt32WithMeasure \nLanguagePrimitives.Int64WithMeasure \nInt64WithMeasure \nLanguagePrimitives.Int16WithMeasure \nInt16WithMeasure \nLanguagePrimitives.SByteWithMeasure \nSByteWithMeasure \nLanguagePrimitives.IntPtrWithMeasure \nIntPtrWithMeasure \nLanguagePrimitives.UInt32WithMeasure \nUInt32WithMeasure \nLanguagePrimitives.UInt64WithMeasure \nUInt64WithMeasure \nLanguagePrimitives.UInt16WithMeasure \nUInt16WithMeasure \nLanguagePrimitives.ByteWithMeasure \nByteWithMeasure \nLanguagePrimitives.UIntPtrWithMeasure \nUIntPtrWithMeasure \nLanguagePrimitives.ParseInt32 \nParseInt32 \nLanguagePrimitives.ParseUInt32 \nParseUInt32 \nLanguagePrimitives.ParseInt64 \nParseInt64 \nLanguagePrimitives.ParseUInt64 \nParseUInt64 \nLanguagePrimitives.GenericZeroDynamic \nGenericZeroDynamic \nLanguagePrimitives.GenericOneDynamic \nGenericOneDynamic \nLanguagePrimitives.AdditionDynamic \nAdditionDynamic \nLanguagePrimitives.CheckedAdditionDynamic \nCheckedAdditionDynamic \nLanguagePrimitives.MultiplyDynamic \nMultiplyDynamic \nLanguagePrimitives.CheckedMultiplyDynamic \nCheckedMultiplyDynamic \nLanguagePrimitives.SubtractionDynamic \nSubtractionDynamic \nLanguagePrimitives.DivisionDynamic \nDivisionDynamic \nLanguagePrimitives.UnaryNegationDynamic \nUnaryNegationDynamic \nLanguagePrimitives.ModulusDynamic \nModulusDynamic \nLanguagePrimitives.CheckedSubtractionDynamic \nCheckedSubtractionDynamic \nLanguagePrimitives.CheckedUnaryNegationDynamic \nCheckedUnaryNegationDynamic \nLanguagePrimitives.LeftShiftDynamic \nLeftShiftDynamic \nLanguagePrimitives.RightShiftDynamic \nRightShiftDynamic \nLanguagePrimitives.BitwiseAndDynamic \nBitwiseAndDynamic \nLanguagePrimitives.BitwiseOrDynamic \nBitwiseOrDynamic \nLanguagePrimitives.ExclusiveOrDynamic \nExclusiveOrDynamic \nLanguagePrimitives.LogicalNotDynamic \nLogicalNotDynamic \nLanguagePrimitives.ExplicitDynamic \nExplicitDynamic \nLanguagePrimitives.CheckedExplicitDynamic \nCheckedExplicitDynamic \nLanguagePrimitives.LessThanDynamic \nLessThanDynamic \nLanguagePrimitives.GreaterThanDynamic \nGreaterThanDynamic \nLanguagePrimitives.LessThanOrEqualDynamic \nLessThanOrEqualDynamic \nLanguagePrimitives.GreaterThanOrEqualDynamic \nGreaterThanOrEqualDynamic \nLanguagePrimitives.EqualityDynamic \nEqualityDynamic \nLanguagePrimitives.InequalityDynamic \nInequalityDynamic \nLanguagePrimitives.DivideByIntDynamic \nDivideByIntDynamic \nLanguagePrimitives.GenericZero \nGenericZero \nLanguagePrimitives.GenericOne \nGenericOne \nLanguagePrimitives.DivideByInt \nDivideByInt","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericEquality","title":"LanguagePrimitives.GenericEquality","content":"LanguagePrimitives.GenericEquality \nGenericEquality \nCompare two values for equality using partial equivalence relation semantics ([nan] \u003C\u003E [nan])","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericEqualityER","title":"LanguagePrimitives.GenericEqualityER","content":"LanguagePrimitives.GenericEqualityER \nGenericEqualityER \nCompare two values for equality using equivalence relation semantics ([nan] = [nan])","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericEqualityWithComparer","title":"LanguagePrimitives.GenericEqualityWithComparer","content":"LanguagePrimitives.GenericEqualityWithComparer \nGenericEqualityWithComparer \nCompare two values for equality","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericComparison","title":"LanguagePrimitives.GenericComparison","content":"LanguagePrimitives.GenericComparison \nGenericComparison \nCompare two values ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericComparisonWithComparer","title":"LanguagePrimitives.GenericComparisonWithComparer","content":"LanguagePrimitives.GenericComparisonWithComparer \nGenericComparisonWithComparer \nCompare two values. May be called as a recursive case from an implementation of System.IComparable to\n ensure consistent NaN comparison semantics.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericLessThan","title":"LanguagePrimitives.GenericLessThan","content":"LanguagePrimitives.GenericLessThan \nGenericLessThan \nCompare two values   ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericGreaterThan","title":"LanguagePrimitives.GenericGreaterThan","content":"LanguagePrimitives.GenericGreaterThan \nGenericGreaterThan \nCompare two values   ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericLessOrEqual","title":"LanguagePrimitives.GenericLessOrEqual","content":"LanguagePrimitives.GenericLessOrEqual \nGenericLessOrEqual \nCompare two values   ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericGreaterOrEqual","title":"LanguagePrimitives.GenericGreaterOrEqual","content":"LanguagePrimitives.GenericGreaterOrEqual \nGenericGreaterOrEqual \nCompare two values   ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericMinimum","title":"LanguagePrimitives.GenericMinimum","content":"LanguagePrimitives.GenericMinimum \nGenericMinimum \nTake the minimum of two values structurally according to the order given by GenericComparison","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericMaximum","title":"LanguagePrimitives.GenericMaximum","content":"LanguagePrimitives.GenericMaximum \nGenericMaximum \nTake the maximum of two values structurally according to the order given by GenericComparison","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#PhysicalEquality","title":"LanguagePrimitives.PhysicalEquality","content":"LanguagePrimitives.PhysicalEquality \nPhysicalEquality \nReference/physical equality. \n True if the inputs are reference-equal, false otherwise.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#PhysicalHash","title":"LanguagePrimitives.PhysicalHash","content":"LanguagePrimitives.PhysicalHash \nPhysicalHash \nThe physical hash. Hashes on the object identity.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericEqualityComparer","title":"LanguagePrimitives.GenericEqualityComparer","content":"LanguagePrimitives.GenericEqualityComparer \nGenericEqualityComparer \n\u003Cpre\u003EReturn an F# comparer object suitable for hashing and equality. This hashing behaviour\n of the returned comparer is not limited by an overall node count when hashing F#\n records, lists and union types.\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericEqualityERComparer","title":"LanguagePrimitives.GenericEqualityERComparer","content":"LanguagePrimitives.GenericEqualityERComparer \nGenericEqualityERComparer \n\u003Cpre\u003EReturn an F# comparer object suitable for hashing and equality. This hashing behaviour\n of the returned comparer is not limited by an overall node count when hashing F#\n records, lists and union types. This equality comparer has equivalence \n relation semantics ([nan] = [nan]).\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericComparer","title":"LanguagePrimitives.GenericComparer","content":"LanguagePrimitives.GenericComparer \nGenericComparer \nA static F# comparer object","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#FastGenericComparer","title":"LanguagePrimitives.FastGenericComparer","content":"LanguagePrimitives.FastGenericComparer \nFastGenericComparer \nMake an F# comparer object for the given type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#FastGenericEqualityComparer","title":"LanguagePrimitives.FastGenericEqualityComparer","content":"LanguagePrimitives.FastGenericEqualityComparer \nFastGenericEqualityComparer \nMake an F# hash/equality object for the given type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#FastLimitedGenericEqualityComparer","title":"LanguagePrimitives.FastLimitedGenericEqualityComparer","content":"LanguagePrimitives.FastLimitedGenericEqualityComparer \nFastLimitedGenericEqualityComparer \nMake an F# hash/equality object for the given type using node-limited hashing when hashing F#\n records, lists and union types.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#FastGenericEqualityComparerFromTable","title":"LanguagePrimitives.FastGenericEqualityComparerFromTable","content":"LanguagePrimitives.FastGenericEqualityComparerFromTable \nFastGenericEqualityComparerFromTable \nMake an F# hash/equality object for the given type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#FastGenericComparerFromTable","title":"LanguagePrimitives.FastGenericComparerFromTable","content":"LanguagePrimitives.FastGenericComparerFromTable \nFastGenericComparerFromTable \nMake an F# comparer object for the given type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericHash","title":"LanguagePrimitives.GenericHash","content":"LanguagePrimitives.GenericHash \nGenericHash \nHash a value according to its structure. This hash is not limited by an overall node count when hashing F#\n records, lists and union types.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericLimitedHash","title":"LanguagePrimitives.GenericLimitedHash","content":"LanguagePrimitives.GenericLimitedHash \nGenericLimitedHash \nHash a value according to its structure. Use the given limit to restrict the hash when hashing F#\n records, lists and union types.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericHashWithComparer","title":"LanguagePrimitives.GenericHashWithComparer","content":"LanguagePrimitives.GenericHashWithComparer \nGenericHashWithComparer \nRecursively hash a part of a value according to its structure. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#EnumOfValue","title":"LanguagePrimitives.EnumOfValue","content":"LanguagePrimitives.EnumOfValue \nEnumOfValue \nBuild an enum value from an underlying value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#EnumToValue","title":"LanguagePrimitives.EnumToValue","content":"LanguagePrimitives.EnumToValue \nEnumToValue \nGet the underlying value for an enum value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#FloatWithMeasure","title":"LanguagePrimitives.FloatWithMeasure","content":"LanguagePrimitives.FloatWithMeasure \nFloatWithMeasure \nCreates a float value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#Float32WithMeasure","title":"LanguagePrimitives.Float32WithMeasure","content":"LanguagePrimitives.Float32WithMeasure \nFloat32WithMeasure \nCreates a float32 value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#DecimalWithMeasure","title":"LanguagePrimitives.DecimalWithMeasure","content":"LanguagePrimitives.DecimalWithMeasure \nDecimalWithMeasure \nCreates a decimal value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#Int32WithMeasure","title":"LanguagePrimitives.Int32WithMeasure","content":"LanguagePrimitives.Int32WithMeasure \nInt32WithMeasure \nCreates an int32 value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#Int64WithMeasure","title":"LanguagePrimitives.Int64WithMeasure","content":"LanguagePrimitives.Int64WithMeasure \nInt64WithMeasure \nCreates an int64 value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#Int16WithMeasure","title":"LanguagePrimitives.Int16WithMeasure","content":"LanguagePrimitives.Int16WithMeasure \nInt16WithMeasure \nCreates an int16 value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#SByteWithMeasure","title":"LanguagePrimitives.SByteWithMeasure","content":"LanguagePrimitives.SByteWithMeasure \nSByteWithMeasure \nCreates an sbyte value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#IntPtrWithMeasure","title":"LanguagePrimitives.IntPtrWithMeasure","content":"LanguagePrimitives.IntPtrWithMeasure \nIntPtrWithMeasure \nCreates a nativeint value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#UInt32WithMeasure","title":"LanguagePrimitives.UInt32WithMeasure","content":"LanguagePrimitives.UInt32WithMeasure \nUInt32WithMeasure \nCreates a uint value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#UInt64WithMeasure","title":"LanguagePrimitives.UInt64WithMeasure","content":"LanguagePrimitives.UInt64WithMeasure \nUInt64WithMeasure \nCreates a uint64 value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#UInt16WithMeasure","title":"LanguagePrimitives.UInt16WithMeasure","content":"LanguagePrimitives.UInt16WithMeasure \nUInt16WithMeasure \nCreates a uint16 value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#ByteWithMeasure","title":"LanguagePrimitives.ByteWithMeasure","content":"LanguagePrimitives.ByteWithMeasure \nByteWithMeasure \nCreates a byte value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#UIntPtrWithMeasure","title":"LanguagePrimitives.UIntPtrWithMeasure","content":"LanguagePrimitives.UIntPtrWithMeasure \nUIntPtrWithMeasure \nCreates a unativeint value with units-of-measure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#ParseInt32","title":"LanguagePrimitives.ParseInt32","content":"LanguagePrimitives.ParseInt32 \nParseInt32 \nParse an int32 according to the rules used by the overloaded \u0027int32\u0027 conversion operator when applied to strings","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#ParseUInt32","title":"LanguagePrimitives.ParseUInt32","content":"LanguagePrimitives.ParseUInt32 \nParseUInt32 \nParse an uint32 according to the rules used by the overloaded \u0027uint32\u0027 conversion operator when applied to strings","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#ParseInt64","title":"LanguagePrimitives.ParseInt64","content":"LanguagePrimitives.ParseInt64 \nParseInt64 \nParse an int64 according to the rules used by the overloaded \u0027int64\u0027 conversion operator when applied to strings","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#ParseUInt64","title":"LanguagePrimitives.ParseUInt64","content":"LanguagePrimitives.ParseUInt64 \nParseUInt64 \nParse an uint64 according to the rules used by the overloaded \u0027uint64\u0027 conversion operator when applied to strings","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericZeroDynamic","title":"LanguagePrimitives.GenericZeroDynamic","content":"LanguagePrimitives.GenericZeroDynamic \nGenericZeroDynamic \nResolves to the zero value for any primitive numeric type or any type with a static member called \u0027Zero\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericOneDynamic","title":"LanguagePrimitives.GenericOneDynamic","content":"LanguagePrimitives.GenericOneDynamic \nGenericOneDynamic \nResolves to the value \u0027one\u0027 for any primitive numeric type or any type with a static member called \u0027One\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#AdditionDynamic","title":"LanguagePrimitives.AdditionDynamic","content":"LanguagePrimitives.AdditionDynamic \nAdditionDynamic \nA compiler intrinsic that implements dynamic invocations to the \u0027\u002B\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#CheckedAdditionDynamic","title":"LanguagePrimitives.CheckedAdditionDynamic","content":"LanguagePrimitives.CheckedAdditionDynamic \nCheckedAdditionDynamic \nA compiler intrinsic that implements dynamic invocations to the checked \u0027\u002B\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#MultiplyDynamic","title":"LanguagePrimitives.MultiplyDynamic","content":"LanguagePrimitives.MultiplyDynamic \nMultiplyDynamic \nA compiler intrinsic that implements dynamic invocations to the \u0027*\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#CheckedMultiplyDynamic","title":"LanguagePrimitives.CheckedMultiplyDynamic","content":"LanguagePrimitives.CheckedMultiplyDynamic \nCheckedMultiplyDynamic \nA compiler intrinsic that implements dynamic invocations to the checked \u0027*\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#SubtractionDynamic","title":"LanguagePrimitives.SubtractionDynamic","content":"LanguagePrimitives.SubtractionDynamic \nSubtractionDynamic \nA compiler intrinsic that implements dynamic invocations to the \u0027-\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#DivisionDynamic","title":"LanguagePrimitives.DivisionDynamic","content":"LanguagePrimitives.DivisionDynamic \nDivisionDynamic \nA compiler intrinsic that implements dynamic invocations to the \u0027/\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#UnaryNegationDynamic","title":"LanguagePrimitives.UnaryNegationDynamic","content":"LanguagePrimitives.UnaryNegationDynamic \nUnaryNegationDynamic \nA compiler intrinsic that implements dynamic invocations to the unary \u0027-\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#ModulusDynamic","title":"LanguagePrimitives.ModulusDynamic","content":"LanguagePrimitives.ModulusDynamic \nModulusDynamic \nA compiler intrinsic that implements dynamic invocations to the \u0027%\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#CheckedSubtractionDynamic","title":"LanguagePrimitives.CheckedSubtractionDynamic","content":"LanguagePrimitives.CheckedSubtractionDynamic \nCheckedSubtractionDynamic \nA compiler intrinsic that implements dynamic invocations to the checked \u0027-\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#CheckedUnaryNegationDynamic","title":"LanguagePrimitives.CheckedUnaryNegationDynamic","content":"LanguagePrimitives.CheckedUnaryNegationDynamic \nCheckedUnaryNegationDynamic \nA compiler intrinsic that implements dynamic invocations to the checked unary \u0027-\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#LeftShiftDynamic","title":"LanguagePrimitives.LeftShiftDynamic","content":"LanguagePrimitives.LeftShiftDynamic \nLeftShiftDynamic \nA compiler intrinsic that implements dynamic invocations to the \u0027\u003C\u003C\u003C\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#RightShiftDynamic","title":"LanguagePrimitives.RightShiftDynamic","content":"LanguagePrimitives.RightShiftDynamic \nRightShiftDynamic \nA compiler intrinsic that implements dynamic invocations to the \u0027\u003E\u003E\u003E\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#BitwiseAndDynamic","title":"LanguagePrimitives.BitwiseAndDynamic","content":"LanguagePrimitives.BitwiseAndDynamic \nBitwiseAndDynamic \nA compiler intrinsic that implements dynamic invocations to the \u0027\u0026\u0026\u0026\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#BitwiseOrDynamic","title":"LanguagePrimitives.BitwiseOrDynamic","content":"LanguagePrimitives.BitwiseOrDynamic \nBitwiseOrDynamic \nA compiler intrinsic that implements dynamic invocations to the \u0027|||\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#ExclusiveOrDynamic","title":"LanguagePrimitives.ExclusiveOrDynamic","content":"LanguagePrimitives.ExclusiveOrDynamic \nExclusiveOrDynamic \nA compiler intrinsic that implements dynamic invocations related to the \u0027^^^\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#LogicalNotDynamic","title":"LanguagePrimitives.LogicalNotDynamic","content":"LanguagePrimitives.LogicalNotDynamic \nLogicalNotDynamic \nA compiler intrinsic that implements dynamic invocations related to the \u0027~~~\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#ExplicitDynamic","title":"LanguagePrimitives.ExplicitDynamic","content":"LanguagePrimitives.ExplicitDynamic \nExplicitDynamic \nA compiler intrinsic that implements dynamic invocations related to conversion operators.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#CheckedExplicitDynamic","title":"LanguagePrimitives.CheckedExplicitDynamic","content":"LanguagePrimitives.CheckedExplicitDynamic \nCheckedExplicitDynamic \nA compiler intrinsic that implements dynamic invocations related to checked conversion operators.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#LessThanDynamic","title":"LanguagePrimitives.LessThanDynamic","content":"LanguagePrimitives.LessThanDynamic \nLessThanDynamic \nA compiler intrinsic that implements dynamic invocations related to the \u0027\u003C\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GreaterThanDynamic","title":"LanguagePrimitives.GreaterThanDynamic","content":"LanguagePrimitives.GreaterThanDynamic \nGreaterThanDynamic \nA compiler intrinsic that implements dynamic invocations related to the \u0027\u003E\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#LessThanOrEqualDynamic","title":"LanguagePrimitives.LessThanOrEqualDynamic","content":"LanguagePrimitives.LessThanOrEqualDynamic \nLessThanOrEqualDynamic \nA compiler intrinsic that implements dynamic invocations related to the \u0027\u003C=\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GreaterThanOrEqualDynamic","title":"LanguagePrimitives.GreaterThanOrEqualDynamic","content":"LanguagePrimitives.GreaterThanOrEqualDynamic \nGreaterThanOrEqualDynamic \nA compiler intrinsic that implements dynamic invocations related to the \u0027\u003E=\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#EqualityDynamic","title":"LanguagePrimitives.EqualityDynamic","content":"LanguagePrimitives.EqualityDynamic \nEqualityDynamic \nA compiler intrinsic that implements dynamic invocations related to the \u0027=\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#InequalityDynamic","title":"LanguagePrimitives.InequalityDynamic","content":"LanguagePrimitives.InequalityDynamic \nInequalityDynamic \nA compiler intrinsic that implements dynamic invocations related to the \u0027=\u0027 operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#DivideByIntDynamic","title":"LanguagePrimitives.DivideByIntDynamic","content":"LanguagePrimitives.DivideByIntDynamic \nDivideByIntDynamic \nA compiler intrinsic that implements dynamic invocations for the DivideByInt primitive.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericZero","title":"LanguagePrimitives.GenericZero","content":"LanguagePrimitives.GenericZero \nGenericZero \nResolves to the zero value for any primitive numeric type or any type with a static member called \u0027Zero\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#GenericOne","title":"LanguagePrimitives.GenericOne","content":"LanguagePrimitives.GenericOne \nGenericOne \nResolves to the value \u0027one\u0027 for any primitive numeric type or any type with a static member called \u0027One\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives.html#DivideByInt","title":"LanguagePrimitives.DivideByInt","content":"LanguagePrimitives.DivideByInt \nDivideByInt \nDivides a value by an integer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-errorstrings.html","title":"ErrorStrings","content":"ErrorStrings \nFor compiler use only \nErrorStrings.InputSequenceEmptyString \nInputSequenceEmptyString \nErrorStrings.InputArrayEmptyString \nInputArrayEmptyString \nErrorStrings.AddressOpNotFirstClassString \nAddressOpNotFirstClassString \nErrorStrings.NoNegateMinValueString \nNoNegateMinValueString \nErrorStrings.InputMustBeNonNegativeString \nInputMustBeNonNegativeString","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-errorstrings.html#InputSequenceEmptyString","title":"ErrorStrings.InputSequenceEmptyString","content":"ErrorStrings.InputSequenceEmptyString \nInputSequenceEmptyString \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-errorstrings.html#InputArrayEmptyString","title":"ErrorStrings.InputArrayEmptyString","content":"ErrorStrings.InputArrayEmptyString \nInputArrayEmptyString \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-errorstrings.html#AddressOpNotFirstClassString","title":"ErrorStrings.AddressOpNotFirstClassString","content":"ErrorStrings.AddressOpNotFirstClassString \nAddressOpNotFirstClassString \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-errorstrings.html#NoNegateMinValueString","title":"ErrorStrings.NoNegateMinValueString","content":"ErrorStrings.NoNegateMinValueString \nNoNegateMinValueString \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-errorstrings.html#InputMustBeNonNegativeString","title":"ErrorStrings.InputMustBeNonNegativeString","content":"ErrorStrings.InputMustBeNonNegativeString \nInputMustBeNonNegativeString \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html","title":"HashCompare","content":"HashCompare \nThe F# compiler emits calls to some of the functions in this module as part of the compiled form of some language constructs \nHashCompare.PhysicalHashIntrinsic \nPhysicalHashIntrinsic \nHashCompare.PhysicalEqualityIntrinsic \nPhysicalEqualityIntrinsic \nHashCompare.GenericHashIntrinsic \nGenericHashIntrinsic \nHashCompare.LimitedGenericHashIntrinsic \nLimitedGenericHashIntrinsic \nHashCompare.GenericHashWithComparerIntrinsic \nGenericHashWithComparerIntrinsic \nHashCompare.GenericComparisonWithComparerIntrinsic \nGenericComparisonWithComparerIntrinsic \nHashCompare.GenericComparisonIntrinsic \nGenericComparisonIntrinsic \nHashCompare.GenericEqualityIntrinsic \nGenericEqualityIntrinsic \nHashCompare.GenericEqualityERIntrinsic \nGenericEqualityERIntrinsic \nHashCompare.GenericEqualityWithComparerIntrinsic \nGenericEqualityWithComparerIntrinsic \nHashCompare.GenericLessThanIntrinsic \nGenericLessThanIntrinsic \nHashCompare.GenericGreaterThanIntrinsic \nGenericGreaterThanIntrinsic \nHashCompare.GenericGreaterOrEqualIntrinsic \nGenericGreaterOrEqualIntrinsic \nHashCompare.GenericLessOrEqualIntrinsic \nGenericLessOrEqualIntrinsic \nHashCompare.FastHashTuple2 \nFastHashTuple2 \nHashCompare.FastHashTuple3 \nFastHashTuple3 \nHashCompare.FastHashTuple4 \nFastHashTuple4 \nHashCompare.FastHashTuple5 \nFastHashTuple5 \nHashCompare.FastEqualsTuple2 \nFastEqualsTuple2 \nHashCompare.FastEqualsTuple3 \nFastEqualsTuple3 \nHashCompare.FastEqualsTuple4 \nFastEqualsTuple4 \nHashCompare.FastEqualsTuple5 \nFastEqualsTuple5 \nHashCompare.FastCompareTuple2 \nFastCompareTuple2 \nHashCompare.FastCompareTuple3 \nFastCompareTuple3 \nHashCompare.FastCompareTuple4 \nFastCompareTuple4 \nHashCompare.FastCompareTuple5 \nFastCompareTuple5","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#PhysicalHashIntrinsic","title":"HashCompare.PhysicalHashIntrinsic","content":"HashCompare.PhysicalHashIntrinsic \nPhysicalHashIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#PhysicalEqualityIntrinsic","title":"HashCompare.PhysicalEqualityIntrinsic","content":"HashCompare.PhysicalEqualityIntrinsic \nPhysicalEqualityIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericHashIntrinsic","title":"HashCompare.GenericHashIntrinsic","content":"HashCompare.GenericHashIntrinsic \nGenericHashIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#LimitedGenericHashIntrinsic","title":"HashCompare.LimitedGenericHashIntrinsic","content":"HashCompare.LimitedGenericHashIntrinsic \nLimitedGenericHashIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericHashWithComparerIntrinsic","title":"HashCompare.GenericHashWithComparerIntrinsic","content":"HashCompare.GenericHashWithComparerIntrinsic \nGenericHashWithComparerIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericComparisonWithComparerIntrinsic","title":"HashCompare.GenericComparisonWithComparerIntrinsic","content":"HashCompare.GenericComparisonWithComparerIntrinsic \nGenericComparisonWithComparerIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericComparisonIntrinsic","title":"HashCompare.GenericComparisonIntrinsic","content":"HashCompare.GenericComparisonIntrinsic \nGenericComparisonIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericEqualityIntrinsic","title":"HashCompare.GenericEqualityIntrinsic","content":"HashCompare.GenericEqualityIntrinsic \nGenericEqualityIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericEqualityERIntrinsic","title":"HashCompare.GenericEqualityERIntrinsic","content":"HashCompare.GenericEqualityERIntrinsic \nGenericEqualityERIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericEqualityWithComparerIntrinsic","title":"HashCompare.GenericEqualityWithComparerIntrinsic","content":"HashCompare.GenericEqualityWithComparerIntrinsic \nGenericEqualityWithComparerIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericLessThanIntrinsic","title":"HashCompare.GenericLessThanIntrinsic","content":"HashCompare.GenericLessThanIntrinsic \nGenericLessThanIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericGreaterThanIntrinsic","title":"HashCompare.GenericGreaterThanIntrinsic","content":"HashCompare.GenericGreaterThanIntrinsic \nGenericGreaterThanIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericGreaterOrEqualIntrinsic","title":"HashCompare.GenericGreaterOrEqualIntrinsic","content":"HashCompare.GenericGreaterOrEqualIntrinsic \nGenericGreaterOrEqualIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#GenericLessOrEqualIntrinsic","title":"HashCompare.GenericLessOrEqualIntrinsic","content":"HashCompare.GenericLessOrEqualIntrinsic \nGenericLessOrEqualIntrinsic \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastHashTuple2","title":"HashCompare.FastHashTuple2","content":"HashCompare.FastHashTuple2 \nFastHashTuple2 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastHashTuple3","title":"HashCompare.FastHashTuple3","content":"HashCompare.FastHashTuple3 \nFastHashTuple3 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastHashTuple4","title":"HashCompare.FastHashTuple4","content":"HashCompare.FastHashTuple4 \nFastHashTuple4 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastHashTuple5","title":"HashCompare.FastHashTuple5","content":"HashCompare.FastHashTuple5 \nFastHashTuple5 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastEqualsTuple2","title":"HashCompare.FastEqualsTuple2","content":"HashCompare.FastEqualsTuple2 \nFastEqualsTuple2 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastEqualsTuple3","title":"HashCompare.FastEqualsTuple3","content":"HashCompare.FastEqualsTuple3 \nFastEqualsTuple3 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastEqualsTuple4","title":"HashCompare.FastEqualsTuple4","content":"HashCompare.FastEqualsTuple4 \nFastEqualsTuple4 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastEqualsTuple5","title":"HashCompare.FastEqualsTuple5","content":"HashCompare.FastEqualsTuple5 \nFastEqualsTuple5 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastCompareTuple2","title":"HashCompare.FastCompareTuple2","content":"HashCompare.FastCompareTuple2 \nFastCompareTuple2 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastCompareTuple3","title":"HashCompare.FastCompareTuple3","content":"HashCompare.FastCompareTuple3 \nFastCompareTuple3 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastCompareTuple4","title":"HashCompare.FastCompareTuple4","content":"HashCompare.FastCompareTuple4 \nFastCompareTuple4 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-hashcompare.html#FastCompareTuple5","title":"HashCompare.FastCompareTuple5","content":"HashCompare.FastCompareTuple5 \nFastCompareTuple5 \nA primitive entry point used by the F# compiler for optimization purposes.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html","title":"IntrinsicFunctions","content":"IntrinsicFunctions \nThe F# compiler emits calls to some of the functions in this module as part of the compiled form of some language constructs \nIntrinsicFunctions.UnboxGeneric \nUnboxGeneric \nIntrinsicFunctions.UnboxFast \nUnboxFast \nIntrinsicFunctions.TypeTestGeneric \nTypeTestGeneric \nIntrinsicFunctions.TypeTestFast \nTypeTestFast \nIntrinsicFunctions.GetString \nGetString \nIntrinsicFunctions.CreateInstance \nCreateInstance \nIntrinsicFunctions.MakeDecimal \nMakeDecimal \nIntrinsicFunctions.Dispose \nDispose \nIntrinsicFunctions.FailInit \nFailInit \nIntrinsicFunctions.FailStaticInit \nFailStaticInit \nIntrinsicFunctions.CheckThis \nCheckThis \nIntrinsicFunctions.GetArray \nGetArray \nIntrinsicFunctions.GetArray2D \nGetArray2D \nIntrinsicFunctions.GetArray3D \nGetArray3D \nIntrinsicFunctions.GetArray4D \nGetArray4D \nIntrinsicFunctions.SetArray \nSetArray \nIntrinsicFunctions.SetArray2D \nSetArray2D \nIntrinsicFunctions.SetArray3D \nSetArray3D \nIntrinsicFunctions.SetArray4D \nSetArray4D","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#UnboxGeneric","title":"IntrinsicFunctions.UnboxGeneric","content":"IntrinsicFunctions.UnboxGeneric \nUnboxGeneric \nA compiler intrinsic that implements the \u0027:?\u003E\u0027 operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#UnboxFast","title":"IntrinsicFunctions.UnboxFast","content":"IntrinsicFunctions.UnboxFast \nUnboxFast \nA compiler intrinsic that implements the \u0027:?\u003E\u0027 operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#TypeTestGeneric","title":"IntrinsicFunctions.TypeTestGeneric","content":"IntrinsicFunctions.TypeTestGeneric \nTypeTestGeneric \nA compiler intrinsic that implements the \u0027:?\u0027 operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#TypeTestFast","title":"IntrinsicFunctions.TypeTestFast","content":"IntrinsicFunctions.TypeTestFast \nTypeTestFast \nA compiler intrinsic that implements the \u0027:?\u0027 operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#GetString","title":"IntrinsicFunctions.GetString","content":"IntrinsicFunctions.GetString \nGetString \nPrimitive used by pattern match compilation","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#CreateInstance","title":"IntrinsicFunctions.CreateInstance","content":"IntrinsicFunctions.CreateInstance \nCreateInstance \n\u003Cpre\u003EThis function implements calls to default constructors\n accessed by \u0027new\u0027 constraints.\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#MakeDecimal","title":"IntrinsicFunctions.MakeDecimal","content":"IntrinsicFunctions.MakeDecimal \nMakeDecimal \nThis function implements parsing of decimal constants","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#Dispose","title":"IntrinsicFunctions.Dispose","content":"IntrinsicFunctions.Dispose \nDispose \nA compiler intrinsic for the efficient compilation of sequence expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#FailInit","title":"IntrinsicFunctions.FailInit","content":"IntrinsicFunctions.FailInit \nFailInit \nA compiler intrinsic for checking initialization soundness of recursive bindings","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#FailStaticInit","title":"IntrinsicFunctions.FailStaticInit","content":"IntrinsicFunctions.FailStaticInit \nFailStaticInit \nA compiler intrinsic for checking initialization soundness of recursive static bindings","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#CheckThis","title":"IntrinsicFunctions.CheckThis","content":"IntrinsicFunctions.CheckThis \nCheckThis \nA compiler intrinsic for checking initialization soundness of recursive bindings","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#GetArray","title":"IntrinsicFunctions.GetArray","content":"IntrinsicFunctions.GetArray \nGetArray \nThe standard overloaded associative (indexed) lookup operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#GetArray2D","title":"IntrinsicFunctions.GetArray2D","content":"IntrinsicFunctions.GetArray2D \nGetArray2D \nThe standard overloaded associative (2-indexed) lookup operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#GetArray3D","title":"IntrinsicFunctions.GetArray3D","content":"IntrinsicFunctions.GetArray3D \nGetArray3D \nThe standard overloaded associative (3-indexed) lookup operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#GetArray4D","title":"IntrinsicFunctions.GetArray4D","content":"IntrinsicFunctions.GetArray4D \nGetArray4D \nThe standard overloaded associative (4-indexed) lookup operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#SetArray","title":"IntrinsicFunctions.SetArray","content":"IntrinsicFunctions.SetArray \nSetArray \nThe standard overloaded associative (indexed) mutation operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#SetArray2D","title":"IntrinsicFunctions.SetArray2D","content":"IntrinsicFunctions.SetArray2D \nSetArray2D \nThe standard overloaded associative (2-indexed) mutation operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#SetArray3D","title":"IntrinsicFunctions.SetArray3D","content":"IntrinsicFunctions.SetArray3D \nSetArray3D \nThe standard overloaded associative (3-indexed) mutation operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicfunctions.html#SetArray4D","title":"IntrinsicFunctions.SetArray4D","content":"IntrinsicFunctions.SetArray4D \nSetArray4D \n The standard overloaded associative (4-indexed) mutation operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicoperators.html","title":"IntrinsicOperators","content":"IntrinsicOperators \nThe F# compiler emits calls to some of the functions in this module as part of the compiled form of some language constructs \nIntrinsicOperators.(\u0026) \n(\u0026) \nIntrinsicOperators.(\u0026\u0026) \n(\u0026\u0026) \nIntrinsicOperators.\u0060\u0060or\u0060\u0060 \n\u0060\u0060or\u0060\u0060 \nIntrinsicOperators.(||) \n(||) \nIntrinsicOperators.(~\u0026) \n(~\u0026) \nIntrinsicOperators.(~\u0026\u0026) \n(~\u0026\u0026)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicoperators.html#(\u0026)","title":"IntrinsicOperators.(\u0026)","content":"IntrinsicOperators.(\u0026) \n(\u0026) \nBinary \u0027and\u0027. When used as a binary operator the right hand value is evaluated only on demand.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicoperators.html#(\u0026\u0026)","title":"IntrinsicOperators.(\u0026\u0026)","content":"IntrinsicOperators.(\u0026\u0026) \n(\u0026\u0026) \nBinary \u0027and\u0027. When used as a binary operator the right hand value is evaluated only on demand","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicoperators.html#\u0060\u0060or\u0060\u0060","title":"IntrinsicOperators.\u0060\u0060or\u0060\u0060","content":"IntrinsicOperators.\u0060\u0060or\u0060\u0060 \n\u0060\u0060or\u0060\u0060 \nBinary \u0027or\u0027. When used as a binary operator the right hand value is evaluated only on demand.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicoperators.html#(||)","title":"IntrinsicOperators.(||)","content":"IntrinsicOperators.(||) \n(||) \nBinary \u0027or\u0027. When used as a binary operator the right hand value is evaluated only on demand","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicoperators.html#(~\u0026)","title":"IntrinsicOperators.(~\u0026)","content":"IntrinsicOperators.(~\u0026) \n(~\u0026) \nAddress-of. Uses of this value may result in the generation of unverifiable code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-languageprimitives-intrinsicoperators.html#(~\u0026\u0026)","title":"IntrinsicOperators.(~\u0026\u0026)","content":"IntrinsicOperators.(~\u0026\u0026) \n(~\u0026\u0026) \nAddress-of. Uses of this value may result in the generation of unverifiable code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-numericliterals.html","title":"NumericLiterals","content":"NumericLiterals \nProvides a default implementations of F# numeric literal syntax  for literals of the form \u0027dddI\u0027  \nNumericLiterals.NumericLiteralI \nNumericLiteralI","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-numericliterals-numericliterali.html","title":"NumericLiteralI","content":"NumericLiteralI \n Provides a default implementations of F# numeric literal syntax  for literals of the form \u0027dddI\u0027 \nNumericLiteralI.FromZero \nFromZero \nNumericLiteralI.FromOne \nFromOne \nNumericLiteralI.FromInt32 \nFromInt32 \nNumericLiteralI.FromInt64 \nFromInt64 \nNumericLiteralI.FromString \nFromString \nNumericLiteralI.FromInt64Dynamic \nFromInt64Dynamic \nNumericLiteralI.FromStringDynamic \nFromStringDynamic","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-numericliterals-numericliterali.html#FromZero","title":"NumericLiteralI.FromZero","content":"NumericLiteralI.FromZero \nFromZero \n Provides a default implementations of F# numeric literal syntax  for literals of the form \u0027dddI\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-numericliterals-numericliterali.html#FromOne","title":"NumericLiteralI.FromOne","content":"NumericLiteralI.FromOne \nFromOne \n Provides a default implementations of F# numeric literal syntax  for literals of the form \u0027dddI\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-numericliterals-numericliterali.html#FromInt32","title":"NumericLiteralI.FromInt32","content":"NumericLiteralI.FromInt32 \nFromInt32 \n Provides a default implementations of F# numeric literal syntax  for literals of the form \u0027dddI\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-numericliterals-numericliterali.html#FromInt64","title":"NumericLiteralI.FromInt64","content":"NumericLiteralI.FromInt64 \nFromInt64 \n Provides a default implementations of F# numeric literal syntax  for literals of the form \u0027dddI\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-numericliterals-numericliterali.html#FromString","title":"NumericLiteralI.FromString","content":"NumericLiteralI.FromString \nFromString \n Provides a default implementations of F# numeric literal syntax  for literals of the form \u0027dddI\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-numericliterals-numericliterali.html#FromInt64Dynamic","title":"NumericLiteralI.FromInt64Dynamic","content":"NumericLiteralI.FromInt64Dynamic \nFromInt64Dynamic \n Provides a default implementations of F# numeric literal syntax  for literals of the form \u0027dddI\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-numericliterals-numericliterali.html#FromStringDynamic","title":"NumericLiteralI.FromStringDynamic","content":"NumericLiteralI.FromStringDynamic \nFromStringDynamic \n Provides a default implementations of F# numeric literal syntax  for literals of the form \u0027dddI\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html","title":"Operators","content":"Operators \nBasic F# Operators. This module is automatically opened in all F# code. \nOperators.ArrayExtensions \nArrayExtensions \nOperators.Checked \nChecked \nOperators.NonStructuralComparison \nNonStructuralComparison \nOperators.OperatorIntrinsics \nOperatorIntrinsics \nOperators.Unchecked \nUnchecked \nOperators.(~-) \n(~-) \nOperators.(\u002B) \n(\u002B) \nOperators.(-) \n(-) \nOperators.(*) \n(*) \nOperators.(/) \n(/) \nOperators.(%) \n(%) \nOperators.(\u0026\u0026\u0026) \n(\u0026\u0026\u0026) \nOperators.(|||) \n(|||) \nOperators.(^^^) \n(^^^) \nOperators.(\u003C\u003C\u003C) \n(\u003C\u003C\u003C) \nOperators.(\u003E\u003E\u003E) \n(\u003E\u003E\u003E) \nOperators.(~~~) \n(~~~) \nOperators.(~\u002B) \n(~\u002B) \nOperators.(\u003C) \n(\u003C) \nOperators.(\u003E) \n(\u003E) \nOperators.(\u003E=) \n(\u003E=) \nOperators.(\u003C=) \n(\u003C=) \nOperators.(=) \n(=) \nOperators.(\u003C\u003E) \n(\u003C\u003E) \nOperators.(\u003E\u003E) \n(\u003E\u003E) \nOperators.(\u003C\u003C) \n(\u003C\u003C) \nOperators.(|\u003E) \n(|\u003E) \nOperators.(||\u003E) \n(||\u003E) \nOperators.(|||\u003E) \n(|||\u003E) \nOperators.(\u003C|) \n(\u003C|) \nOperators.(\u003C||) \n(\u003C||) \nOperators.(\u003C|||) \n(\u003C|||) \nOperators.defaultArg \ndefaultArg \nOperators.defaultValueArg \ndefaultValueArg \nOperators.(^) \n(^) \nOperators.raise \nraise \nOperators.rethrow \nrethrow \nOperators.reraise \nreraise \nOperators.Failure \nFailure \nOperators.fst \nfst \nOperators.snd \nsnd \nOperators.compare \ncompare \nOperators.max \nmax \nOperators.min \nmin \nOperators.ignore \nignore \nOperators.unbox \nunbox \nOperators.box \nbox \nOperators.tryUnbox \ntryUnbox \nOperators.isNull \nisNull \nOperators.failwith \nfailwith \nOperators.invalidArg \ninvalidArg \nOperators.nullArg \nnullArg \nOperators.invalidOp \ninvalidOp \nOperators.id \nid \nOperators.ref \nref \nOperators.(:=) \n(:=) \nOperators.(!) \n(!) \nOperators.decr \ndecr \nOperators.incr \nincr \nOperators.(@) \n(@) \nOperators.\u0060\u0060not\u0060\u0060 \n\u0060\u0060not\u0060\u0060 \nOperators.seq \nseq \nOperators.exit \nexit \nOperators.infinity \ninfinity \nOperators.nan \nnan \nOperators.infinityf \ninfinityf \nOperators.nanf \nnanf \nOperators.stdin \nstdin \nOperators.stderr \nstderr \nOperators.stdout \nstdout \nOperators.(..) \n(..) \nOperators.(.. ..) \n(.. ..) \nOperators.lock \nlock \nOperators.using \nusing \nOperators.typeof \ntypeof \nOperators.nameof \nnameof \nOperators.methodhandleof \nmethodhandleof \nOperators.typedefof \ntypedefof \nOperators.sizeof \nsizeof \nOperators.hash \nhash \nOperators.limitedHash \nlimitedHash \nOperators.abs \nabs \nOperators.acos \nacos \nOperators.asin \nasin \nOperators.atan \natan \nOperators.atan2 \natan2 \nOperators.ceil \nceil \nOperators.exp \nexp \nOperators.floor \nfloor \nOperators.sign \nsign \nOperators.round \nround \nOperators.log \nlog \nOperators.log10 \nlog10 \nOperators.sqrt \nsqrt \nOperators.cos \ncos \nOperators.cosh \ncosh \nOperators.sin \nsin \nOperators.sinh \nsinh \nOperators.tan \ntan \nOperators.tanh \ntanh \nOperators.truncate \ntruncate \nOperators.( ** ) \n( ** ) \nOperators.pown \npown \nOperators.byte \nbyte \nOperators.sbyte \nsbyte \nOperators.int16 \nint16 \nOperators.uint16 \nuint16 \nOperators.int \nint \nOperators.uint \nuint \nOperators.enum \nenum \nOperators.int32 \nint32 \nOperators.uint32 \nuint32 \nOperators.int64 \nint64 \nOperators.uint64 \nuint64 \nOperators.float32 \nfloat32 \nOperators.float \nfloat \nOperators.nativeint \nnativeint \nOperators.unativeint \nunativeint \nOperators.string \nstring \nOperators.decimal \ndecimal \nOperators.char \nchar \nOperators.(|Failure|_|) \n(|Failure|_|) \nOperators.(|Null|NonNull|) \n(|Null|NonNull|) \nOperators.(|KeyValue|) \n(|KeyValue|)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(~-)","title":"Operators.(~-)","content":"Operators.(~-) \n(~-) \nOverloaded unary negation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u002B)","title":"Operators.(\u002B)","content":"Operators.(\u002B) \n(\u002B) \nOverloaded addition operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(-)","title":"Operators.(-)","content":"Operators.(-) \n(-) \nOverloaded subtraction operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(*)","title":"Operators.(*)","content":"Operators.(*) \n(*) \nOverloaded multiplication operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(/)","title":"Operators.(/)","content":"Operators.(/) \n(/) \nOverloaded division operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(%)","title":"Operators.(%)","content":"Operators.(%) \n(%) \nOverloaded modulo operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u0026\u0026\u0026)","title":"Operators.(\u0026\u0026\u0026)","content":"Operators.(\u0026\u0026\u0026) \n(\u0026\u0026\u0026) \nOverloaded bitwise-AND operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(|||)","title":"Operators.(|||)","content":"Operators.(|||) \n(|||) \nOverloaded bitwise-OR operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(^^^)","title":"Operators.(^^^)","content":"Operators.(^^^) \n(^^^) \nOverloaded bitwise-XOR operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003C\u003C\u003C)","title":"Operators.(\u003C\u003C\u003C)","content":"Operators.(\u003C\u003C\u003C) \n(\u003C\u003C\u003C) \nOverloaded byte-shift left operator by a specified number of bits","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003E\u003E\u003E)","title":"Operators.(\u003E\u003E\u003E)","content":"Operators.(\u003E\u003E\u003E) \n(\u003E\u003E\u003E) \nOverloaded byte-shift right operator by a specified number of bits","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(~~~)","title":"Operators.(~~~)","content":"Operators.(~~~) \n(~~~) \nOverloaded bitwise-NOT operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(~\u002B)","title":"Operators.(~\u002B)","content":"Operators.(~\u002B) \n(~\u002B) \nOverloaded prefix-plus operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003C)","title":"Operators.(\u003C)","content":"Operators.(\u003C) \n(\u003C) \nStructural less-than comparison","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003E)","title":"Operators.(\u003E)","content":"Operators.(\u003E) \n(\u003E) \nStructural greater-than","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003E=)","title":"Operators.(\u003E=)","content":"Operators.(\u003E=) \n(\u003E=) \nStructural greater-than-or-equal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003C=)","title":"Operators.(\u003C=)","content":"Operators.(\u003C=) \n(\u003C=) \nStructural less-than-or-equal comparison","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(=)","title":"Operators.(=)","content":"Operators.(=) \n(=) \nStructural equality","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003C\u003E)","title":"Operators.(\u003C\u003E)","content":"Operators.(\u003C\u003E) \n(\u003C\u003E) \nStructural inequality","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003E\u003E)","title":"Operators.(\u003E\u003E)","content":"Operators.(\u003E\u003E) \n(\u003E\u003E) \nCompose two functions, the function on the left being applied first","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003C\u003C)","title":"Operators.(\u003C\u003C)","content":"Operators.(\u003C\u003C) \n(\u003C\u003C) \nCompose two functions, the function on the right being applied first","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(|\u003E)","title":"Operators.(|\u003E)","content":"Operators.(|\u003E) \n(|\u003E) \nApply a function to a value, the value being on the left, the function on the right","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(||\u003E)","title":"Operators.(||\u003E)","content":"Operators.(||\u003E) \n(||\u003E) \nApply a function to two values, the values being a pair on the left, the function on the right","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(|||\u003E)","title":"Operators.(|||\u003E)","content":"Operators.(|||\u003E) \n(|||\u003E) \nApply a function to three values, the values being a triple on the left, the function on the right","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003C|)","title":"Operators.(\u003C|)","content":"Operators.(\u003C|) \n(\u003C|) \nApply a function to a value, the value being on the right, the function on the left","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003C||)","title":"Operators.(\u003C||)","content":"Operators.(\u003C||) \n(\u003C||) \nApply a function to two values, the values being a pair on the right, the function on the left","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(\u003C|||)","title":"Operators.(\u003C|||)","content":"Operators.(\u003C|||) \n(\u003C|||) \nApply a function to three values, the values being a triple on the right, the function on the left","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#defaultArg","title":"Operators.defaultArg","content":"Operators.defaultArg \ndefaultArg \nUsed to specify a default value for an optional argument in the implementation of a function","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#defaultValueArg","title":"Operators.defaultValueArg","content":"Operators.defaultValueArg \ndefaultValueArg \nUsed to specify a default value for an optional argument in the implementation of a function","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(^)","title":"Operators.(^)","content":"Operators.(^) \n(^) \nConcatenate two strings. The operator \u0027\u002B\u0027 may also be used.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#raise","title":"Operators.raise","content":"Operators.raise \nraise \nRaises an exception","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#rethrow","title":"Operators.rethrow","content":"Operators.rethrow \nrethrow \nRethrows an exception. This should only be used when handling an exception","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#reraise","title":"Operators.reraise","content":"Operators.reraise \nreraise \nRethrows an exception. This should only be used when handling an exception","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#Failure","title":"Operators.Failure","content":"Operators.Failure \nFailure \nBuilds a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.exception\u0022\u003EException\u003C/a\u003E object.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#fst","title":"Operators.fst","content":"Operators.fst \nfst \nReturn the first element of a tuple, \u003Ccode\u003Efst (a,b) = a\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#snd","title":"Operators.snd","content":"Operators.snd \nsnd \nReturn the second element of a tuple, \u003Ccode\u003Esnd (a,b) = b\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#compare","title":"Operators.compare","content":"Operators.compare \ncompare \nGeneric comparison.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#max","title":"Operators.max","content":"Operators.max \nmax \nMaximum based on generic comparison","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#min","title":"Operators.min","content":"Operators.min \nmin \nMinimum based on generic comparison","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#ignore","title":"Operators.ignore","content":"Operators.ignore \nignore \nIgnore the passed value. This is often used to throw away results of a computation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#unbox","title":"Operators.unbox","content":"Operators.unbox \nunbox \nUnbox a strongly typed value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#box","title":"Operators.box","content":"Operators.box \nbox \nBoxes a strongly typed value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#tryUnbox","title":"Operators.tryUnbox","content":"Operators.tryUnbox \ntryUnbox \nTry to unbox a strongly typed value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#isNull","title":"Operators.isNull","content":"Operators.isNull \nisNull \nDetermines whether the given value is null.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#failwith","title":"Operators.failwith","content":"Operators.failwith \nfailwith \nThrow a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.exception\u0022\u003EException\u003C/a\u003E exception.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#invalidArg","title":"Operators.invalidArg","content":"Operators.invalidArg \ninvalidArg \nThrow a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E exception with\n the given argument name and message.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#nullArg","title":"Operators.nullArg","content":"Operators.nullArg \nnullArg \nThrow a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentnullexception\u0022\u003EArgumentNullException\u003C/a\u003E exception","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#invalidOp","title":"Operators.invalidOp","content":"Operators.invalidOp \ninvalidOp \nThrow a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.invalidoperationexception\u0022\u003EInvalidOperationException\u003C/a\u003E exception","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#id","title":"Operators.id","content":"Operators.id \nid \nThe identity function","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#ref","title":"Operators.ref","content":"Operators.ref \nref \nCreate a mutable reference cell","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(:=)","title":"Operators.(:=)","content":"Operators.(:=) \n(:=) \nAssign to a mutable reference cell","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(!)","title":"Operators.(!)","content":"Operators.(!) \n(!) \nDereference a mutable reference cell","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#decr","title":"Operators.decr","content":"Operators.decr \ndecr \nDecrement a mutable reference cell containing an integer","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#incr","title":"Operators.incr","content":"Operators.incr \nincr \nIncrement a mutable reference cell containing an integer","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(@)","title":"Operators.(@)","content":"Operators.(@) \n(@) \nConcatenate two lists.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#\u0060\u0060not\u0060\u0060","title":"Operators.\u0060\u0060not\u0060\u0060","content":"Operators.\u0060\u0060not\u0060\u0060 \n\u0060\u0060not\u0060\u0060 \nNegate a logical value. Not True equals False and not False equals True","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#seq","title":"Operators.seq","content":"Operators.seq \nseq \nBuilds a sequence using sequence expression syntax","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#exit","title":"Operators.exit","content":"Operators.exit \nexit \nExit the current hardware isolated process, if security settings permit,\n otherwise raise an exception. Calls \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.environment.exit\u0022\u003EEnvironment.Exit\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#infinity","title":"Operators.infinity","content":"Operators.infinity \ninfinity \nEquivalent to \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.double.positiveinfinity\u0022\u003EDouble.PositiveInfinity\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#nan","title":"Operators.nan","content":"Operators.nan \nnan \nEquivalent to \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.double.nan\u0022\u003EDouble.NaN\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#infinityf","title":"Operators.infinityf","content":"Operators.infinityf \ninfinityf \nEquivalent to \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.single.positiveinfinity\u0022\u003ESingle.PositiveInfinity\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#nanf","title":"Operators.nanf","content":"Operators.nanf \nnanf \nEquivalent to \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.single.nan\u0022\u003ESingle.NaN\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#stdin","title":"Operators.stdin","content":"Operators.stdin \nstdin \nReads the value of the property \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.console.in\u0022\u003EConsole.In\u003C/a\u003E. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#stderr","title":"Operators.stderr","content":"Operators.stderr \nstderr \nReads the value of the property \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.console.error\u0022\u003EConsole.Error\u003C/a\u003E. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#stdout","title":"Operators.stdout","content":"Operators.stdout \nstdout \nReads the value of the property \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.console.out\u0022\u003EConsole.Out\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(..)","title":"Operators.(..)","content":"Operators.(..) \n(..) \nThe standard overloaded range operator, e.g. \u003Ccode\u003E[n..m]\u003C/code\u003E for lists, \u003Ccode\u003Eseq {n..m}\u003C/code\u003E for sequences","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(.. ..)","title":"Operators.(.. ..)","content":"Operators.(.. ..) \n(.. ..) \nThe standard overloaded skip range operator, e.g. \u003Ccode\u003E[n..skip..m]\u003C/code\u003E for lists, \u003Ccode\u003Eseq {n..skip..m}\u003C/code\u003E for sequences","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#lock","title":"Operators.lock","content":"Operators.lock \nlock \nExecute the function as a mutual-exclusion region using the input value as a lock. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#using","title":"Operators.using","content":"Operators.using \nusing \nClean up resources associated with the input object after the completion of the given function.\n Cleanup occurs even when an exception is raised by the protected\n code. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#typeof","title":"Operators.typeof","content":"Operators.typeof \ntypeof \nGenerate a System.Type runtime representation of a static type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#nameof","title":"Operators.nameof","content":"Operators.nameof \nnameof \nReturns the name of the given symbol.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#methodhandleof","title":"Operators.methodhandleof","content":"Operators.methodhandleof \nmethodhandleof \n\u003Cpre\u003EAn internal, library-only compiler intrinsic for compile-time \n generation of a RuntimeMethodHandle.\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#typedefof","title":"Operators.typedefof","content":"Operators.typedefof \ntypedefof \nGenerate a System.Type representation for a type definition. If the\n input type is a generic type instantiation then return the \n generic type definition associated with all such instantiations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#sizeof","title":"Operators.sizeof","content":"Operators.sizeof \nsizeof \nReturns the internal size of a type in bytes. For example, \u003Ccode\u003Esizeof\u0026lt;int\u0026gt;\u003C/code\u003E returns 4.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#hash","title":"Operators.hash","content":"Operators.hash \nhash \nA generic hash function, designed to return equal hash values for items that are \n equal according to the \u0022=\u0022 operator. By default it will use structural hashing\n for F# union, record and tuple types, hashing the complete contents of the \n type. The exact behaviour of the function can be adjusted on a \n type-by-type basis by implementing GetHashCode for each type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#limitedHash","title":"Operators.limitedHash","content":"Operators.limitedHash \nlimitedHash \nA generic hash function. This function has the same behaviour as \u0027hash\u0027, \n however the default structural hashing for F# union, record and tuple \n types stops when the given limit of nodes is reached. The exact behaviour of \n the function can be adjusted on a type-by-type basis by implementing \n GetHashCode for each type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#abs","title":"Operators.abs","content":"Operators.abs \nabs \nAbsolute value of the given number.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#acos","title":"Operators.acos","content":"Operators.acos \nacos \nInverse cosine of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#asin","title":"Operators.asin","content":"Operators.asin \nasin \nInverse sine of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#atan","title":"Operators.atan","content":"Operators.atan \natan \nInverse tangent of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#atan2","title":"Operators.atan2","content":"Operators.atan2 \natan2 \nInverse tangent of \u003Ccode\u003Ex/y\u003C/code\u003E where \u003Ccode\u003Ex\u003C/code\u003E and \u003Ccode\u003Ey\u003C/code\u003E are specified separately","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#ceil","title":"Operators.ceil","content":"Operators.ceil \nceil \nCeiling of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#exp","title":"Operators.exp","content":"Operators.exp \nexp \nExponential of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#floor","title":"Operators.floor","content":"Operators.floor \nfloor \nFloor of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#sign","title":"Operators.sign","content":"Operators.sign \nsign \nSign of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#round","title":"Operators.round","content":"Operators.round \nround \nRound the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#log","title":"Operators.log","content":"Operators.log \nlog \nNatural logarithm of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#log10","title":"Operators.log10","content":"Operators.log10 \nlog10 \nLogarithm to base 10 of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#sqrt","title":"Operators.sqrt","content":"Operators.sqrt \nsqrt \nSquare root of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#cos","title":"Operators.cos","content":"Operators.cos \ncos \nCosine of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#cosh","title":"Operators.cosh","content":"Operators.cosh \ncosh \nHyperbolic cosine  of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#sin","title":"Operators.sin","content":"Operators.sin \nsin \nSine of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#sinh","title":"Operators.sinh","content":"Operators.sinh \nsinh \nHyperbolic sine of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#tan","title":"Operators.tan","content":"Operators.tan \ntan \nTangent of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#tanh","title":"Operators.tanh","content":"Operators.tanh \ntanh \nHyperbolic tangent of the given number","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#truncate","title":"Operators.truncate","content":"Operators.truncate \ntruncate \nOverloaded truncate operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#( ** )","title":"Operators.( ** )","content":"Operators.( ** ) \n( ** ) \nOverloaded power operator.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#pown","title":"Operators.pown","content":"Operators.pown \npown \nOverloaded power operator. If \u003Ccode\u003En \u0026gt; 0\u003C/code\u003E then equivalent to \u003Ccode\u003Ex*...*x\u003C/code\u003E for \u003Ccode\u003En\u003C/code\u003E occurrences of \u003Ccode\u003Ex\u003C/code\u003E. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#byte","title":"Operators.byte","content":"Operators.byte \nbyte \nConverts the argument to byte. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EByte.Parse()\u003C/code\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#sbyte","title":"Operators.sbyte","content":"Operators.sbyte \nsbyte \nConverts the argument to signed byte. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003ESByte.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#int16","title":"Operators.int16","content":"Operators.int16 \nint16 \nConverts the argument to signed 16-bit integer. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EInt16.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#uint16","title":"Operators.uint16","content":"Operators.uint16 \nuint16 \nConverts the argument to unsigned 16-bit integer. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EUInt16.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#int","title":"Operators.int","content":"Operators.int \nint \nConverts the argument to signed 32-bit integer. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EInt32.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#uint","title":"Operators.uint","content":"Operators.uint \nuint \nConverts the argument to an unsigned 32-bit integer. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EUInt32.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#enum","title":"Operators.enum","content":"Operators.enum \nenum \nConverts the argument to a particular enum type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#int32","title":"Operators.int32","content":"Operators.int32 \nint32 \nConverts the argument to signed 32-bit integer. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EInt32.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#uint32","title":"Operators.uint32","content":"Operators.uint32 \nuint32 \nConverts the argument to unsigned 32-bit integer. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EUInt32.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#int64","title":"Operators.int64","content":"Operators.int64 \nint64 \nConverts the argument to signed 64-bit integer. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EInt64.Parse()\u003C/code\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#uint64","title":"Operators.uint64","content":"Operators.uint64 \nuint64 \nConverts the argument to unsigned 64-bit integer. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EUInt64.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#float32","title":"Operators.float32","content":"Operators.float32 \nfloat32 \nConverts the argument to 32-bit float. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003ESingle.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#float","title":"Operators.float","content":"Operators.float \nfloat \nConverts the argument to 64-bit float. This is a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EDouble.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#nativeint","title":"Operators.nativeint","content":"Operators.nativeint \nnativeint \nConverts the argument to signed native integer. This is a direct conversion for all \n primitive numeric types. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#unativeint","title":"Operators.unativeint","content":"Operators.unativeint \nunativeint \nConverts the argument to unsigned native integer using a direct conversion for all \n primitive numeric types. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#string","title":"Operators.string","content":"Operators.string \nstring \nConverts the argument to a string using \u003Ccode\u003EToString\u003C/code\u003E. \nFor standard integer and floating point values and any type that implements \u003Ccode\u003EIFormattable\u003C/code\u003E\u003Ccode\u003EToString\u003C/code\u003E conversion uses \u003Ccode\u003ECultureInfo.InvariantCulture\u003C/code\u003E. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#decimal","title":"Operators.decimal","content":"Operators.decimal \ndecimal \nConverts the argument to System.Decimal using a direct conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ccode\u003EUInt64.Parse()\u003C/code\u003E  \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#char","title":"Operators.char","content":"Operators.char \nchar \nConverts the argument to character. Numeric inputs are converted according to the UTF-16 \n encoding for characters. String inputs must be exactly one character long. For other\n input types the operation requires an appropriate static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(|Failure|_|)","title":"Operators.(|Failure|_|)","content":"Operators.(|Failure|_|) \n(|Failure|_|) \nMatches \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.exception\u0022\u003EException\u003C/a\u003E objects whose runtime type is precisely \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.exception\u0022\u003EException\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(|Null|NonNull|)","title":"Operators.(|Null|NonNull|)","content":"Operators.(|Null|NonNull|) \n(|Null|NonNull|) \nDetermines whether the given value is null.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators.html#(|KeyValue|)","title":"Operators.(|KeyValue|)","content":"Operators.(|KeyValue|) \n(|KeyValue|) \nAn active pattern to match values of type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair\u0022\u003EKeyValuePair\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-arrayextensions.html","title":"ArrayExtensions","content":"ArrayExtensions \n\u003Cpre\u003EContains extension methods to allow the use of F# indexer notation with arrays.\n This module is automatically opened in all F# code.\u003C/pre\u003E \nArrayExtensions.GetReverseIndex \nGetReverseIndex \nArrayExtensions.GetReverseIndex \nGetReverseIndex \nArrayExtensions.GetReverseIndex \nGetReverseIndex \nArrayExtensions.GetReverseIndex \nGetReverseIndex \nArrayExtensions.GetReverseIndex \nGetReverseIndex","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-arrayextensions.html#GetReverseIndex","title":"ArrayExtensions.GetReverseIndex","content":"ArrayExtensions.GetReverseIndex \nGetReverseIndex \nGet the index for the element offset elements away from the end of the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-arrayextensions.html#GetReverseIndex","title":"ArrayExtensions.GetReverseIndex","content":"ArrayExtensions.GetReverseIndex \nGetReverseIndex \nGet the index for the element offset elements away from the end of the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-arrayextensions.html#GetReverseIndex","title":"ArrayExtensions.GetReverseIndex","content":"ArrayExtensions.GetReverseIndex \nGetReverseIndex \nGet the index for the element offset elements away from the end of the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-arrayextensions.html#GetReverseIndex","title":"ArrayExtensions.GetReverseIndex","content":"ArrayExtensions.GetReverseIndex \nGetReverseIndex \nGet the index for the element offset elements away from the end of the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-arrayextensions.html#GetReverseIndex","title":"ArrayExtensions.GetReverseIndex","content":"ArrayExtensions.GetReverseIndex \nGetReverseIndex \nGet the index for the element offset elements away from the end of the collection.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html","title":"Checked","content":"Checked \nThis module contains the basic arithmetic operations with overflow checks. \nChecked.(~-) \n(~-) \nChecked.(-) \n(-) \nChecked.(\u002B) \n(\u002B) \nChecked.(*) \n(*) \nChecked.byte \nbyte \nChecked.sbyte \nsbyte \nChecked.int16 \nint16 \nChecked.uint16 \nuint16 \nChecked.int \nint \nChecked.int32 \nint32 \nChecked.uint32 \nuint32 \nChecked.int64 \nint64 \nChecked.uint64 \nuint64 \nChecked.nativeint \nnativeint \nChecked.unativeint \nunativeint \nChecked.char \nchar","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#(~-)","title":"Checked.(~-)","content":"Checked.(~-) \n(~-) \nOverloaded unary negation (checks for overflow)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#(-)","title":"Checked.(-)","content":"Checked.(-) \n(-) \nOverloaded subtraction operator (checks for overflow)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#(\u002B)","title":"Checked.(\u002B)","content":"Checked.(\u002B) \n(\u002B) \nOverloaded addition operator (checks for overflow)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#(*)","title":"Checked.(*)","content":"Checked.(*) \n(*) \nOverloaded multiplication operator (checks for overflow)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#byte","title":"Checked.byte","content":"Checked.byte \nbyte \nConverts the argument to \u003Ccode\u003Ebyte\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.byte.parse\u0022\u003EByte.Parse\u003C/a\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#sbyte","title":"Checked.sbyte","content":"Checked.sbyte \nsbyte \nConverts the argument to \u003Ccode\u003Esbyte\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.sbyte.parse\u0022\u003ESByte.Parse\u003C/a\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#int16","title":"Checked.int16","content":"Checked.int16 \nint16 \nConverts the argument to \u003Ccode\u003Eint16\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int16.parse\u0022\u003EInt16.Parse\u003C/a\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#uint16","title":"Checked.uint16","content":"Checked.uint16 \nuint16 \nConverts the argument to \u003Ccode\u003Euint16\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint16.parse\u0022\u003EUInt16.Parse\u003C/a\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#int","title":"Checked.int","content":"Checked.int \nint \nConverts the argument to \u003Ccode\u003Eint\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int32.parse\u0022\u003EInt32.Parse\u003C/a\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#int32","title":"Checked.int32","content":"Checked.int32 \nint32 \nConverts the argument to \u003Ccode\u003Eint32\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int32.parse\u0022\u003EInt32.Parse\u003C/a\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#uint32","title":"Checked.uint32","content":"Checked.uint32 \nuint32 \nConverts the argument to \u003Ccode\u003Euint32\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint32.parse\u0022\u003EUInt32.Parse\u003C/a\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#int64","title":"Checked.int64","content":"Checked.int64 \nint64 \nConverts the argument to \u003Ccode\u003Eint64\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int64.parse\u0022\u003EInt64.Parse\u003C/a\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#uint64","title":"Checked.uint64","content":"Checked.uint64 \nuint64 \nConverts the argument to \u003Ccode\u003Euint64\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. For strings, the input is converted using \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint64.parse\u0022\u003EUInt64.Parse\u003C/a\u003E \n with InvariantCulture settings. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#nativeint","title":"Checked.nativeint","content":"Checked.nativeint \nnativeint \nConverts the argument to \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nativeint.html\u0022\u003Enativeint\u003C/a\u003E. This is a direct, checked conversion for all \n primitive numeric types. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#unativeint","title":"Checked.unativeint","content":"Checked.unativeint \nunativeint \nConverts the argument to \u003Ccode\u003Eunativeint\u003C/code\u003E. This is a direct, checked conversion for all \n primitive numeric types. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-checked.html#char","title":"Checked.char","content":"Checked.char \nchar \nConverts the argument to \u003Ccode\u003Echar\u003C/code\u003E. Numeric inputs are converted using a checked \n conversion according to the UTF-16 encoding for characters. String inputs must \n be exactly one character long. For other input types the operation requires an \n appropriate static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html","title":"NonStructuralComparison","content":"NonStructuralComparison \n\u003Cpre\u003EA module of comparison and equality operators that are statically resolved, but which are not fully generic and do not make structural comparison. Opening this\n module may make code that relies on structural or generic comparison no longer compile.\u003C/pre\u003E \nNonStructuralComparison.(\u003C) \n(\u003C) \nNonStructuralComparison.(\u003E) \n(\u003E) \nNonStructuralComparison.(\u003E=) \n(\u003E=) \nNonStructuralComparison.(\u003C=) \n(\u003C=) \nNonStructuralComparison.(=) \n(=) \nNonStructuralComparison.(\u003C\u003E) \n(\u003C\u003E) \nNonStructuralComparison.compare \ncompare \nNonStructuralComparison.max \nmax \nNonStructuralComparison.min \nmin \nNonStructuralComparison.hash \nhash","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#(\u003C)","title":"NonStructuralComparison.(\u003C)","content":"NonStructuralComparison.(\u003C) \n(\u003C) \nCompares the two values for less-than","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#(\u003E)","title":"NonStructuralComparison.(\u003E)","content":"NonStructuralComparison.(\u003E) \n(\u003E) \nCompares the two values for greater-than","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#(\u003E=)","title":"NonStructuralComparison.(\u003E=)","content":"NonStructuralComparison.(\u003E=) \n(\u003E=) \nCompares the two values for greater-than-or-equal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#(\u003C=)","title":"NonStructuralComparison.(\u003C=)","content":"NonStructuralComparison.(\u003C=) \n(\u003C=) \nCompares the two values for less-than-or-equal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#(=)","title":"NonStructuralComparison.(=)","content":"NonStructuralComparison.(=) \n(=) \nCompares the two values for equality","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#(\u003C\u003E)","title":"NonStructuralComparison.(\u003C\u003E)","content":"NonStructuralComparison.(\u003C\u003E) \n(\u003C\u003E) \nCompares the two values for inequality","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#compare","title":"NonStructuralComparison.compare","content":"NonStructuralComparison.compare \ncompare \nCompares the two values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#max","title":"NonStructuralComparison.max","content":"NonStructuralComparison.max \nmax \nMaximum of the two values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#min","title":"NonStructuralComparison.min","content":"NonStructuralComparison.min \nmin \nMinimum of the two values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-nonstructuralcomparison.html#hash","title":"NonStructuralComparison.hash","content":"NonStructuralComparison.hash \nhash \nCalls GetHashCode() on the value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html","title":"OperatorIntrinsics","content":"OperatorIntrinsics \n\u003Cpre\u003EA module of compiler intrinsic functions for efficient implementations of F# integer ranges\n and dynamic invocations of other F# operators\u003C/pre\u003E \nOperatorIntrinsics.GetArraySlice \nGetArraySlice \nOperatorIntrinsics.SetArraySlice \nSetArraySlice \nOperatorIntrinsics.GetArraySlice2D \nGetArraySlice2D \nOperatorIntrinsics.GetArraySlice2DFixed1 \nGetArraySlice2DFixed1 \nOperatorIntrinsics.GetArraySlice2DFixed2 \nGetArraySlice2DFixed2 \nOperatorIntrinsics.SetArraySlice2D \nSetArraySlice2D \nOperatorIntrinsics.SetArraySlice2DFixed1 \nSetArraySlice2DFixed1 \nOperatorIntrinsics.SetArraySlice2DFixed2 \nSetArraySlice2DFixed2 \nOperatorIntrinsics.GetArraySlice3D \nGetArraySlice3D \nOperatorIntrinsics.GetArraySlice3DFixedSingle1 \nGetArraySlice3DFixedSingle1 \nOperatorIntrinsics.GetArraySlice3DFixedSingle2 \nGetArraySlice3DFixedSingle2 \nOperatorIntrinsics.GetArraySlice3DFixedSingle3 \nGetArraySlice3DFixedSingle3 \nOperatorIntrinsics.GetArraySlice3DFixedDouble1 \nGetArraySlice3DFixedDouble1 \nOperatorIntrinsics.GetArraySlice3DFixedDouble2 \nGetArraySlice3DFixedDouble2 \nOperatorIntrinsics.GetArraySlice3DFixedDouble3 \nGetArraySlice3DFixedDouble3 \nOperatorIntrinsics.SetArraySlice3D \nSetArraySlice3D \nOperatorIntrinsics.SetArraySlice3DFixedSingle1 \nSetArraySlice3DFixedSingle1 \nOperatorIntrinsics.SetArraySlice3DFixedSingle2 \nSetArraySlice3DFixedSingle2 \nOperatorIntrinsics.SetArraySlice3DFixedSingle3 \nSetArraySlice3DFixedSingle3 \nOperatorIntrinsics.SetArraySlice3DFixedDouble1 \nSetArraySlice3DFixedDouble1 \nOperatorIntrinsics.SetArraySlice3DFixedDouble2 \nSetArraySlice3DFixedDouble2 \nOperatorIntrinsics.SetArraySlice3DFixedDouble3 \nSetArraySlice3DFixedDouble3 \nOperatorIntrinsics.GetArraySlice4D \nGetArraySlice4D \nOperatorIntrinsics.GetArraySlice4DFixedSingle1 \nGetArraySlice4DFixedSingle1 \nOperatorIntrinsics.GetArraySlice4DFixedSingle2 \nGetArraySlice4DFixedSingle2 \nOperatorIntrinsics.GetArraySlice4DFixedSingle3 \nGetArraySlice4DFixedSingle3 \nOperatorIntrinsics.GetArraySlice4DFixedSingle4 \nGetArraySlice4DFixedSingle4 \nOperatorIntrinsics.GetArraySlice4DFixedDouble1 \nGetArraySlice4DFixedDouble1 \nOperatorIntrinsics.GetArraySlice4DFixedDouble2 \nGetArraySlice4DFixedDouble2 \nOperatorIntrinsics.GetArraySlice4DFixedDouble3 \nGetArraySlice4DFixedDouble3 \nOperatorIntrinsics.GetArraySlice4DFixedDouble4 \nGetArraySlice4DFixedDouble4 \nOperatorIntrinsics.GetArraySlice4DFixedDouble5 \nGetArraySlice4DFixedDouble5 \nOperatorIntrinsics.GetArraySlice4DFixedDouble6 \nGetArraySlice4DFixedDouble6 \nOperatorIntrinsics.GetArraySlice4DFixedTriple4 \nGetArraySlice4DFixedTriple4 \nOperatorIntrinsics.GetArraySlice4DFixedTriple3 \nGetArraySlice4DFixedTriple3 \nOperatorIntrinsics.GetArraySlice4DFixedTriple2 \nGetArraySlice4DFixedTriple2 \nOperatorIntrinsics.GetArraySlice4DFixedTriple1 \nGetArraySlice4DFixedTriple1 \nOperatorIntrinsics.SetArraySlice4DFixedSingle1 \nSetArraySlice4DFixedSingle1 \nOperatorIntrinsics.SetArraySlice4DFixedSingle2 \nSetArraySlice4DFixedSingle2 \nOperatorIntrinsics.SetArraySlice4DFixedSingle3 \nSetArraySlice4DFixedSingle3 \nOperatorIntrinsics.SetArraySlice4DFixedSingle4 \nSetArraySlice4DFixedSingle4 \nOperatorIntrinsics.SetArraySlice4DFixedDouble1 \nSetArraySlice4DFixedDouble1 \nOperatorIntrinsics.SetArraySlice4DFixedDouble2 \nSetArraySlice4DFixedDouble2 \nOperatorIntrinsics.SetArraySlice4DFixedDouble3 \nSetArraySlice4DFixedDouble3 \nOperatorIntrinsics.SetArraySlice4DFixedDouble4 \nSetArraySlice4DFixedDouble4 \nOperatorIntrinsics.SetArraySlice4DFixedDouble5 \nSetArraySlice4DFixedDouble5 \nOperatorIntrinsics.SetArraySlice4DFixedDouble6 \nSetArraySlice4DFixedDouble6 \nOperatorIntrinsics.SetArraySlice4DFixedTriple4 \nSetArraySlice4DFixedTriple4 \nOperatorIntrinsics.SetArraySlice4DFixedTriple3 \nSetArraySlice4DFixedTriple3 \nOperatorIntrinsics.SetArraySlice4DFixedTriple2 \nSetArraySlice4DFixedTriple2 \nOperatorIntrinsics.SetArraySlice4DFixedTriple1 \nSetArraySlice4DFixedTriple1 \nOperatorIntrinsics.SetArraySlice4D \nSetArraySlice4D \nOperatorIntrinsics.GetStringSlice \nGetStringSlice \nOperatorIntrinsics.RangeInt32 \nRangeInt32 \nOperatorIntrinsics.RangeDouble \nRangeDouble \nOperatorIntrinsics.RangeSingle \nRangeSingle \nOperatorIntrinsics.RangeInt64 \nRangeInt64 \nOperatorIntrinsics.RangeUInt64 \nRangeUInt64 \nOperatorIntrinsics.RangeUInt32 \nRangeUInt32 \nOperatorIntrinsics.RangeIntPtr \nRangeIntPtr \nOperatorIntrinsics.RangeUIntPtr \nRangeUIntPtr \nOperatorIntrinsics.RangeInt16 \nRangeInt16 \nOperatorIntrinsics.RangeUInt16 \nRangeUInt16 \nOperatorIntrinsics.RangeSByte \nRangeSByte \nOperatorIntrinsics.RangeByte \nRangeByte \nOperatorIntrinsics.RangeChar \nRangeChar \nOperatorIntrinsics.RangeGeneric \nRangeGeneric \nOperatorIntrinsics.RangeStepGeneric \nRangeStepGeneric \nOperatorIntrinsics.AbsDynamic \nAbsDynamic \nOperatorIntrinsics.AcosDynamic \nAcosDynamic \nOperatorIntrinsics.AsinDynamic \nAsinDynamic \nOperatorIntrinsics.AtanDynamic \nAtanDynamic \nOperatorIntrinsics.Atan2Dynamic \nAtan2Dynamic \nOperatorIntrinsics.CeilingDynamic \nCeilingDynamic \nOperatorIntrinsics.ExpDynamic \nExpDynamic \nOperatorIntrinsics.FloorDynamic \nFloorDynamic \nOperatorIntrinsics.TruncateDynamic \nTruncateDynamic \nOperatorIntrinsics.RoundDynamic \nRoundDynamic \nOperatorIntrinsics.SignDynamic \nSignDynamic \nOperatorIntrinsics.LogDynamic \nLogDynamic \nOperatorIntrinsics.Log10Dynamic \nLog10Dynamic \nOperatorIntrinsics.SqrtDynamic \nSqrtDynamic \nOperatorIntrinsics.CosDynamic \nCosDynamic \nOperatorIntrinsics.CoshDynamic \nCoshDynamic \nOperatorIntrinsics.SinDynamic \nSinDynamic \nOperatorIntrinsics.SinhDynamic \nSinhDynamic \nOperatorIntrinsics.TanDynamic \nTanDynamic \nOperatorIntrinsics.TanhDynamic \nTanhDynamic \nOperatorIntrinsics.PowDynamic \nPowDynamic \nOperatorIntrinsics.PowByte \nPowByte \nOperatorIntrinsics.PowSByte \nPowSByte \nOperatorIntrinsics.PowInt16 \nPowInt16 \nOperatorIntrinsics.PowUInt16 \nPowUInt16 \nOperatorIntrinsics.PowInt32 \nPowInt32 \nOperatorIntrinsics.PowUInt32 \nPowUInt32 \nOperatorIntrinsics.PowInt64 \nPowInt64 \nOperatorIntrinsics.PowUInt64 \nPowUInt64 \nOperatorIntrinsics.PowIntPtr \nPowIntPtr \nOperatorIntrinsics.PowUIntPtr \nPowUIntPtr \nOperatorIntrinsics.PowSingle \nPowSingle \nOperatorIntrinsics.PowDouble \nPowDouble \nOperatorIntrinsics.PowDecimal \nPowDecimal \nOperatorIntrinsics.PowGeneric \nPowGeneric","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice","title":"OperatorIntrinsics.GetArraySlice","content":"OperatorIntrinsics.GetArraySlice \nGetArraySlice \nGets a slice of an array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice","title":"OperatorIntrinsics.SetArraySlice","content":"OperatorIntrinsics.SetArraySlice \nSetArraySlice \nSets a slice of an array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice2D","title":"OperatorIntrinsics.GetArraySlice2D","content":"OperatorIntrinsics.GetArraySlice2D \nGetArraySlice2D \nGets a region slice of an array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice2DFixed1","title":"OperatorIntrinsics.GetArraySlice2DFixed1","content":"OperatorIntrinsics.GetArraySlice2DFixed1 \nGetArraySlice2DFixed1 \nGets a vector slice of a 2D array. The index of the first dimension is fixed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice2DFixed2","title":"OperatorIntrinsics.GetArraySlice2DFixed2","content":"OperatorIntrinsics.GetArraySlice2DFixed2 \nGetArraySlice2DFixed2 \nGets a vector slice of a 2D array. The index of the second dimension is fixed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice2D","title":"OperatorIntrinsics.SetArraySlice2D","content":"OperatorIntrinsics.SetArraySlice2D \nSetArraySlice2D \nSets a region slice of an array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice2DFixed1","title":"OperatorIntrinsics.SetArraySlice2DFixed1","content":"OperatorIntrinsics.SetArraySlice2DFixed1 \nSetArraySlice2DFixed1 \nSets a vector slice of a 2D array. The index of the first dimension is fixed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice2DFixed2","title":"OperatorIntrinsics.SetArraySlice2DFixed2","content":"OperatorIntrinsics.SetArraySlice2DFixed2 \nSetArraySlice2DFixed2 \nSets a vector slice of a 2D array. The index of the second dimension is fixed.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice3D","title":"OperatorIntrinsics.GetArraySlice3D","content":"OperatorIntrinsics.GetArraySlice3D \nGetArraySlice3D \nGets a slice of an array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice3DFixedSingle1","title":"OperatorIntrinsics.GetArraySlice3DFixedSingle1","content":"OperatorIntrinsics.GetArraySlice3DFixedSingle1 \nGetArraySlice3DFixedSingle1 \nGets a 2D slice of a 3D array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice3DFixedSingle2","title":"OperatorIntrinsics.GetArraySlice3DFixedSingle2","content":"OperatorIntrinsics.GetArraySlice3DFixedSingle2 \nGetArraySlice3DFixedSingle2 \nGets a 2D slice of a 3D array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice3DFixedSingle3","title":"OperatorIntrinsics.GetArraySlice3DFixedSingle3","content":"OperatorIntrinsics.GetArraySlice3DFixedSingle3 \nGetArraySlice3DFixedSingle3 \nGets a 2D slice of a 3D array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice3DFixedDouble1","title":"OperatorIntrinsics.GetArraySlice3DFixedDouble1","content":"OperatorIntrinsics.GetArraySlice3DFixedDouble1 \nGetArraySlice3DFixedDouble1 \nGets a 1D slice of a 3D array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice3DFixedDouble2","title":"OperatorIntrinsics.GetArraySlice3DFixedDouble2","content":"OperatorIntrinsics.GetArraySlice3DFixedDouble2 \nGetArraySlice3DFixedDouble2 \nGets a 1D slice of a 3D array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice3DFixedDouble3","title":"OperatorIntrinsics.GetArraySlice3DFixedDouble3","content":"OperatorIntrinsics.GetArraySlice3DFixedDouble3 \nGetArraySlice3DFixedDouble3 \nGets a 1D slice of a 3D array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice3D","title":"OperatorIntrinsics.SetArraySlice3D","content":"OperatorIntrinsics.SetArraySlice3D \nSetArraySlice3D \nSets a slice of an array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice3DFixedSingle1","title":"OperatorIntrinsics.SetArraySlice3DFixedSingle1","content":"OperatorIntrinsics.SetArraySlice3DFixedSingle1 \nSetArraySlice3DFixedSingle1 \nSets a 2D slice of a 3D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice3DFixedSingle2","title":"OperatorIntrinsics.SetArraySlice3DFixedSingle2","content":"OperatorIntrinsics.SetArraySlice3DFixedSingle2 \nSetArraySlice3DFixedSingle2 \nSets a 2D slice of a 3D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice3DFixedSingle3","title":"OperatorIntrinsics.SetArraySlice3DFixedSingle3","content":"OperatorIntrinsics.SetArraySlice3DFixedSingle3 \nSetArraySlice3DFixedSingle3 \nSets a 2D slice of a 3D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice3DFixedDouble1","title":"OperatorIntrinsics.SetArraySlice3DFixedDouble1","content":"OperatorIntrinsics.SetArraySlice3DFixedDouble1 \nSetArraySlice3DFixedDouble1 \nSets a 1D slice of a 3D array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice3DFixedDouble2","title":"OperatorIntrinsics.SetArraySlice3DFixedDouble2","content":"OperatorIntrinsics.SetArraySlice3DFixedDouble2 \nSetArraySlice3DFixedDouble2 \nSets a 1D slice of a 3D array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice3DFixedDouble3","title":"OperatorIntrinsics.SetArraySlice3DFixedDouble3","content":"OperatorIntrinsics.SetArraySlice3DFixedDouble3 \nSetArraySlice3DFixedDouble3 \nSets a 1D slice of a 3D array.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4D","title":"OperatorIntrinsics.GetArraySlice4D","content":"OperatorIntrinsics.GetArraySlice4D \nGetArraySlice4D \nGets a slice of an array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedSingle1","title":"OperatorIntrinsics.GetArraySlice4DFixedSingle1","content":"OperatorIntrinsics.GetArraySlice4DFixedSingle1 \nGetArraySlice4DFixedSingle1 \nGets a 3D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedSingle2","title":"OperatorIntrinsics.GetArraySlice4DFixedSingle2","content":"OperatorIntrinsics.GetArraySlice4DFixedSingle2 \nGetArraySlice4DFixedSingle2 \nGets a 3D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedSingle3","title":"OperatorIntrinsics.GetArraySlice4DFixedSingle3","content":"OperatorIntrinsics.GetArraySlice4DFixedSingle3 \nGetArraySlice4DFixedSingle3 \nGets a 3D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedSingle4","title":"OperatorIntrinsics.GetArraySlice4DFixedSingle4","content":"OperatorIntrinsics.GetArraySlice4DFixedSingle4 \nGetArraySlice4DFixedSingle4 \nGets a 3D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedDouble1","title":"OperatorIntrinsics.GetArraySlice4DFixedDouble1","content":"OperatorIntrinsics.GetArraySlice4DFixedDouble1 \nGetArraySlice4DFixedDouble1 \nGets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedDouble2","title":"OperatorIntrinsics.GetArraySlice4DFixedDouble2","content":"OperatorIntrinsics.GetArraySlice4DFixedDouble2 \nGetArraySlice4DFixedDouble2 \nGets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedDouble3","title":"OperatorIntrinsics.GetArraySlice4DFixedDouble3","content":"OperatorIntrinsics.GetArraySlice4DFixedDouble3 \nGetArraySlice4DFixedDouble3 \nGets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedDouble4","title":"OperatorIntrinsics.GetArraySlice4DFixedDouble4","content":"OperatorIntrinsics.GetArraySlice4DFixedDouble4 \nGetArraySlice4DFixedDouble4 \nGets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedDouble5","title":"OperatorIntrinsics.GetArraySlice4DFixedDouble5","content":"OperatorIntrinsics.GetArraySlice4DFixedDouble5 \nGetArraySlice4DFixedDouble5 \nGets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedDouble6","title":"OperatorIntrinsics.GetArraySlice4DFixedDouble6","content":"OperatorIntrinsics.GetArraySlice4DFixedDouble6 \nGetArraySlice4DFixedDouble6 \nGets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedTriple4","title":"OperatorIntrinsics.GetArraySlice4DFixedTriple4","content":"OperatorIntrinsics.GetArraySlice4DFixedTriple4 \nGetArraySlice4DFixedTriple4 \nGets a 1D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedTriple3","title":"OperatorIntrinsics.GetArraySlice4DFixedTriple3","content":"OperatorIntrinsics.GetArraySlice4DFixedTriple3 \nGetArraySlice4DFixedTriple3 \nGets a 1D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedTriple2","title":"OperatorIntrinsics.GetArraySlice4DFixedTriple2","content":"OperatorIntrinsics.GetArraySlice4DFixedTriple2 \nGetArraySlice4DFixedTriple2 \nGets a 1D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetArraySlice4DFixedTriple1","title":"OperatorIntrinsics.GetArraySlice4DFixedTriple1","content":"OperatorIntrinsics.GetArraySlice4DFixedTriple1 \nGetArraySlice4DFixedTriple1 \nGets a 1D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedSingle1","title":"OperatorIntrinsics.SetArraySlice4DFixedSingle1","content":"OperatorIntrinsics.SetArraySlice4DFixedSingle1 \nSetArraySlice4DFixedSingle1 \nSets a 3D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedSingle2","title":"OperatorIntrinsics.SetArraySlice4DFixedSingle2","content":"OperatorIntrinsics.SetArraySlice4DFixedSingle2 \nSetArraySlice4DFixedSingle2 \nSets a 3D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedSingle3","title":"OperatorIntrinsics.SetArraySlice4DFixedSingle3","content":"OperatorIntrinsics.SetArraySlice4DFixedSingle3 \nSetArraySlice4DFixedSingle3 \nSets a 3D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedSingle4","title":"OperatorIntrinsics.SetArraySlice4DFixedSingle4","content":"OperatorIntrinsics.SetArraySlice4DFixedSingle4 \nSetArraySlice4DFixedSingle4 \nSets a 3D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedDouble1","title":"OperatorIntrinsics.SetArraySlice4DFixedDouble1","content":"OperatorIntrinsics.SetArraySlice4DFixedDouble1 \nSetArraySlice4DFixedDouble1 \nSets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedDouble2","title":"OperatorIntrinsics.SetArraySlice4DFixedDouble2","content":"OperatorIntrinsics.SetArraySlice4DFixedDouble2 \nSetArraySlice4DFixedDouble2 \nSets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedDouble3","title":"OperatorIntrinsics.SetArraySlice4DFixedDouble3","content":"OperatorIntrinsics.SetArraySlice4DFixedDouble3 \nSetArraySlice4DFixedDouble3 \nSets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedDouble4","title":"OperatorIntrinsics.SetArraySlice4DFixedDouble4","content":"OperatorIntrinsics.SetArraySlice4DFixedDouble4 \nSetArraySlice4DFixedDouble4 \nSets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedDouble5","title":"OperatorIntrinsics.SetArraySlice4DFixedDouble5","content":"OperatorIntrinsics.SetArraySlice4DFixedDouble5 \nSetArraySlice4DFixedDouble5 \nSets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedDouble6","title":"OperatorIntrinsics.SetArraySlice4DFixedDouble6","content":"OperatorIntrinsics.SetArraySlice4DFixedDouble6 \nSetArraySlice4DFixedDouble6 \nSets a 2D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedTriple4","title":"OperatorIntrinsics.SetArraySlice4DFixedTriple4","content":"OperatorIntrinsics.SetArraySlice4DFixedTriple4 \nSetArraySlice4DFixedTriple4 \nSets a 1D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedTriple3","title":"OperatorIntrinsics.SetArraySlice4DFixedTriple3","content":"OperatorIntrinsics.SetArraySlice4DFixedTriple3 \nSetArraySlice4DFixedTriple3 \nSets a 1D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedTriple2","title":"OperatorIntrinsics.SetArraySlice4DFixedTriple2","content":"OperatorIntrinsics.SetArraySlice4DFixedTriple2 \nSetArraySlice4DFixedTriple2 \nSets a 1D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4DFixedTriple1","title":"OperatorIntrinsics.SetArraySlice4DFixedTriple1","content":"OperatorIntrinsics.SetArraySlice4DFixedTriple1 \nSetArraySlice4DFixedTriple1 \nSets a 1D slice of a 4D array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SetArraySlice4D","title":"OperatorIntrinsics.SetArraySlice4D","content":"OperatorIntrinsics.SetArraySlice4D \nSetArraySlice4D \nSets a slice of an array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#GetStringSlice","title":"OperatorIntrinsics.GetStringSlice","content":"OperatorIntrinsics.GetStringSlice \nGetStringSlice \nGets a slice from a string","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeInt32","title":"OperatorIntrinsics.RangeInt32","content":"OperatorIntrinsics.RangeInt32 \nRangeInt32 \nGenerate a range of integers","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeDouble","title":"OperatorIntrinsics.RangeDouble","content":"OperatorIntrinsics.RangeDouble \nRangeDouble \nGenerate a range of float values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeSingle","title":"OperatorIntrinsics.RangeSingle","content":"OperatorIntrinsics.RangeSingle \nRangeSingle \nGenerate a range of float32 values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeInt64","title":"OperatorIntrinsics.RangeInt64","content":"OperatorIntrinsics.RangeInt64 \nRangeInt64 \nGenerate a range of int64 values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeUInt64","title":"OperatorIntrinsics.RangeUInt64","content":"OperatorIntrinsics.RangeUInt64 \nRangeUInt64 \nGenerate a range of uint64 values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeUInt32","title":"OperatorIntrinsics.RangeUInt32","content":"OperatorIntrinsics.RangeUInt32 \nRangeUInt32 \nGenerate a range of uint32 values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeIntPtr","title":"OperatorIntrinsics.RangeIntPtr","content":"OperatorIntrinsics.RangeIntPtr \nRangeIntPtr \nGenerate a range of nativeint values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeUIntPtr","title":"OperatorIntrinsics.RangeUIntPtr","content":"OperatorIntrinsics.RangeUIntPtr \nRangeUIntPtr \nGenerate a range of unativeint values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeInt16","title":"OperatorIntrinsics.RangeInt16","content":"OperatorIntrinsics.RangeInt16 \nRangeInt16 \nGenerate a range of int16 values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeUInt16","title":"OperatorIntrinsics.RangeUInt16","content":"OperatorIntrinsics.RangeUInt16 \nRangeUInt16 \nGenerate a range of uint16 values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeSByte","title":"OperatorIntrinsics.RangeSByte","content":"OperatorIntrinsics.RangeSByte \nRangeSByte \nGenerate a range of sbyte values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeByte","title":"OperatorIntrinsics.RangeByte","content":"OperatorIntrinsics.RangeByte \nRangeByte \nGenerate a range of byte values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeChar","title":"OperatorIntrinsics.RangeChar","content":"OperatorIntrinsics.RangeChar \nRangeChar \nGenerate a range of char values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeGeneric","title":"OperatorIntrinsics.RangeGeneric","content":"OperatorIntrinsics.RangeGeneric \nRangeGeneric \nGenerate a range of values using the given zero, add, start, step and stop values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RangeStepGeneric","title":"OperatorIntrinsics.RangeStepGeneric","content":"OperatorIntrinsics.RangeStepGeneric \nRangeStepGeneric \nGenerate a range of values using the given zero, add, start, step and stop values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#AbsDynamic","title":"OperatorIntrinsics.AbsDynamic","content":"OperatorIntrinsics.AbsDynamic \nAbsDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#AcosDynamic","title":"OperatorIntrinsics.AcosDynamic","content":"OperatorIntrinsics.AcosDynamic \nAcosDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#AsinDynamic","title":"OperatorIntrinsics.AsinDynamic","content":"OperatorIntrinsics.AsinDynamic \nAsinDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#AtanDynamic","title":"OperatorIntrinsics.AtanDynamic","content":"OperatorIntrinsics.AtanDynamic \nAtanDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#Atan2Dynamic","title":"OperatorIntrinsics.Atan2Dynamic","content":"OperatorIntrinsics.Atan2Dynamic \nAtan2Dynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#CeilingDynamic","title":"OperatorIntrinsics.CeilingDynamic","content":"OperatorIntrinsics.CeilingDynamic \nCeilingDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#ExpDynamic","title":"OperatorIntrinsics.ExpDynamic","content":"OperatorIntrinsics.ExpDynamic \nExpDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#FloorDynamic","title":"OperatorIntrinsics.FloorDynamic","content":"OperatorIntrinsics.FloorDynamic \nFloorDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#TruncateDynamic","title":"OperatorIntrinsics.TruncateDynamic","content":"OperatorIntrinsics.TruncateDynamic \nTruncateDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#RoundDynamic","title":"OperatorIntrinsics.RoundDynamic","content":"OperatorIntrinsics.RoundDynamic \nRoundDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SignDynamic","title":"OperatorIntrinsics.SignDynamic","content":"OperatorIntrinsics.SignDynamic \nSignDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#LogDynamic","title":"OperatorIntrinsics.LogDynamic","content":"OperatorIntrinsics.LogDynamic \nLogDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#Log10Dynamic","title":"OperatorIntrinsics.Log10Dynamic","content":"OperatorIntrinsics.Log10Dynamic \nLog10Dynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SqrtDynamic","title":"OperatorIntrinsics.SqrtDynamic","content":"OperatorIntrinsics.SqrtDynamic \nSqrtDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#CosDynamic","title":"OperatorIntrinsics.CosDynamic","content":"OperatorIntrinsics.CosDynamic \nCosDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#CoshDynamic","title":"OperatorIntrinsics.CoshDynamic","content":"OperatorIntrinsics.CoshDynamic \nCoshDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SinDynamic","title":"OperatorIntrinsics.SinDynamic","content":"OperatorIntrinsics.SinDynamic \nSinDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#SinhDynamic","title":"OperatorIntrinsics.SinhDynamic","content":"OperatorIntrinsics.SinhDynamic \nSinhDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#TanDynamic","title":"OperatorIntrinsics.TanDynamic","content":"OperatorIntrinsics.TanDynamic \nTanDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#TanhDynamic","title":"OperatorIntrinsics.TanhDynamic","content":"OperatorIntrinsics.TanhDynamic \nTanhDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowDynamic","title":"OperatorIntrinsics.PowDynamic","content":"OperatorIntrinsics.PowDynamic \nPowDynamic \nThis is a library intrinsic. Calls to this function may be generated by evaluating quotations.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowByte","title":"OperatorIntrinsics.PowByte","content":"OperatorIntrinsics.PowByte \nPowByte \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027byte\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowSByte","title":"OperatorIntrinsics.PowSByte","content":"OperatorIntrinsics.PowSByte \nPowSByte \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027sbyte\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowInt16","title":"OperatorIntrinsics.PowInt16","content":"OperatorIntrinsics.PowInt16 \nPowInt16 \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027int16\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowUInt16","title":"OperatorIntrinsics.PowUInt16","content":"OperatorIntrinsics.PowUInt16 \nPowUInt16 \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027uint16\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowInt32","title":"OperatorIntrinsics.PowInt32","content":"OperatorIntrinsics.PowInt32 \nPowInt32 \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027int32\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowUInt32","title":"OperatorIntrinsics.PowUInt32","content":"OperatorIntrinsics.PowUInt32 \nPowUInt32 \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027uint32\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowInt64","title":"OperatorIntrinsics.PowInt64","content":"OperatorIntrinsics.PowInt64 \nPowInt64 \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027int64\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowUInt64","title":"OperatorIntrinsics.PowUInt64","content":"OperatorIntrinsics.PowUInt64 \nPowUInt64 \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027uint64\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowIntPtr","title":"OperatorIntrinsics.PowIntPtr","content":"OperatorIntrinsics.PowIntPtr \nPowIntPtr \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027nativeint\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowUIntPtr","title":"OperatorIntrinsics.PowUIntPtr","content":"OperatorIntrinsics.PowUIntPtr \nPowUIntPtr \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027unativeint\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowSingle","title":"OperatorIntrinsics.PowSingle","content":"OperatorIntrinsics.PowSingle \nPowSingle \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027float32\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowDouble","title":"OperatorIntrinsics.PowDouble","content":"OperatorIntrinsics.PowDouble \nPowDouble \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027float\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowDecimal","title":"OperatorIntrinsics.PowDecimal","content":"OperatorIntrinsics.PowDecimal \nPowDecimal \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator on values of type \u0027decimal\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-operatorintrinsics.html#PowGeneric","title":"OperatorIntrinsics.PowGeneric","content":"OperatorIntrinsics.PowGeneric \nPowGeneric \nThis is a library intrinsic. Calls to this function may be generated by uses of the generic \u0027pown\u0027 operator","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-unchecked.html","title":"Unchecked","content":"Unchecked \nThis module contains basic operations which do not apply runtime and/or static checks \nUnchecked.unbox \nunbox \nUnchecked.defaultof \ndefaultof \nUnchecked.compare \ncompare \nUnchecked.equals \nequals \nUnchecked.hash \nhash \nUnchecked.nonNull \nnonNull \nUnchecked.(|NonNullQuick|) \n(|NonNullQuick|)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-unchecked.html#unbox","title":"Unchecked.unbox","content":"Unchecked.unbox \nunbox \nUnboxes a strongly typed value. This is the inverse of \u003Ccode\u003Ebox\u003C/code\u003E, unbox\u003Ct\u003E(box\u003Ct\u003E a) equals a.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-unchecked.html#defaultof","title":"Unchecked.defaultof","content":"Unchecked.defaultof \ndefaultof \nGenerate a default value for any type. This is null for reference types, \n For structs, this is struct value where all fields have the default value. \n This function is unsafe in the sense that some F# values do not have proper \u003Ccode\u003Enull\u003C/code\u003E values.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-unchecked.html#compare","title":"Unchecked.compare","content":"Unchecked.compare \ncompare \nPerform generic comparison on two values where the type of the values is not\n statically required to have the \u0027comparison\u0027 constraint. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-unchecked.html#equals","title":"Unchecked.equals","content":"Unchecked.equals \nequals \nPerform generic equality on two values where the type of the values is not\n statically required to satisfy the \u0027equality\u0027 constraint. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-unchecked.html#hash","title":"Unchecked.hash","content":"Unchecked.hash \nhash \nPerform generic hashing on a value where the type of the value is not\n statically required to satisfy the \u0027equality\u0027 constraint. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-unchecked.html#nonNull","title":"Unchecked.nonNull","content":"Unchecked.nonNull \nnonNull \nUnsafely retypes the value from (\u0027T | null) to \u0027T without doing any null check at runtime. This is an unsafe operation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-operators-unchecked.html#(|NonNullQuick|)","title":"Unchecked.(|NonNullQuick|)","content":"Unchecked.(|NonNullQuick|) \n(|NonNullQuick|) \nWhen used in a pattern forgets \u0027nullness\u0027 of the value without any runtime check. This is an unsafe operation, as null check is being skipped and null value can be returned.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures.html","title":"OptimizedClosures","content":"OptimizedClosures \nAn implementation module used to hold some private implementations of function\n value invocation. \nOptimizedClosures.FSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E \nOptimizedClosures.FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E \nOptimizedClosures.FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E \nOptimizedClosures.FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-3.html","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E \n\u003Cpre\u003EThe CLI type used to represent F# function values that accept\n two iterated (curried) arguments without intervening execution. This type should not\n typically used directly from either F# code or from other CLI languages.\u003C/pre\u003E \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E.Invoke \nInvoke \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E.Adapt \nAdapt","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-3.html#\u0060\u0060.ctor\u0060\u0060","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct an optimized function value that can accept two curried \n arguments without intervening execution.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-3.html#Invoke","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E.Invoke","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E.Invoke \nInvoke \nInvoke the optimized function value with two curried arguments ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-3.html#Adapt","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E.Adapt","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027U\u003E.Adapt \nAdapt \nAdapt an F# first class function value to be an optimized function value that can \n accept two curried arguments without intervening execution. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-4.html","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E \n\u003Cpre\u003EThe CLI type used to represent F# function values that accept\n three iterated (curried) arguments without intervening execution. This type should not\n typically used directly from either F# code or from other CLI languages.\u003C/pre\u003E \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E.Invoke \nInvoke \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E.Adapt \nAdapt","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-4.html#\u0060\u0060.ctor\u0060\u0060","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct an optimized function value that can accept three curried \n arguments without intervening execution.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-4.html#Invoke","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E.Invoke","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E.Invoke \nInvoke \nInvoke an F# first class function value that accepts three curried arguments \n without intervening execution","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-4.html#Adapt","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E.Adapt","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027U\u003E.Adapt \nAdapt \nAdapt an F# first class function value to be an optimized function value that can \n accept three curried arguments without intervening execution. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-5.html","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E \n\u003Cpre\u003EThe CLI type used to represent F# function values that accept four curried arguments \n without intervening execution. This type should not typically used directly from \n either F# code or from other CLI languages.\u003C/pre\u003E \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E.Invoke \nInvoke \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E.Adapt \nAdapt","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-5.html#\u0060\u0060.ctor\u0060\u0060","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct an optimized function value that can accept four curried \n arguments without intervening execution.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-5.html#Invoke","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E.Invoke","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E.Invoke \nInvoke \nInvoke an F# first class function value that accepts four curried arguments \n without intervening execution","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-5.html#Adapt","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E.Adapt","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027U\u003E.Adapt \nAdapt \nAdapt an F# first class function value to be an optimized function value that can \n accept four curried arguments without intervening execution. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-6.html","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E \n\u003Cpre\u003EThe CLI type used to represent F# function values that accept five curried arguments \n without intervening execution. This type should not typically used directly from \n either F# code or from other CLI languages.\u003C/pre\u003E \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E.Invoke \nInvoke \nFSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E.Adapt \nAdapt","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-6.html#\u0060\u0060.ctor\u0060\u0060","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct an optimized function value that can accept five curried \n arguments without intervening execution.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-6.html#Invoke","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E.Invoke","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E.Invoke \nInvoke \nInvoke an F# first class function value that accepts five curried arguments \n without intervening execution","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optimizedclosures-fsharpfunc-6.html#Adapt","title":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E.Adapt","content":"FSharpFunc\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027U\u003E.Adapt \nAdapt \nAdapt an F# first class function value to be an optimized function value that can \n accept five curried arguments without intervening execution. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html","title":"Option","content":"Option \nContains operations for working with options. \nOption.isSome \nisSome \nOption.isNone \nisNone \nOption.defaultValue \ndefaultValue \nOption.defaultWith \ndefaultWith \nOption.orElse \norElse \nOption.orElseWith \norElseWith \nOption.get \nget \nOption.count \ncount \nOption.fold \nfold \nOption.foldBack \nfoldBack \nOption.exists \nexists \nOption.forall \nforall \nOption.contains \ncontains \nOption.iter \niter \nOption.map \nmap \nOption.map2 \nmap2 \nOption.map3 \nmap3 \nOption.bind \nbind \nOption.flatten \nflatten \nOption.filter \nfilter \nOption.toArray \ntoArray \nOption.toList \ntoList \nOption.toNullable \ntoNullable \nOption.ofNullable \nofNullable \nOption.ofObj \nofObj \nOption.toObj \ntoObj \nOption.ofValueOption \nofValueOption \nOption.toValueOption \ntoValueOption","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#isSome","title":"Option.isSome","content":"Option.isSome \nisSome \nReturns true if the option is not None.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#isNone","title":"Option.isNone","content":"Option.isNone \nisNone \nReturns true if the option is None.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#defaultValue","title":"Option.defaultValue","content":"Option.defaultValue \ndefaultValue \nGets the value of the option if the option is \u003Ccode\u003ESome\u003C/code\u003E, otherwise returns the specified default value. \nIdentical to the built-in \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/defaultarg\u0022\u003EdefaultArg\u003C/a\u003E operator, except with the arguments swapped.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#defaultWith","title":"Option.defaultWith","content":"Option.defaultWith \ndefaultWith \nGets the value of the option if the option is \u003Ccode\u003ESome\u003C/code\u003E, otherwise evaluates \u003Cspan class=\u0022fsdocs-param-name\u0022\u003EdefThunk\u003C/span\u003E and returns the result. \n\u003Cspan class=\u0022fsdocs-param-name\u0022\u003EdefThunk\u003C/span\u003E is not evaluated unless \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eoption\u003C/span\u003E is \u003Ccode\u003ENone\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#orElse","title":"Option.orElse","content":"Option.orElse \norElse \nReturns \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eoption\u003C/span\u003E if it is \u003Ccode\u003ESome\u003C/code\u003E, otherwise returns \u003Cspan class=\u0022fsdocs-param-name\u0022\u003EifNone\u003C/span\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#orElseWith","title":"Option.orElseWith","content":"Option.orElseWith \norElseWith \nReturns \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eoption\u003C/span\u003E if it is \u003Ccode\u003ESome\u003C/code\u003E, otherwise evaluates \u003Cspan class=\u0022fsdocs-param-name\u0022\u003EifNoneThunk\u003C/span\u003E and returns the result. \n\u003Cspan class=\u0022fsdocs-param-name\u0022\u003EifNoneThunk\u003C/span\u003E is not evaluated unless \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eoption\u003C/span\u003E is \u003Ccode\u003ENone\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#get","title":"Option.get","content":"Option.get \nget \nGets the value associated with the option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#count","title":"Option.count","content":"Option.count \ncount \n\u003Ccode\u003Ecount inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with None -\u0026gt; 0 | Some _ -\u0026gt; 1\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#fold","title":"Option.fold","content":"Option.fold \nfold \n\u003Ccode\u003Efold f s inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with None -\u0026gt; s | Some x -\u0026gt; f s x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#foldBack","title":"Option.foldBack","content":"Option.foldBack \nfoldBack \n\u003Ccode\u003Efold f inp s\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with None -\u0026gt; s | Some x -\u0026gt; f x s\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#exists","title":"Option.exists","content":"Option.exists \nexists \n\u003Ccode\u003Eexists p inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with None -\u0026gt; false | Some x -\u0026gt; p x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#forall","title":"Option.forall","content":"Option.forall \nforall \n\u003Ccode\u003Eforall p inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with None -\u0026gt; true | Some x -\u0026gt; p x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#contains","title":"Option.contains","content":"Option.contains \ncontains \nEvaluates to true if \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eoption\u003C/span\u003E is \u003Ccode\u003ESome\u003C/code\u003E and its value is equal to \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Evalue\u003C/span\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#iter","title":"Option.iter","content":"Option.iter \niter \n\u003Ccode\u003Eiter f inp\u003C/code\u003E executes \u003Ccode\u003Ematch inp with None -\u0026gt; () | Some x -\u0026gt; f x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#map","title":"Option.map","content":"Option.map \nmap \n\u003Ccode\u003Emap f inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with None -\u0026gt; None | Some x -\u0026gt; Some (f x)\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#map2","title":"Option.map2","content":"Option.map2 \nmap2 \n\u003Ccode\u003Emap f option1 option2\u003C/code\u003E evaluates to \u003Ccode\u003Ematch option1, option2 with Some x, Some y -\u0026gt; Some (f x y) | _ -\u0026gt; None\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#map3","title":"Option.map3","content":"Option.map3 \nmap3 \n\u003Ccode\u003Emap f option1 option2 option3\u003C/code\u003E evaluates to \u003Ccode\u003Ematch option1, option2, option3 with Some x, Some y, Some z -\u0026gt; Some (f x y z) | _ -\u0026gt; None\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#bind","title":"Option.bind","content":"Option.bind \nbind \n\u003Ccode\u003Ebind f inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with None -\u0026gt; None | Some x -\u0026gt; f x\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#flatten","title":"Option.flatten","content":"Option.flatten \nflatten \n\u003Ccode\u003Eflatten inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with None -\u0026gt; None | Some x -\u0026gt; x\u003C/code\u003E \n\u003Ccode\u003Eflatten\u003C/code\u003E is equivalent to \u003Ccode\u003Ebind id\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#filter","title":"Option.filter","content":"Option.filter \nfilter \n\u003Ccode\u003Efilter f inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with None -\u0026gt; None | Some x -\u0026gt; if f x then Some x else None\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#toArray","title":"Option.toArray","content":"Option.toArray \ntoArray \nConvert the option to an array of length 0 or 1.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#toList","title":"Option.toList","content":"Option.toList \ntoList \nConvert the option to a list of length 0 or 1.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#toNullable","title":"Option.toNullable","content":"Option.toNullable \ntoNullable \nConvert the option to a Nullable value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#ofNullable","title":"Option.ofNullable","content":"Option.ofNullable \nofNullable \nConvert a Nullable value to an option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#ofObj","title":"Option.ofObj","content":"Option.ofObj \nofObj \nConvert a potentially null value to an option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#toObj","title":"Option.toObj","content":"Option.toObj \ntoObj \nConvert an option to a potentially null value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#ofValueOption","title":"Option.ofValueOption","content":"Option.ofValueOption \nofValueOption \nConvert a value option to an option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionmodule.html#toValueOption","title":"Option.toValueOption","content":"Option.toValueOption \ntoValueOption \nConvert an option to a value option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html","title":"Printf","content":"Printf \nExtensible printf-style formatting for numbers and other datatypes \nFormat specifications are strings with \u0022%\u0022 markers indicating format\n placeholders. Format placeholders consist of \u003Ccode\u003E%[flags][width][.precision][type]\u003C/code\u003E. \nPrintf.BuilderFormat\u003C\u0027T, \u0027Result\u003E \nBuilderFormat\u003C\u0027T, \u0027Result\u003E \nPrintf.BuilderFormat\u003C\u0027T\u003E \nBuilderFormat\u003C\u0027T\u003E \nPrintf.StringFormat\u003C\u0027T, \u0027Result\u003E \nStringFormat\u003C\u0027T, \u0027Result\u003E \nPrintf.StringFormat\u003C\u0027T\u003E \nStringFormat\u003C\u0027T\u003E \nPrintf.TextWriterFormat\u003C\u0027T, \u0027Result\u003E \nTextWriterFormat\u003C\u0027T, \u0027Result\u003E \nPrintf.TextWriterFormat\u003C\u0027T\u003E \nTextWriterFormat\u003C\u0027T\u003E \nPrintf.bprintf \nbprintf \nPrintf.fprintf \nfprintf \nPrintf.fprintfn \nfprintfn \nPrintf.eprintf \neprintf \nPrintf.eprintfn \neprintfn \nPrintf.printf \nprintf \nPrintf.printfn \nprintfn \nPrintf.sprintf \nsprintf \nPrintf.kbprintf \nkbprintf \nPrintf.kfprintf \nkfprintf \nPrintf.kprintf \nkprintf \nPrintf.ksprintf \nksprintf \nPrintf.failwithf \nfailwithf","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#bprintf","title":"Printf.bprintf","content":"Printf.bprintf \nbprintf \nPrint to a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.text.stringbuilder\u0022\u003EStringBuilder\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#fprintf","title":"Printf.fprintf","content":"Printf.fprintf \nfprintf \nPrint to a text writer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#fprintfn","title":"Printf.fprintfn","content":"Printf.fprintfn \nfprintfn \nPrint to a text writer, adding a newline","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#eprintf","title":"Printf.eprintf","content":"Printf.eprintf \neprintf \nFormatted printing to stderr","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#eprintfn","title":"Printf.eprintfn","content":"Printf.eprintfn \neprintfn \nFormatted printing to stderr, adding a newline ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#printf","title":"Printf.printf","content":"Printf.printf \nprintf \nFormatted printing to stdout","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#printfn","title":"Printf.printfn","content":"Printf.printfn \nprintfn \nFormatted printing to stdout, adding a newline.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#sprintf","title":"Printf.sprintf","content":"Printf.sprintf \nsprintf \nPrint to a string via an internal string buffer and return\n the result as a string. Helper printers must return strings.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#kbprintf","title":"Printf.kbprintf","content":"Printf.kbprintf \nkbprintf \nbprintf, but call the given \u0027final\u0027 function to generate the result.\n See \u003Ccode\u003Ekprintf\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#kfprintf","title":"Printf.kfprintf","content":"Printf.kfprintf \nkfprintf \nfprintf, but call the given \u0027final\u0027 function to generate the result.\n See \u003Ccode\u003Ekprintf\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#kprintf","title":"Printf.kprintf","content":"Printf.kprintf \nkprintf \nprintf, but call the given \u0027final\u0027 function to generate the result.\n For example, these let the printing force a flush after all output has\n been entered onto the channel, but not before. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#ksprintf","title":"Printf.ksprintf","content":"Printf.ksprintf \nksprintf \nsprintf, but call the given \u0027final\u0027 function to generate the result.\n See \u003Ccode\u003Ekprintf\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html#failwithf","title":"Printf.failwithf","content":"Printf.failwithf \nfailwithf \nPrint to a string buffer and raise an exception with the given\n result. Helper printers must return strings.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-builderformat-2.html","title":"BuilderFormat\u003C\u0027T, \u0027Result\u003E","content":"BuilderFormat\u003C\u0027T, \u0027Result\u003E \nRepresents a statically-analyzed format associated with writing to a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.text.stringbuilder\u0022\u003EStringBuilder\u003C/a\u003E. The first type parameter indicates the\n arguments of the format operation and the last the overall return type. \nBuilderFormat\u003C\u0027T, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nBuilderFormat\u003C\u0027T, \u0027Result\u003E.Captures \nCaptures \nBuilderFormat\u003C\u0027T, \u0027Result\u003E.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-builderformat-2.html#CaptureTypes","title":"BuilderFormat\u003C\u0027T, \u0027Result\u003E.CaptureTypes","content":"BuilderFormat\u003C\u0027T, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nThe capture types associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-builderformat-2.html#Captures","title":"BuilderFormat\u003C\u0027T, \u0027Result\u003E.Captures","content":"BuilderFormat\u003C\u0027T, \u0027Result\u003E.Captures \nCaptures \nThe captures associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-builderformat-2.html#Value","title":"BuilderFormat\u003C\u0027T, \u0027Result\u003E.Value","content":"BuilderFormat\u003C\u0027T, \u0027Result\u003E.Value \nValue \nThe raw text of the format string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-builderformat-1.html","title":"BuilderFormat\u003C\u0027T\u003E","content":"BuilderFormat\u003C\u0027T\u003E \nRepresents a statically-analyzed format associated with writing to a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.text.stringbuilder\u0022\u003EStringBuilder\u003C/a\u003E. The type parameter indicates the\n arguments and return type of the format operation. \nBuilderFormat\u003C\u0027T\u003E.CaptureTypes \nCaptureTypes \nBuilderFormat\u003C\u0027T\u003E.Captures \nCaptures \nBuilderFormat\u003C\u0027T\u003E.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-builderformat-1.html#CaptureTypes","title":"BuilderFormat\u003C\u0027T\u003E.CaptureTypes","content":"BuilderFormat\u003C\u0027T\u003E.CaptureTypes \nCaptureTypes \nThe capture types associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-builderformat-1.html#Captures","title":"BuilderFormat\u003C\u0027T\u003E.Captures","content":"BuilderFormat\u003C\u0027T\u003E.Captures \nCaptures \nThe captures associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-builderformat-1.html#Value","title":"BuilderFormat\u003C\u0027T\u003E.Value","content":"BuilderFormat\u003C\u0027T\u003E.Value \nValue \nThe raw text of the format string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-stringformat-2.html","title":"StringFormat\u003C\u0027T, \u0027Result\u003E","content":"StringFormat\u003C\u0027T, \u0027Result\u003E \n\u003Cpre\u003ERepresents a statically-analyzed format when formatting builds a string. The first type parameter indicates the\n arguments of the format operation and the last the overall return type.\u003C/pre\u003E \nStringFormat\u003C\u0027T, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nStringFormat\u003C\u0027T, \u0027Result\u003E.Captures \nCaptures \nStringFormat\u003C\u0027T, \u0027Result\u003E.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-stringformat-2.html#CaptureTypes","title":"StringFormat\u003C\u0027T, \u0027Result\u003E.CaptureTypes","content":"StringFormat\u003C\u0027T, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nThe capture types associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-stringformat-2.html#Captures","title":"StringFormat\u003C\u0027T, \u0027Result\u003E.Captures","content":"StringFormat\u003C\u0027T, \u0027Result\u003E.Captures \nCaptures \nThe captures associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-stringformat-2.html#Value","title":"StringFormat\u003C\u0027T, \u0027Result\u003E.Value","content":"StringFormat\u003C\u0027T, \u0027Result\u003E.Value \nValue \nThe raw text of the format string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-stringformat-1.html","title":"StringFormat\u003C\u0027T\u003E","content":"StringFormat\u003C\u0027T\u003E \n\u003Cpre\u003ERepresents a statically-analyzed format when formatting builds a string. The type parameter indicates the\n arguments and return type of the format operation.\u003C/pre\u003E \nStringFormat\u003C\u0027T\u003E.CaptureTypes \nCaptureTypes \nStringFormat\u003C\u0027T\u003E.Captures \nCaptures \nStringFormat\u003C\u0027T\u003E.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-stringformat-1.html#CaptureTypes","title":"StringFormat\u003C\u0027T\u003E.CaptureTypes","content":"StringFormat\u003C\u0027T\u003E.CaptureTypes \nCaptureTypes \nThe capture types associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-stringformat-1.html#Captures","title":"StringFormat\u003C\u0027T\u003E.Captures","content":"StringFormat\u003C\u0027T\u003E.Captures \nCaptures \nThe captures associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-stringformat-1.html#Value","title":"StringFormat\u003C\u0027T\u003E.Value","content":"StringFormat\u003C\u0027T\u003E.Value \nValue \nThe raw text of the format string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-textwriterformat-2.html","title":"TextWriterFormat\u003C\u0027T, \u0027Result\u003E","content":"TextWriterFormat\u003C\u0027T, \u0027Result\u003E \nRepresents a statically-analyzed format associated with writing to a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.io.textwriter\u0022\u003ETextWriter\u003C/a\u003E. The first type parameter indicates the\n arguments of the format operation and the last the overall return type. \nTextWriterFormat\u003C\u0027T, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nTextWriterFormat\u003C\u0027T, \u0027Result\u003E.Captures \nCaptures \nTextWriterFormat\u003C\u0027T, \u0027Result\u003E.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-textwriterformat-2.html#CaptureTypes","title":"TextWriterFormat\u003C\u0027T, \u0027Result\u003E.CaptureTypes","content":"TextWriterFormat\u003C\u0027T, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nThe capture types associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-textwriterformat-2.html#Captures","title":"TextWriterFormat\u003C\u0027T, \u0027Result\u003E.Captures","content":"TextWriterFormat\u003C\u0027T, \u0027Result\u003E.Captures \nCaptures \nThe captures associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-textwriterformat-2.html#Value","title":"TextWriterFormat\u003C\u0027T, \u0027Result\u003E.Value","content":"TextWriterFormat\u003C\u0027T, \u0027Result\u003E.Value \nValue \nThe raw text of the format string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-textwriterformat-1.html","title":"TextWriterFormat\u003C\u0027T\u003E","content":"TextWriterFormat\u003C\u0027T\u003E \nRepresents a statically-analyzed format associated with writing to a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.io.textwriter\u0022\u003ETextWriter\u003C/a\u003E. The type parameter indicates the\n arguments and return type of the format operation. \nTextWriterFormat\u003C\u0027T\u003E.CaptureTypes \nCaptureTypes \nTextWriterFormat\u003C\u0027T\u003E.Captures \nCaptures \nTextWriterFormat\u003C\u0027T\u003E.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-textwriterformat-1.html#CaptureTypes","title":"TextWriterFormat\u003C\u0027T\u003E.CaptureTypes","content":"TextWriterFormat\u003C\u0027T\u003E.CaptureTypes \nCaptureTypes \nThe capture types associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-textwriterformat-1.html#Captures","title":"TextWriterFormat\u003C\u0027T\u003E.Captures","content":"TextWriterFormat\u003C\u0027T\u003E.Captures \nCaptures \nThe captures associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule-textwriterformat-1.html#Value","title":"TextWriterFormat\u003C\u0027T\u003E.Value","content":"TextWriterFormat\u003C\u0027T\u003E.Value \nValue \nThe raw text of the format string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html","title":"Result","content":"Result \nContains operations for working with values of type \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpresult-2.html\u0022\u003EResult\u003C/a\u003E. \nResult.map \nmap \nResult.mapError \nmapError \nResult.bind \nbind \nResult.isOk \nisOk \nResult.isError \nisError \nResult.defaultValue \ndefaultValue \nResult.defaultWith \ndefaultWith \nResult.count \ncount \nResult.fold \nfold \nResult.foldBack \nfoldBack \nResult.exists \nexists \nResult.forall \nforall \nResult.contains \ncontains \nResult.iter \niter \nResult.toArray \ntoArray \nResult.toList \ntoList \nResult.toOption \ntoOption \nResult.toValueOption \ntoValueOption","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#map","title":"Result.map","content":"Result.map \nmap \n\u003Ccode\u003Emap f inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with Error e -\u0026gt; Error e | Ok x -\u0026gt; Ok (f x)\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#mapError","title":"Result.mapError","content":"Result.mapError \nmapError \n\u003Ccode\u003Emap f inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with Error x -\u0026gt; Error (f x) | Ok v -\u0026gt; Ok v\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#bind","title":"Result.bind","content":"Result.bind \nbind \n\u003Ccode\u003Ebind f inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with Error e -\u0026gt; Error e | Ok x -\u0026gt; f x\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#isOk","title":"Result.isOk","content":"Result.isOk \nisOk \nReturns true if the result is Ok.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#isError","title":"Result.isError","content":"Result.isError \nisError \nReturns true if the result is Error.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#defaultValue","title":"Result.defaultValue","content":"Result.defaultValue \ndefaultValue \nGets the value of the result if the result is \u003Ccode\u003EOk\u003C/code\u003E, otherwise returns the specified default value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#defaultWith","title":"Result.defaultWith","content":"Result.defaultWith \ndefaultWith \nGets the value of the result if the result is \u003Ccode\u003EOk\u003C/code\u003E, otherwise evaluates \u003Cspan class=\u0022fsdocs-param-name\u0022\u003EdefThunk\u003C/span\u003E and returns the result. \n\u003Cspan class=\u0022fsdocs-param-name\u0022\u003EdefThunk\u003C/span\u003E is not evaluated unless \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eresult\u003C/span\u003E is \u003Ccode\u003EError\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#count","title":"Result.count","content":"Result.count \ncount \n\u003Ccode\u003Ecount inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with Error _ -\u0026gt; 0 | Ok _ -\u0026gt; 1\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#fold","title":"Result.fold","content":"Result.fold \nfold \n\u003Ccode\u003Efold f s inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with Error _ -\u0026gt; s | Ok x -\u0026gt; f s x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#foldBack","title":"Result.foldBack","content":"Result.foldBack \nfoldBack \n\u003Ccode\u003EfoldBack f inp s\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with Error _ -\u0026gt; s | Ok x -\u0026gt; f x s\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#exists","title":"Result.exists","content":"Result.exists \nexists \n\u003Ccode\u003Eexists p inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with Error _ -\u0026gt; false | Ok x -\u0026gt; p x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#forall","title":"Result.forall","content":"Result.forall \nforall \n\u003Ccode\u003Eforall p inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with Error _ -\u0026gt; true | Ok x -\u0026gt; p x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#contains","title":"Result.contains","content":"Result.contains \ncontains \nEvaluates to true if \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Eresult\u003C/span\u003E is \u003Ccode\u003EOk\u003C/code\u003E and its value is equal to \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Evalue\u003C/span\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#iter","title":"Result.iter","content":"Result.iter \niter \n\u003Ccode\u003Eiter f inp\u003C/code\u003E executes \u003Ccode\u003Ematch inp with Error _ -\u0026gt; () | Ok x -\u0026gt; f x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#toArray","title":"Result.toArray","content":"Result.toArray \ntoArray \nConvert the result to an array of length 0 or 1.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#toList","title":"Result.toList","content":"Result.toList \ntoList \nConvert the result to a list of length 0 or 1.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#toOption","title":"Result.toOption","content":"Result.toOption \ntoOption \nConvert the result to an Option value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-resultmodule.html#toValueOption","title":"Result.toValueOption","content":"Result.toValueOption \ntoValueOption \nConvert the result to an Option value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html","title":"String","content":"String \nFunctional programming operators for string processing.  Further string operations\n are available via the member functions on strings and other functionality in\n  \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.string\u0022\u003ESystem.String\u003C/a\u003E\n and \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.text.regularexpressions\u0022\u003ESystem.Text.RegularExpressions\u003C/a\u003E types.\n  \nString.collect \ncollect \nString.concat \nconcat \nString.exists \nexists \nString.filter \nfilter \nString.forall \nforall \nString.init \ninit \nString.iter \niter \nString.iteri \niteri \nString.length \nlength \nString.map \nmap \nString.mapi \nmapi \nString.replicate \nreplicate","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#collect","title":"String.collect","content":"String.collect \ncollect \nBuilds a new string whose characters are the results of applying the function \u003Ccode\u003Emapping\u003C/code\u003E\n to each of the characters of the input string and concatenating the resulting\n strings.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#concat","title":"String.concat","content":"String.concat \nconcat \nReturns a new string made by concatenating the given strings\n with separator \u003Ccode\u003Esep\u003C/code\u003E, that is \u003Ccode\u003Ea1 \u002B sep \u002B ... \u002B sep \u002B aN\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#exists","title":"String.exists","content":"String.exists \nexists \nTests if any character of the string satisfies the given predicate.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#filter","title":"String.filter","content":"String.filter \nfilter \nBuilds a new string containing only the characters of the input string\n for which the given predicate returns \u0022true\u0022. \nReturns an empty string if the input string is null","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#forall","title":"String.forall","content":"String.forall \nforall \nTests if all characters in the string satisfy the given predicate.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#init","title":"String.init","content":"String.init \ninit \nBuilds a new string whose characters are the results of applying the function \u003Ccode\u003Emapping\u003C/code\u003E\n to each index from \u003Ccode\u003E0\u003C/code\u003E to \u003Ccode\u003Ecount-1\u003C/code\u003E and concatenating the resulting\n strings.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#iter","title":"String.iter","content":"String.iter \niter \nApplies the function \u003Ccode\u003Eaction\u003C/code\u003E to each character in the string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#iteri","title":"String.iteri","content":"String.iteri \niteri \nApplies the function \u003Ccode\u003Eaction\u003C/code\u003E to the index of each character in the string and the\n character itself.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#length","title":"String.length","content":"String.length \nlength \nReturns the length of the string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#map","title":"String.map","content":"String.map \nmap \nBuilds a new string whose characters are the results of applying the function \u003Ccode\u003Emapping\u003C/code\u003E\n to each of the characters of the input string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#mapi","title":"String.mapi","content":"String.mapi \nmapi \nBuilds a new string whose characters are the results of applying the function \u003Ccode\u003Emapping\u003C/code\u003E\n to each character and index of the input string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-stringmodule.html#replicate","title":"String.replicate","content":"String.replicate \nreplicate \nReturns a string by concatenating \u003Ccode\u003Ecount\u003C/code\u003E instances of \u003Ccode\u003Estr\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html","title":"ValueOption","content":"ValueOption \nContains operations for working with value options. \nValueOption.isSome \nisSome \nValueOption.isNone \nisNone \nValueOption.defaultValue \ndefaultValue \nValueOption.defaultWith \ndefaultWith \nValueOption.orElse \norElse \nValueOption.orElseWith \norElseWith \nValueOption.get \nget \nValueOption.count \ncount \nValueOption.fold \nfold \nValueOption.foldBack \nfoldBack \nValueOption.exists \nexists \nValueOption.forall \nforall \nValueOption.contains \ncontains \nValueOption.iter \niter \nValueOption.map \nmap \nValueOption.map2 \nmap2 \nValueOption.map3 \nmap3 \nValueOption.bind \nbind \nValueOption.flatten \nflatten \nValueOption.filter \nfilter \nValueOption.toArray \ntoArray \nValueOption.toList \ntoList \nValueOption.toNullable \ntoNullable \nValueOption.ofNullable \nofNullable \nValueOption.ofObj \nofObj \nValueOption.toObj \ntoObj \nValueOption.ofOption \nofOption \nValueOption.toOption \ntoOption","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#isSome","title":"ValueOption.isSome","content":"ValueOption.isSome \nisSome \nReturns true if the value option is not ValueNone.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#isNone","title":"ValueOption.isNone","content":"ValueOption.isNone \nisNone \nReturns true if the value option is ValueNone.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#defaultValue","title":"ValueOption.defaultValue","content":"ValueOption.defaultValue \ndefaultValue \nGets the value of the value option if the option is \u003Ccode\u003EValueSome\u003C/code\u003E, otherwise returns the specified default value. \nIdentical to the built-in \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/defaultarg\u0022\u003EdefaultArg\u003C/a\u003E operator, except with the arguments swapped.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#defaultWith","title":"ValueOption.defaultWith","content":"ValueOption.defaultWith \ndefaultWith \nGets the value of the voption if the voption is \u003Ccode\u003EValueSome\u003C/code\u003E, otherwise evaluates \u003Cspan class=\u0022fsdocs-param-name\u0022\u003EdefThunk\u003C/span\u003E and returns the result. \n\u003Cspan class=\u0022fsdocs-param-name\u0022\u003EdefThunk\u003C/span\u003E is not evaluated unless \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Evoption\u003C/span\u003E is \u003Ccode\u003EValueNone\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#orElse","title":"ValueOption.orElse","content":"ValueOption.orElse \norElse \nReturns \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Evoption\u003C/span\u003E if it is \u003Ccode\u003ESome\u003C/code\u003E, otherwise returns \u003Cspan class=\u0022fsdocs-param-name\u0022\u003EifNone\u003C/span\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#orElseWith","title":"ValueOption.orElseWith","content":"ValueOption.orElseWith \norElseWith \nReturns \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Evoption\u003C/span\u003E if it is \u003Ccode\u003ESome\u003C/code\u003E, otherwise evaluates \u003Cspan class=\u0022fsdocs-param-name\u0022\u003EifNoneThunk\u003C/span\u003E and returns the result. \n\u003Cspan class=\u0022fsdocs-param-name\u0022\u003EifNoneThunk\u003C/span\u003E is not evaluated unless \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Evoption\u003C/span\u003E is \u003Ccode\u003EValueNone\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#get","title":"ValueOption.get","content":"ValueOption.get \nget \nGets the value associated with the option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#count","title":"ValueOption.count","content":"ValueOption.count \ncount \n\u003Ccode\u003Ecount inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; 0 | ValueSome _ -\u0026gt; 1\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#fold","title":"ValueOption.fold","content":"ValueOption.fold \nfold \n\u003Ccode\u003Efold f s inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; s | ValueSome x -\u0026gt; f s x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#foldBack","title":"ValueOption.foldBack","content":"ValueOption.foldBack \nfoldBack \n\u003Ccode\u003Efold f inp s\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; s | ValueSome x -\u0026gt; f x s\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#exists","title":"ValueOption.exists","content":"ValueOption.exists \nexists \n\u003Ccode\u003Eexists p inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; false | ValueSome x -\u0026gt; p x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#forall","title":"ValueOption.forall","content":"ValueOption.forall \nforall \n\u003Ccode\u003Eforall p inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; true | ValueSome x -\u0026gt; p x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#contains","title":"ValueOption.contains","content":"ValueOption.contains \ncontains \nEvaluates to true if \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Evoption\u003C/span\u003E is \u003Ccode\u003EValueSome\u003C/code\u003E and its value is equal to \u003Cspan class=\u0022fsdocs-param-name\u0022\u003Evalue\u003C/span\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#iter","title":"ValueOption.iter","content":"ValueOption.iter \niter \n\u003Ccode\u003Eiter f inp\u003C/code\u003E executes \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; () | ValueSome x -\u0026gt; f x\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#map","title":"ValueOption.map","content":"ValueOption.map \nmap \n\u003Ccode\u003Emap f inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; ValueNone | ValueSome x -\u0026gt; ValueSome (f x)\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#map2","title":"ValueOption.map2","content":"ValueOption.map2 \nmap2 \n\u003Ccode\u003Emap f voption1 voption2\u003C/code\u003E evaluates to \u003Ccode\u003Ematch voption1, voption2 with ValueSome x, ValueSome y -\u0026gt; ValueSome (f x y) | _ -\u0026gt; ValueNone\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#map3","title":"ValueOption.map3","content":"ValueOption.map3 \nmap3 \n\u003Ccode\u003Emap f voption1 voption2 voption3\u003C/code\u003E evaluates to \u003Ccode\u003Ematch voption1, voption2, voption3 with ValueSome x, ValueSome y, ValueSome z -\u0026gt; ValueSome (f x y z) | _ -\u0026gt; ValueNone\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#bind","title":"ValueOption.bind","content":"ValueOption.bind \nbind \n\u003Ccode\u003Ebind f inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; ValueNone | ValueSome x -\u0026gt; f x\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#flatten","title":"ValueOption.flatten","content":"ValueOption.flatten \nflatten \n\u003Ccode\u003Eflatten inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; ValueNone | ValueSome x -\u0026gt; x\u003C/code\u003E \n\u003Ccode\u003Eflatten\u003C/code\u003E is equivalent to \u003Ccode\u003Ebind id\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#filter","title":"ValueOption.filter","content":"ValueOption.filter \nfilter \n\u003Ccode\u003Efilter f inp\u003C/code\u003E evaluates to \u003Ccode\u003Ematch inp with ValueNone -\u0026gt; ValueNone | ValueSome x -\u0026gt; if f x then ValueSome x else ValueNone\u003C/code\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#toArray","title":"ValueOption.toArray","content":"ValueOption.toArray \ntoArray \nConvert the value option to an array of length 0 or 1.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#toList","title":"ValueOption.toList","content":"ValueOption.toList \ntoList \nConvert the value option to a list of length 0 or 1.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#toNullable","title":"ValueOption.toNullable","content":"ValueOption.toNullable \ntoNullable \nConvert the value option to a Nullable value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#ofNullable","title":"ValueOption.ofNullable","content":"ValueOption.ofNullable \nofNullable \nConvert a Nullable value to a value option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#ofObj","title":"ValueOption.ofObj","content":"ValueOption.ofObj \nofObj \nConvert a potentially null value to a value option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#toObj","title":"ValueOption.toObj","content":"ValueOption.toObj \ntoObj \nConvert an option to a potentially null value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#ofOption","title":"ValueOption.ofOption","content":"ValueOption.ofOption \nofOption \nConvert an option to a value option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-valueoption.html#toOption","title":"ValueOption.toOption","content":"ValueOption.toOption \ntoOption \nConvert a value option to an option.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-abstractclassattribute.html","title":"AbstractClassAttribute","content":"AbstractClassAttribute \nAdding this attribute to class definition makes it abstract, which means it need not\n implement all its methods. Instances of abstract classes may not be constructed directly. \nAbstractClassAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-abstractclassattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"AbstractClassAttribute.\u0060\u0060.ctor\u0060\u0060","content":"AbstractClassAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-allownullliteralattribute.html","title":"AllowNullLiteralAttribute","content":"AllowNullLiteralAttribute \nAdding this attribute to a type lets the \u0027null\u0027 literal be used for the type \n within F# code. This attribute may only be added to F#-defined class or \n interface types. \nAllowNullLiteralAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAllowNullLiteralAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAllowNullLiteralAttribute.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-allownullliteralattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"AllowNullLiteralAttribute.\u0060\u0060.ctor\u0060\u0060","content":"AllowNullLiteralAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute with the specified value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-allownullliteralattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"AllowNullLiteralAttribute.\u0060\u0060.ctor\u0060\u0060","content":"AllowNullLiteralAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-allownullliteralattribute.html#Value","title":"AllowNullLiteralAttribute.Value","content":"AllowNullLiteralAttribute.Value \nValue \nThe value of the attribute, indicating whether the type allows the null literal or not","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-autoopenattribute.html","title":"AutoOpenAttribute","content":"AutoOpenAttribute \nIndicates a construct is automatically opened when brought into scope through\n an assembly reference or then opening of the containing namespace or module. \nWhen applied to an assembly, this attribute must be given a string\n argument, and this indicates a valid module or namespace in that assembly. Source\n code files compiled with a reference to this assembly are processed in an environment\n where the given path is automatically opened.\n\n When applied to a type or module within an assembly, then the attribute must not be given any arguments, and\n the type or module is implicitly opened when its enclosing namespace or module is opened.\n  \nAutoOpenAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAutoOpenAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAutoOpenAttribute.Path \nPath","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-autoopenattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"AutoOpenAttribute.\u0060\u0060.ctor\u0060\u0060","content":"AutoOpenAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an attribute used to mark a namespace or module path to be \u0027automatically opened\u0027 when an assembly is referenced","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-autoopenattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"AutoOpenAttribute.\u0060\u0060.ctor\u0060\u0060","content":"AutoOpenAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an attribute used to mark a module as \u0027automatically opened\u0027 when the enclosing namespace is opened","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-autoopenattribute.html#Path","title":"AutoOpenAttribute.Path","content":"AutoOpenAttribute.Path \nPath \n\u003Cpre\u003EIndicates the namespace or module to be automatically opened when an assembly is referenced\n or an enclosing module opened.\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-autoserializableattribute.html","title":"AutoSerializableAttribute","content":"AutoSerializableAttribute \nAdding this attribute to a type with value \u0027false\u0027 disables the behaviour where F# makes the\n type Serializable by default. \nAutoSerializableAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAutoSerializableAttribute.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-autoserializableattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"AutoSerializableAttribute.\u0060\u0060.ctor\u0060\u0060","content":"AutoSerializableAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-autoserializableattribute.html#Value","title":"AutoSerializableAttribute.Value","content":"AutoSerializableAttribute.Value \nValue \nThe value of the attribute, indicating whether the type is automatically marked serializable or not","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-clieventattribute.html","title":"CLIEventAttribute","content":"CLIEventAttribute \nAdding this attribute to a property with event type causes it to be compiled with as a CLI\n metadata event, through a syntactic translation to a pair of \u0027add_EventName\u0027 and \n \u0027remove_EventName\u0027 methods. \nCLIEventAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-clieventattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CLIEventAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CLIEventAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-climutableattribute.html","title":"CLIMutableAttribute","content":"CLIMutableAttribute \nAdding this attribute to a record type causes it to be compiled to a CLI representation\n with a default constructor with property getters and setters. \nCLIMutableAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-climutableattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CLIMutableAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CLIMutableAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-2.html","title":"Choice\u003C\u0027T1, \u0027T2\u003E","content":"Choice\u003C\u0027T1, \u0027T2\u003E \nHelper types for active patterns with 2 choices. \nChoice\u003C\u0027T1, \u0027T2\u003E.IsChoice2Of2 \nIsChoice2Of2 \nChoice\u003C\u0027T1, \u0027T2\u003E.IsChoice1Of2 \nIsChoice1Of2 \nChoice\u003C\u0027T1, \u0027T2\u003E.Choice1Of2 \nChoice1Of2 \nChoice\u003C\u0027T1, \u0027T2\u003E.Choice2Of2 \nChoice2Of2","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-2.html#IsChoice2Of2","title":"Choice\u003C\u0027T1, \u0027T2\u003E.IsChoice2Of2","content":"Choice\u003C\u0027T1, \u0027T2\u003E.IsChoice2Of2 \nIsChoice2Of2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-2.html#IsChoice1Of2","title":"Choice\u003C\u0027T1, \u0027T2\u003E.IsChoice1Of2","content":"Choice\u003C\u0027T1, \u0027T2\u003E.IsChoice1Of2 \nIsChoice1Of2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-2.html#Choice1Of2","title":"Choice\u003C\u0027T1, \u0027T2\u003E.Choice1Of2","content":"Choice\u003C\u0027T1, \u0027T2\u003E.Choice1Of2 \nChoice1Of2 \nChoice 1 of 2 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-2.html#Choice2Of2","title":"Choice\u003C\u0027T1, \u0027T2\u003E.Choice2Of2","content":"Choice\u003C\u0027T1, \u0027T2\u003E.Choice2Of2 \nChoice2Of2 \nChoice 2 of 2 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-3.html","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E \nHelper types for active patterns with 3 choices. \nChoice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.IsChoice1Of3 \nIsChoice1Of3 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.IsChoice3Of3 \nIsChoice3Of3 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.IsChoice2Of3 \nIsChoice2Of3 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Choice1Of3 \nChoice1Of3 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Choice2Of3 \nChoice2Of3 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Choice3Of3 \nChoice3Of3","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-3.html#IsChoice1Of3","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.IsChoice1Of3","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.IsChoice1Of3 \nIsChoice1Of3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-3.html#IsChoice3Of3","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.IsChoice3Of3","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.IsChoice3Of3 \nIsChoice3Of3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-3.html#IsChoice2Of3","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.IsChoice2Of3","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.IsChoice2Of3 \nIsChoice2Of3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-3.html#Choice1Of3","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Choice1Of3","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Choice1Of3 \nChoice1Of3 \nChoice 1 of 3 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-3.html#Choice2Of3","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Choice2Of3","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Choice2Of3 \nChoice2Of3 \nChoice 2 of 3 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-3.html#Choice3Of3","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Choice3Of3","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Choice3Of3 \nChoice3Of3 \nChoice 3 of 3 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-4.html","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E \nHelper types for active patterns with 4 choices. \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice3Of4 \nIsChoice3Of4 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice4Of4 \nIsChoice4Of4 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice2Of4 \nIsChoice2Of4 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice1Of4 \nIsChoice1Of4 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice1Of4 \nChoice1Of4 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice2Of4 \nChoice2Of4 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice3Of4 \nChoice3Of4 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice4Of4 \nChoice4Of4","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-4.html#IsChoice3Of4","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice3Of4","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice3Of4 \nIsChoice3Of4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-4.html#IsChoice4Of4","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice4Of4","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice4Of4 \nIsChoice4Of4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-4.html#IsChoice2Of4","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice2Of4","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice2Of4 \nIsChoice2Of4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-4.html#IsChoice1Of4","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice1Of4","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.IsChoice1Of4 \nIsChoice1Of4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-4.html#Choice1Of4","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice1Of4","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice1Of4 \nChoice1Of4 \nChoice 1 of 4 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-4.html#Choice2Of4","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice2Of4","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice2Of4 \nChoice2Of4 \nChoice 2 of 4 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-4.html#Choice3Of4","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice3Of4","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice3Of4 \nChoice3Of4 \nChoice 3 of 4 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-4.html#Choice4Of4","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice4Of4","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Choice4Of4 \nChoice4Of4 \nChoice 4 of 4 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E \nHelper types for active patterns with 5 choices. \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice2Of5 \nIsChoice2Of5 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice3Of5 \nIsChoice3Of5 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice5Of5 \nIsChoice5Of5 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice1Of5 \nIsChoice1Of5 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice4Of5 \nIsChoice4Of5 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice1Of5 \nChoice1Of5 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice2Of5 \nChoice2Of5 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice3Of5 \nChoice3Of5 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice4Of5 \nChoice4Of5 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice5Of5 \nChoice5Of5","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#IsChoice2Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice2Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice2Of5 \nIsChoice2Of5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#IsChoice3Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice3Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice3Of5 \nIsChoice3Of5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#IsChoice5Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice5Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice5Of5 \nIsChoice5Of5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#IsChoice1Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice1Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice1Of5 \nIsChoice1Of5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#IsChoice4Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice4Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.IsChoice4Of5 \nIsChoice4Of5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#Choice1Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice1Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice1Of5 \nChoice1Of5 \nChoice 1 of 5 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#Choice2Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice2Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice2Of5 \nChoice2Of5 \nChoice 2 of 5 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#Choice3Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice3Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice3Of5 \nChoice3Of5 \nChoice 3 of 5 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#Choice4Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice4Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice4Of5 \nChoice4Of5 \nChoice 4 of 5 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-5.html#Choice5Of5","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice5Of5","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Choice5Of5 \nChoice5Of5 \nChoice 5 of 5 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E \nHelper types for active patterns with 6 choices. \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice4Of6 \nIsChoice4Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice2Of6 \nIsChoice2Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice6Of6 \nIsChoice6Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice3Of6 \nIsChoice3Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice1Of6 \nIsChoice1Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice5Of6 \nIsChoice5Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice1Of6 \nChoice1Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice2Of6 \nChoice2Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice3Of6 \nChoice3Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice4Of6 \nChoice4Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice5Of6 \nChoice5Of6 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice6Of6 \nChoice6Of6","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#IsChoice4Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice4Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice4Of6 \nIsChoice4Of6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#IsChoice2Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice2Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice2Of6 \nIsChoice2Of6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#IsChoice6Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice6Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice6Of6 \nIsChoice6Of6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#IsChoice3Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice3Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice3Of6 \nIsChoice3Of6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#IsChoice1Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice1Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice1Of6 \nIsChoice1Of6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#IsChoice5Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice5Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.IsChoice5Of6 \nIsChoice5Of6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#Choice1Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice1Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice1Of6 \nChoice1Of6 \nChoice 1 of 6 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#Choice2Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice2Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice2Of6 \nChoice2Of6 \nChoice 2 of 6 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#Choice3Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice3Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice3Of6 \nChoice3Of6 \nChoice 3 of 6 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#Choice4Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice4Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice4Of6 \nChoice4Of6 \nChoice 4 of 6 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#Choice5Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice5Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice5Of6 \nChoice5Of6 \nChoice 5 of 6 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-6.html#Choice6Of6","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice6Of6","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Choice6Of6 \nChoice6Of6 \nChoice 6 of 6 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E \nHelper types for active patterns with 7 choices. \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice5Of7 \nIsChoice5Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice7Of7 \nIsChoice7Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice4Of7 \nIsChoice4Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice2Of7 \nIsChoice2Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice1Of7 \nIsChoice1Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice6Of7 \nIsChoice6Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice3Of7 \nIsChoice3Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice1Of7 \nChoice1Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice2Of7 \nChoice2Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice3Of7 \nChoice3Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice4Of7 \nChoice4Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice5Of7 \nChoice5Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice6Of7 \nChoice6Of7 \nChoice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice7Of7 \nChoice7Of7","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#IsChoice5Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice5Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice5Of7 \nIsChoice5Of7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#IsChoice7Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice7Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice7Of7 \nIsChoice7Of7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#IsChoice4Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice4Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice4Of7 \nIsChoice4Of7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#IsChoice2Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice2Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice2Of7 \nIsChoice2Of7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#IsChoice1Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice1Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice1Of7 \nIsChoice1Of7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#IsChoice6Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice6Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice6Of7 \nIsChoice6Of7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#IsChoice3Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice3Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.IsChoice3Of7 \nIsChoice3Of7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#Choice1Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice1Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice1Of7 \nChoice1Of7 \nChoice 1 of 7 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#Choice2Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice2Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice2Of7 \nChoice2Of7 \nChoice 2 of 7 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#Choice3Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice3Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice3Of7 \nChoice3Of7 \nChoice 3 of 7 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#Choice4Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice4Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice4Of7 \nChoice4Of7 \nChoice 4 of 7 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#Choice5Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice5Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice5Of7 \nChoice5Of7 \nChoice 5 of 7 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#Choice6Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice6Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice6Of7 \nChoice6Of7 \nChoice 6 of 7 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpchoice-7.html#Choice7Of7","title":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice7Of7","content":"Choice\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Choice7Of7 \nChoice7Of7 \nChoice 7 of 7 choices","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-classattribute.html","title":"ClassAttribute","content":"ClassAttribute \nAdding this attribute to a type causes it to be represented using a CLI class. \nClassAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-classattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"ClassAttribute.\u0060\u0060.ctor\u0060\u0060","content":"ClassAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-comparisonconditionalonattribute.html","title":"ComparisonConditionalOnAttribute","content":"ComparisonConditionalOnAttribute \nThis attribute is used to indicate a generic container type satisfies the F# \u0027comparison\u0027 \n constraint only if a generic argument also satisfies this constraint. \nFor example, adding \n this attribute to parameter \u0027T on a type definition C\u003C\u0027T\u003E means that a type C\u003CX\u003E only supports \n comparison if the type X also supports comparison and all other conditions for C\u003CX\u003E to support \n comparison are also met. The type C\u003C\u0027T\u003E can still be used with other type arguments, but a type such \n as C\u003C(int -\u003E int)\u003E will not support comparison because the type (int -\u003E int) is an F# function type \n and does not support comparison.\n\n This attribute will be ignored if it is used on the generic parameters of functions or methods.\n  \nComparisonConditionalOnAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-comparisonconditionalonattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"ComparisonConditionalOnAttribute.\u0060\u0060.ctor\u0060\u0060","content":"ComparisonConditionalOnAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationargumentcountsattribute.html","title":"CompilationArgumentCountsAttribute","content":"CompilationArgumentCountsAttribute \nThis attribute is generated automatically by the F# compiler to tag functions and members \n that accept a partial application of some of their arguments and return a residual function.\n  \nCompilationArgumentCountsAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompilationArgumentCountsAttribute.Counts \nCounts","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationargumentcountsattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CompilationArgumentCountsAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CompilationArgumentCountsAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationargumentcountsattribute.html#Counts","title":"CompilationArgumentCountsAttribute.Counts","content":"CompilationArgumentCountsAttribute.Counts \nCounts \nIndicates the number of arguments in each argument group ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html","title":"CompilationMappingAttribute","content":"CompilationMappingAttribute \nThis attribute is inserted automatically by the F# compiler to tag types \n and methods in the generated CLI code with flags indicating the correspondence \n with original source constructs. \nThis attribute is used by the functions in the \n FSharp.Reflection namespace to reverse-map compiled constructs to \n their original forms. It is not intended for use from user code. \nCompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompilationMappingAttribute.SourceConstructFlags \nSourceConstructFlags \nCompilationMappingAttribute.ResourceName \nResourceName \nCompilationMappingAttribute.VariantNumber \nVariantNumber \nCompilationMappingAttribute.SequenceNumber \nSequenceNumber \nCompilationMappingAttribute.TypeDefinitions \nTypeDefinitions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CompilationMappingAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html#SourceConstructFlags","title":"CompilationMappingAttribute.SourceConstructFlags","content":"CompilationMappingAttribute.SourceConstructFlags \nSourceConstructFlags \nIndicates the relationship between the compiled entity and F# source code","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html#ResourceName","title":"CompilationMappingAttribute.ResourceName","content":"CompilationMappingAttribute.ResourceName \nResourceName \nIndicates the resource the source construct relates to","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html#VariantNumber","title":"CompilationMappingAttribute.VariantNumber","content":"CompilationMappingAttribute.VariantNumber \nVariantNumber \nIndicates the variant number of the entity, if any, in a linear sequence of elements with F# source code","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html#SequenceNumber","title":"CompilationMappingAttribute.SequenceNumber","content":"CompilationMappingAttribute.SequenceNumber \nSequenceNumber \nIndicates the sequence number of the entity, if any, in a linear sequence of elements with F# source code","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationmappingattribute.html#TypeDefinitions","title":"CompilationMappingAttribute.TypeDefinitions","content":"CompilationMappingAttribute.TypeDefinitions \nTypeDefinitions \nIndicates the type definitions needed to resolve the source construct","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationattribute.html","title":"CompilationRepresentationAttribute","content":"CompilationRepresentationAttribute \nThis attribute is used to adjust the runtime representation for a type. \n For example, it may be used to note that the \u003Ccode\u003Enull\u003C/code\u003E representation\n may be used for a type. This affects how some constructs are compiled.\n  \nCompilationRepresentationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompilationRepresentationAttribute.Flags \nFlags","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CompilationRepresentationAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CompilationRepresentationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationattribute.html#Flags","title":"CompilationRepresentationAttribute.Flags","content":"CompilationRepresentationAttribute.Flags \nFlags \nIndicates one or more adjustments to the compiled representation of an F# type or member","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationflags.html","title":"CompilationRepresentationFlags","content":"CompilationRepresentationFlags \nIndicates one or more adjustments to the compiled representation of an F# type or member. \nCompilationRepresentationFlags.None \nNone \nCompilationRepresentationFlags.Static \nStatic \nCompilationRepresentationFlags.Instance \nInstance \nCompilationRepresentationFlags.ModuleSuffix \nModuleSuffix \nCompilationRepresentationFlags.UseNullAsTrueValue \nUseNullAsTrueValue \nCompilationRepresentationFlags.Event \nEvent","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationflags.html#None","title":"CompilationRepresentationFlags.None","content":"CompilationRepresentationFlags.None \nNone \nNo special compilation representation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationflags.html#Static","title":"CompilationRepresentationFlags.Static","content":"CompilationRepresentationFlags.Static \nStatic \nCompile an instance member as \u0027static\u0027 .","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationflags.html#Instance","title":"CompilationRepresentationFlags.Instance","content":"CompilationRepresentationFlags.Instance \nInstance \nCompile a member as \u0027instance\u0027 even if \u003Ccode\u003Enull\u003C/code\u003E is used as a representation for this type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationflags.html#ModuleSuffix","title":"CompilationRepresentationFlags.ModuleSuffix","content":"CompilationRepresentationFlags.ModuleSuffix \nModuleSuffix \nappend \u0027Module\u0027 to the end of a module whose name clashes with a type name in the same namespace.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationflags.html#UseNullAsTrueValue","title":"CompilationRepresentationFlags.UseNullAsTrueValue","content":"CompilationRepresentationFlags.UseNullAsTrueValue \nUseNullAsTrueValue \nPermit the use of \u003Ccode\u003Enull\u003C/code\u003E as a representation for nullary discriminators in a discriminated union.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationrepresentationflags.html#Event","title":"CompilationRepresentationFlags.Event","content":"CompilationRepresentationFlags.Event \nEvent \nCompile a property as a CLI event.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationsourcenameattribute.html","title":"CompilationSourceNameAttribute","content":"CompilationSourceNameAttribute \nThis attribute is inserted automatically by the F# compiler to tag \n methods which are given the \u0027CompiledName\u0027 attribute. \nThis attribute is used by the functions in the \n FSharp.Reflection namespace to reverse-map compiled constructs to \n their original forms. It is not intended for use from user code.\n  \nCompilationSourceNameAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompilationSourceNameAttribute.SourceName \nSourceName","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationsourcenameattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CompilationSourceNameAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CompilationSourceNameAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilationsourcenameattribute.html#SourceName","title":"CompilationSourceNameAttribute.SourceName","content":"CompilationSourceNameAttribute.SourceName \nSourceName \nIndicates the name of the entity in F# source code","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilednameattribute.html","title":"CompiledNameAttribute","content":"CompiledNameAttribute \nAdding this attribute to a value or function definition in an F# module changes the name used\n for the value in compiled CLI code. \nCompiledNameAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompiledNameAttribute.CompiledName \nCompiledName","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilednameattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CompiledNameAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CompiledNameAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilednameattribute.html#CompiledName","title":"CompiledNameAttribute.CompiledName","content":"CompiledNameAttribute.CompiledName \nCompiledName \nThe name of the value as it appears in compiled code","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilermessageattribute.html","title":"CompilerMessageAttribute","content":"CompilerMessageAttribute \nIndicates that a message should be emitted when F# source code uses this construct. \nCompilerMessageAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCompilerMessageAttribute.MessageNumber \nMessageNumber \nCompilerMessageAttribute.IsError \nIsError \nCompilerMessageAttribute.Message \nMessage \nCompilerMessageAttribute.IsHidden \nIsHidden","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilermessageattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CompilerMessageAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CompilerMessageAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilermessageattribute.html#MessageNumber","title":"CompilerMessageAttribute.MessageNumber","content":"CompilerMessageAttribute.MessageNumber \nMessageNumber \nIndicates the number associated with the message.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilermessageattribute.html#IsError","title":"CompilerMessageAttribute.IsError","content":"CompilerMessageAttribute.IsError \nIsError \n\u003Cpre\u003EIndicates if the message should indicate a compiler error. Error numbers less than\n 10000 are considered reserved for use by the F# compiler and libraries.\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilermessageattribute.html#Message","title":"CompilerMessageAttribute.Message","content":"CompilerMessageAttribute.Message \nMessage \nIndicates the warning message to be emitted when F# source code uses this construct","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilermessageattribute.html#IsHidden","title":"CompilerMessageAttribute.IsHidden","content":"CompilerMessageAttribute.IsHidden \nIsHidden \nIndicates if the construct should always be hidden in an editing environment.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customcomparisonattribute.html","title":"CustomComparisonAttribute","content":"CustomComparisonAttribute \nAdding this attribute to a type indicates it is a type with a user-defined implementation of comparison. \nCustomComparisonAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customcomparisonattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CustomComparisonAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CustomComparisonAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customequalityattribute.html","title":"CustomEqualityAttribute","content":"CustomEqualityAttribute \nAdding this attribute to a type indicates it is a type with a user-defined implementation of equality. \nCustomEqualityAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customequalityattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CustomEqualityAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CustomEqualityAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html","title":"CustomOperationAttribute","content":"CustomOperationAttribute \nIndicates that a member on a computation builder type is a custom query operator,\n and indicates the name of that operator. \nCustomOperationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCustomOperationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCustomOperationAttribute.Name \nName \nCustomOperationAttribute.IsLikeGroupJoin \nIsLikeGroupJoin \nCustomOperationAttribute.AllowIntoPattern \nAllowIntoPattern \nCustomOperationAttribute.MaintainsVariableSpaceUsingBind \nMaintainsVariableSpaceUsingBind \nCustomOperationAttribute.JoinConditionWord \nJoinConditionWord \nCustomOperationAttribute.MaintainsVariableSpace \nMaintainsVariableSpace \nCustomOperationAttribute.IsLikeJoin \nIsLikeJoin \nCustomOperationAttribute.IsLikeZip \nIsLikeZip","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CustomOperationAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CustomOperationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreate an instance of attribute with empty name","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"CustomOperationAttribute.\u0060\u0060.ctor\u0060\u0060","content":"CustomOperationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#Name","title":"CustomOperationAttribute.Name","content":"CustomOperationAttribute.Name \nName \nGet the name of the custom operation when used in a query or other computation expression","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#IsLikeGroupJoin","title":"CustomOperationAttribute.IsLikeGroupJoin","content":"CustomOperationAttribute.IsLikeGroupJoin \nIsLikeGroupJoin \nIndicates if the custom operation is an operation similar to a group join in a sequence computation, supporting two inputs and a correlation constraint, and generating a group","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#AllowIntoPattern","title":"CustomOperationAttribute.AllowIntoPattern","content":"CustomOperationAttribute.AllowIntoPattern \nAllowIntoPattern \nIndicates if the custom operation supports the use of \u0027into\u0027 immediately after the use of the operation in a query or other computation expression to consume the results of the operation","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#MaintainsVariableSpaceUsingBind","title":"CustomOperationAttribute.MaintainsVariableSpaceUsingBind","content":"CustomOperationAttribute.MaintainsVariableSpaceUsingBind \nMaintainsVariableSpaceUsingBind \nIndicates if the custom operation maintains the variable space of the query of computation expression through the use of a bind operation","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#JoinConditionWord","title":"CustomOperationAttribute.JoinConditionWord","content":"CustomOperationAttribute.JoinConditionWord \nJoinConditionWord \nIndicates the name used for the \u0027on\u0027 part of the custom query operator for join-like operators","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#MaintainsVariableSpace","title":"CustomOperationAttribute.MaintainsVariableSpace","content":"CustomOperationAttribute.MaintainsVariableSpace \nMaintainsVariableSpace \nIndicates if the custom operation maintains the variable space of the query of computation expression","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#IsLikeJoin","title":"CustomOperationAttribute.IsLikeJoin","content":"CustomOperationAttribute.IsLikeJoin \nIsLikeJoin \nIndicates if the custom operation is an operation similar to a join in a sequence computation, supporting two inputs and a correlation constraint","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-customoperationattribute.html#IsLikeZip","title":"CustomOperationAttribute.IsLikeZip","content":"CustomOperationAttribute.IsLikeZip \nIsLikeZip \nIndicates if the custom operation is an operation similar to a zip in a sequence computation, supporting two inputs","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-defaultaugmentationattribute.html","title":"DefaultAugmentationAttribute","content":"DefaultAugmentationAttribute \nAdding this attribute to a discriminated union with value false\n turns off the generation of standard helper member tester, constructor \n and accessor members for the generated CLI class for that type. \nDefaultAugmentationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDefaultAugmentationAttribute.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-defaultaugmentationattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"DefaultAugmentationAttribute.\u0060\u0060.ctor\u0060\u0060","content":"DefaultAugmentationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-defaultaugmentationattribute.html#Value","title":"DefaultAugmentationAttribute.Value","content":"DefaultAugmentationAttribute.Value \nValue \nThe value of the attribute, indicating whether the type has a default augmentation or not","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-defaultvalueattribute.html","title":"DefaultValueAttribute","content":"DefaultValueAttribute \nAdding this attribute to a field declaration means that the field is \n not initialized. During type checking a constraint is asserted that the field type supports \u0027null\u0027. \n If the \u0027check\u0027 value is false then the constraint is not asserted. \n  \nDefaultValueAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDefaultValueAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nDefaultValueAttribute.Check \nCheck","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-defaultvalueattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"DefaultValueAttribute.\u0060\u0060.ctor\u0060\u0060","content":"DefaultValueAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-defaultvalueattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"DefaultValueAttribute.\u0060\u0060.ctor\u0060\u0060","content":"DefaultValueAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-defaultvalueattribute.html#Check","title":"DefaultValueAttribute.Check","content":"DefaultValueAttribute.Check \nCheck \nIndicates if a constraint is asserted that the field type supports \u0027null\u0027","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-entrypointattribute.html","title":"EntryPointAttribute","content":"EntryPointAttribute \nAdding this attribute to a function indicates it is the entrypoint for an application.\n If this attribute is not specified for an EXE then the initialization implicit in the\n module bindings in the last file in the compilation sequence are used as the entrypoint. \nEntryPointAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-entrypointattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"EntryPointAttribute.\u0060\u0060.ctor\u0060\u0060","content":"EntryPointAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-equalityconditionalonattribute.html","title":"EqualityConditionalOnAttribute","content":"EqualityConditionalOnAttribute \nThis attribute is used to indicate a generic container type satisfies the F# \u0027equality\u0027 \n constraint only if a generic argument also satisfies this constraint. \n For example, adding \n this attribute to parameter \u0027T on a type definition C\u003C\u0027T\u003E means that a type C\u003CX\u003E only supports \n equality if the type X also supports equality and all other conditions for C\u003CX\u003E to support \n equality are also met. The type C\u003C\u0027T\u003E can still be used with other type arguments, but a type such \n as C\u003C(int -\u003E int)\u003E will not support equality because the type (int -\u003E int) is an F# function type \n and does not support equality.\n \n This attribute will be ignored if it is used on the generic parameters of functions or methods.\n  \nEqualityConditionalOnAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-equalityconditionalonattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"EqualityConditionalOnAttribute.\u0060\u0060.ctor\u0060\u0060","content":"EqualityConditionalOnAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-experimentalattribute.html","title":"ExperimentalAttribute","content":"ExperimentalAttribute \nThis attribute is used to tag values that are part of an experimental library\n feature. \nExperimentalAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nExperimentalAttribute.Message \nMessage","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-experimentalattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"ExperimentalAttribute.\u0060\u0060.ctor\u0060\u0060","content":"ExperimentalAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-experimentalattribute.html#Message","title":"ExperimentalAttribute.Message","content":"ExperimentalAttribute.Message \nMessage \nIndicates the warning message to be emitted when F# source code uses this construct","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E \nThe CLI type used to represent F# function values. This type is not\n typically used directly, though may be used from other CLI languages. \nFSharpFunc\u003C\u0027T, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFSharpFunc\u003C\u0027T, \u0027U\u003E.Invoke \nInvoke \nFSharpFunc\u003C\u0027T, \u0027U\u003E.FromConverter \nFromConverter \nFSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast \nInvokeFast \nFSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast \nInvokeFast \nFSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast \nInvokeFast \nFSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast \nInvokeFast \nFSharpFunc\u003C\u0027T, \u0027U\u003E.ToConverter \nToConverter \nFSharpFunc\u003C\u0027T, \u0027U\u003E.op_Implicit \nop_Implicit \nFSharpFunc\u003C\u0027T, \u0027U\u003E.op_Implicit \nop_Implicit","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#\u0060\u0060.ctor\u0060\u0060","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct an instance of an F# first class function value ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#Invoke","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.Invoke","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.Invoke \nInvoke \nInvoke an F# first class function value with one argument","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#FromConverter","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.FromConverter","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.FromConverter \nFromConverter \nConvert an value of type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.converter\u0022\u003EConverter\u003C/a\u003E to a F# first class function value ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#InvokeFast","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast \nInvokeFast \nInvoke an F# first class function value with two curried arguments. In some cases this\n will result in a more efficient application than applying the arguments successively.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#InvokeFast","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast \nInvokeFast \nInvoke an F# first class function value with three curried arguments. In some cases this\n will result in a more efficient application than applying the arguments successively.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#InvokeFast","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast \nInvokeFast \nInvoke an F# first class function value with four curried arguments. In some cases this\n will result in a more efficient application than applying the arguments successively.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#InvokeFast","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.InvokeFast \nInvokeFast \nInvoke an F# first class function value with five curried arguments. In some cases this\n will result in a more efficient application than applying the arguments successively.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#ToConverter","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.ToConverter","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.ToConverter \nToConverter \nConvert an F# first class function value to a value of type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.converter\u0022\u003EConverter\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#op_Implicit","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.op_Implicit","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.op_Implicit \nop_Implicit \nConvert an value of type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.converter\u0022\u003EConverter\u003C/a\u003E to a F# first class function value ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpfunc-2.html#op_Implicit","title":"FSharpFunc\u003C\u0027T, \u0027U\u003E.op_Implicit","content":"FSharpFunc\u003C\u0027T, \u0027U\u003E.op_Implicit \nop_Implicit \nConvert an F# first class function value to a value of type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.converter\u0022\u003EConverter\u003C/a\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpinterfacedataversionattribute.html","title":"FSharpInterfaceDataVersionAttribute","content":"FSharpInterfaceDataVersionAttribute \nThis attribute is added to generated assemblies to indicate the \n version of the data schema used to encode additional F#\n specific information in the resource attached to compiled F# libraries. \nFSharpInterfaceDataVersionAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFSharpInterfaceDataVersionAttribute.Major \nMajor \nFSharpInterfaceDataVersionAttribute.Minor \nMinor \nFSharpInterfaceDataVersionAttribute.Release \nRelease","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpinterfacedataversionattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"FSharpInterfaceDataVersionAttribute.\u0060\u0060.ctor\u0060\u0060","content":"FSharpInterfaceDataVersionAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpinterfacedataversionattribute.html#Major","title":"FSharpInterfaceDataVersionAttribute.Major","content":"FSharpInterfaceDataVersionAttribute.Major \nMajor \nThe major version number of the F# version associated with the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpinterfacedataversionattribute.html#Minor","title":"FSharpInterfaceDataVersionAttribute.Minor","content":"FSharpInterfaceDataVersionAttribute.Minor \nMinor \nThe minor version number of the F# version associated with the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpinterfacedataversionattribute.html#Release","title":"FSharpInterfaceDataVersionAttribute.Release","content":"FSharpInterfaceDataVersionAttribute.Release \nRelease \nThe release number of the F# version associated with the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharptypefunc.html","title":"FSharpTypeFunc","content":"FSharpTypeFunc \nThe CLI type used to represent F# first-class type function values. This type is for use\n by compiled F# code. \nFSharpTypeFunc.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nFSharpTypeFunc.Specialize \nSpecialize","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharptypefunc.html#\u0060\u0060.ctor\u0060\u0060","title":"FSharpTypeFunc.\u0060\u0060.ctor\u0060\u0060","content":"FSharpTypeFunc.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct an instance of an F# first class type function value ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharptypefunc.html#Specialize","title":"FSharpTypeFunc.Specialize","content":"FSharpTypeFunc.Specialize \nSpecialize \nSpecialize the type function at a given type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-format-4.html","title":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E","content":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E \nType of a formatting expression. \nFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Captures \nCaptures \nFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-format-4.html#CaptureTypes","title":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.CaptureTypes","content":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nThe capture types associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-format-4.html#Captures","title":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Captures","content":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Captures \nCaptures \nThe captures associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-format-4.html#Value","title":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Value","content":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Value \nValue \nThe raw text of the format string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-format-5.html","title":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E","content":"Format\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E \nType of a formatting expression.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html","title":"FuncConvert","content":"FuncConvert \nHelper functions for converting F# first class function values to and from CLI representations\n of functions using delegates. \nFuncConvert.FromAction \nFromAction \nFuncConvert.FromAction \nFromAction \nFuncConvert.FromAction \nFromAction \nFuncConvert.FromAction \nFromAction \nFuncConvert.FromAction \nFromAction \nFuncConvert.FromAction \nFromAction \nFuncConvert.FromFunc \nFromFunc \nFuncConvert.FromFunc \nFromFunc \nFuncConvert.FromFunc \nFromFunc \nFuncConvert.FromFunc \nFromFunc \nFuncConvert.FromFunc \nFromFunc \nFuncConvert.FromFunc \nFromFunc \nFuncConvert.FuncFromTupled \nFuncFromTupled \nFuncConvert.FuncFromTupled \nFuncFromTupled \nFuncConvert.FuncFromTupled \nFuncFromTupled \nFuncConvert.FuncFromTupled \nFuncFromTupled \nFuncConvert.ToFSharpFunc \nToFSharpFunc \nFuncConvert.ToFSharpFunc \nToFSharpFunc","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromAction","title":"FuncConvert.FromAction","content":"FuncConvert.FromAction \nFromAction \nConvert the given Action delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromAction","title":"FuncConvert.FromAction","content":"FuncConvert.FromAction \nFromAction \nConvert the given Action delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromAction","title":"FuncConvert.FromAction","content":"FuncConvert.FromAction \nFromAction \nConvert the given Action delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromAction","title":"FuncConvert.FromAction","content":"FuncConvert.FromAction \nFromAction \nConvert the given Action delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromAction","title":"FuncConvert.FromAction","content":"FuncConvert.FromAction \nFromAction \nConvert the given Action delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromAction","title":"FuncConvert.FromAction","content":"FuncConvert.FromAction \nFromAction \nConvert the given Action delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromFunc","title":"FuncConvert.FromFunc","content":"FuncConvert.FromFunc \nFromFunc \nConvert the given Func delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromFunc","title":"FuncConvert.FromFunc","content":"FuncConvert.FromFunc \nFromFunc \nConvert the given Func delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromFunc","title":"FuncConvert.FromFunc","content":"FuncConvert.FromFunc \nFromFunc \nConvert the given Func delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromFunc","title":"FuncConvert.FromFunc","content":"FuncConvert.FromFunc \nFromFunc \nConvert the given Func delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromFunc","title":"FuncConvert.FromFunc","content":"FuncConvert.FromFunc \nFromFunc \nConvert the given Func delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FromFunc","title":"FuncConvert.FromFunc","content":"FuncConvert.FromFunc \nFromFunc \nConvert the given Func delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FuncFromTupled","title":"FuncConvert.FuncFromTupled","content":"FuncConvert.FuncFromTupled \nFuncFromTupled \nA utility function to convert function values from tupled to curried form","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FuncFromTupled","title":"FuncConvert.FuncFromTupled","content":"FuncConvert.FuncFromTupled \nFuncFromTupled \nA utility function to convert function values from tupled to curried form","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FuncFromTupled","title":"FuncConvert.FuncFromTupled","content":"FuncConvert.FuncFromTupled \nFuncFromTupled \nA utility function to convert function values from tupled to curried form","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#FuncFromTupled","title":"FuncConvert.FuncFromTupled","content":"FuncConvert.FuncFromTupled \nFuncFromTupled \nA utility function to convert function values from tupled to curried form","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#ToFSharpFunc","title":"FuncConvert.ToFSharpFunc","content":"FuncConvert.ToFSharpFunc \nToFSharpFunc \nConvert the given Converter delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-funcconvert.html#ToFSharpFunc","title":"FuncConvert.ToFSharpFunc","content":"FuncConvert.ToFSharpFunc \nToFSharpFunc \nConvert the given Action delegate object to an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-generalizablevalueattribute.html","title":"GeneralizableValueAttribute","content":"GeneralizableValueAttribute \nAdding this attribute to a non-function value with generic parameters indicates that \n uses of the construct can give rise to generic code through type inference.  \nGeneralizableValueAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-generalizablevalueattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"GeneralizableValueAttribute.\u0060\u0060.ctor\u0060\u0060","content":"GeneralizableValueAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-inlineiflambdaattribute.html","title":"InlineIfLambdaAttribute","content":"InlineIfLambdaAttribute \nAdding this attribute to a parameter of function type indicates that, if the overall function or method is inlined and the parameter is\n determined to be a known lambda, then this function should be statically inlined throughout the body of the function of method. \nIf the function parameter is called multiple times in the implementation of the function or method this attribute may cause code explosion and slow compilation times. \nInlineIfLambdaAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-inlineiflambdaattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"InlineIfLambdaAttribute.\u0060\u0060.ctor\u0060\u0060","content":"InlineIfLambdaAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-interfaceattribute.html","title":"InterfaceAttribute","content":"InterfaceAttribute \nAdding this attribute to a type causes it to be represented using a CLI interface. \nInterfaceAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-interfaceattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"InterfaceAttribute.\u0060\u0060.ctor\u0060\u0060","content":"InterfaceAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-literalattribute.html","title":"LiteralAttribute","content":"LiteralAttribute \nAdding this attribute to a value causes it to be compiled as a CLI constant literal. \nLiteralAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-literalattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"LiteralAttribute.\u0060\u0060.ctor\u0060\u0060","content":"LiteralAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-matchfailureexception.html","title":"MatchFailureException","content":"MatchFailureException \nNon-exhaustive match failures will raise the MatchFailureException exception \nMatchFailureException.Data0 \nData0 \nMatchFailureException.Data1 \nData1 \nMatchFailureException.Data2 \nData2","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-matchfailureexception.html#Data0","title":"MatchFailureException.Data0","content":"MatchFailureException.Data0 \nData0 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-matchfailureexception.html#Data1","title":"MatchFailureException.Data1","content":"MatchFailureException.Data1 \nData1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-matchfailureexception.html#Data2","title":"MatchFailureException.Data2","content":"MatchFailureException.Data2 \nData2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-measureannotatedabbreviationattribute.html","title":"MeasureAnnotatedAbbreviationAttribute","content":"MeasureAnnotatedAbbreviationAttribute \nAdding this attribute to a type causes it to be interpreted as a refined type, currently limited to measure-parameterized types.\n This may only be used under very limited conditions. \nMeasureAnnotatedAbbreviationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-measureannotatedabbreviationattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"MeasureAnnotatedAbbreviationAttribute.\u0060\u0060.ctor\u0060\u0060","content":"MeasureAnnotatedAbbreviationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-measureattribute.html","title":"MeasureAttribute","content":"MeasureAttribute \nAdding this attribute to a type causes it to be interpreted as a unit of measure.\n This may only be used under very limited conditions. \nMeasureAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-measureattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"MeasureAttribute.\u0060\u0060.ctor\u0060\u0060","content":"MeasureAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nocomparisonattribute.html","title":"NoComparisonAttribute","content":"NoComparisonAttribute \nAdding this attribute to a type indicates it is a type where comparison is an abnormal operation.\n This means that the type does not satisfy the F# \u0027comparison\u0027 constraint. Within the bounds of the \n F# type system, this helps ensure that the F# generic comparison function is not instantiated directly\n at this type. The attribute and checking does not constrain the use of comparison with base or child \n types of this type.\n  \nNoComparisonAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nocomparisonattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"NoComparisonAttribute.\u0060\u0060.ctor\u0060\u0060","content":"NoComparisonAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nocompilerinliningattribute.html","title":"NoCompilerInliningAttribute","content":"NoCompilerInliningAttribute \nIndicates a value or a function that must not be inlined by the F# compiler,\n but may be inlined by the JIT compiler. \nNoCompilerInliningAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nocompilerinliningattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"NoCompilerInliningAttribute.\u0060\u0060.ctor\u0060\u0060","content":"NoCompilerInliningAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nodynamicinvocationattribute.html","title":"NoDynamicInvocationAttribute","content":"NoDynamicInvocationAttribute \nThis attribute is used to tag values that may not be dynamically invoked at runtime. This is\n typically added to inlined functions whose implementations include unverifiable code. It\n causes the method body emitted for the inlined function to raise an exception if \n dynamically invoked, rather than including the unverifiable code in the generated\n assembly. \nNoDynamicInvocationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nodynamicinvocationattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"NoDynamicInvocationAttribute.\u0060\u0060.ctor\u0060\u0060","content":"NoDynamicInvocationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-noequalityattribute.html","title":"NoEqualityAttribute","content":"NoEqualityAttribute \nAdding this attribute to a type indicates it is a type where equality is an abnormal operation.\n This means that the type does not satisfy the F# \u0027equality\u0027 constraint. Within the bounds of the \n F# type system, this helps ensure that the F# generic equality function is not instantiated directly\n at this type. The attribute and checking does not constrain the use of comparison with base or child \n types of this type. \nNoEqualityAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-noequalityattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"NoEqualityAttribute.\u0060\u0060.ctor\u0060\u0060","content":"NoEqualityAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpoption-1.html","title":"Option\u003C\u0027T\u003E","content":"Option\u003C\u0027T\u003E \nThe type of optional values. When used from other CLI languages the\n empty option is the \u003Ccode\u003Enull\u003C/code\u003E value.  \nUse the constructors \u003Ccode\u003ESome\u003C/code\u003E and \u003Ccode\u003ENone\u003C/code\u003E to create values of this type.\n Use the values in the \u003Ccode\u003EOption\u003C/code\u003E module to manipulate values of this type,\n or pattern match against the values directly.\n\n \u003Ccode\u003ENone\u003C/code\u003E values will appear as the value \u003Ccode\u003Enull\u003C/code\u003E to other CLI languages.\n Instance methods on this type will appear as static methods to other CLI languages\n due to the use of \u003Ccode\u003Enull\u003C/code\u003E as a value representation. \nOption\u003C\u0027T\u003E.IsNone \nIsNone \nOption\u003C\u0027T\u003E.IsSome \nIsSome \nOption\u003C\u0027T\u003E.Value \nValue \nOption\u003C\u0027T\u003E.Some \nSome \nOption\u003C\u0027T\u003E.op_Implicit \nop_Implicit \nOption\u003C\u0027T\u003E.None \nNone \nOption\u003C\u0027T\u003E.None \nNone \nOption\u003C\u0027T\u003E.Some \nSome","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpoption-1.html#IsNone","title":"Option\u003C\u0027T\u003E.IsNone","content":"Option\u003C\u0027T\u003E.IsNone \nIsNone \nReturn \u0027true\u0027 if the option is a \u0027None\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpoption-1.html#IsSome","title":"Option\u003C\u0027T\u003E.IsSome","content":"Option\u003C\u0027T\u003E.IsSome \nIsSome \nReturn \u0027true\u0027 if the option is a \u0027Some\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpoption-1.html#Value","title":"Option\u003C\u0027T\u003E.Value","content":"Option\u003C\u0027T\u003E.Value \nValue \nGet the value of a \u0027Some\u0027 option. A NullReferenceException is raised if the option is \u0027None\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpoption-1.html#Some","title":"Option\u003C\u0027T\u003E.Some","content":"Option\u003C\u0027T\u003E.Some \nSome \nCreate an option value that is a \u0027Some\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpoption-1.html#op_Implicit","title":"Option\u003C\u0027T\u003E.op_Implicit","content":"Option\u003C\u0027T\u003E.op_Implicit \nop_Implicit \nImplicitly converts a value into an optional that is a \u0027Some\u0027 value. \nThe F# compiler ignored this method when determining possible type-directed conversions. Instead, use \u003Ccode\u003ESome\u003C/code\u003E or \u003Ccode\u003ENone\u003C/code\u003E explicitly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpoption-1.html#None","title":"Option\u003C\u0027T\u003E.None","content":"Option\u003C\u0027T\u003E.None \nNone \nCreate an option value that is a \u0027None\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpoption-1.html#None","title":"Option\u003C\u0027T\u003E.None","content":"Option\u003C\u0027T\u003E.None \nNone \nThe representation of \u0022No value\u0022","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpoption-1.html#Some","title":"Option\u003C\u0027T\u003E.Some","content":"Option\u003C\u0027T\u003E.Some \nSome \nThe representation of \u0022Value of type \u0027T\u0022","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionalargumentattribute.html","title":"OptionalArgumentAttribute","content":"OptionalArgumentAttribute \nThis attribute is added automatically for all optional arguments. \nOptionalArgumentAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-optionalargumentattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"OptionalArgumentAttribute.\u0060\u0060.ctor\u0060\u0060","content":"OptionalArgumentAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfformat-4.html","title":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E","content":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E \nType of a formatting expression. \nPrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nPrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nPrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nPrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Captures \nCaptures \nPrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfformat-4.html#\u0060\u0060.ctor\u0060\u0060","title":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.\u0060\u0060.ctor\u0060\u0060","content":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct a format string ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfformat-4.html#\u0060\u0060.ctor\u0060\u0060","title":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.\u0060\u0060.ctor\u0060\u0060","content":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct a format string ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfformat-4.html#CaptureTypes","title":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.CaptureTypes","content":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.CaptureTypes \nCaptureTypes \nThe capture types associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfformat-4.html#Captures","title":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Captures","content":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Captures \nCaptures \nThe captures associated with an interpolated string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfformat-4.html#Value","title":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Value","content":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result\u003E.Value \nValue \nThe raw text of the format string.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfformat-5.html","title":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E","content":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E \nType of a formatting expression. \nPrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nPrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfformat-5.html#\u0060\u0060.ctor\u0060\u0060","title":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E.\u0060\u0060.ctor\u0060\u0060","content":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct a format string","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfformat-5.html#\u0060\u0060.ctor\u0060\u0060","title":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E.\u0060\u0060.ctor\u0060\u0060","content":"PrintfFormat\u003C\u0027Printer, \u0027State, \u0027Residue, \u0027Result, \u0027Tuple\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nConstruct a format string","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-projectionparameterattribute.html","title":"ProjectionParameterAttribute","content":"ProjectionParameterAttribute \nIndicates that, when a custom operator is used in a computation expression,\n a parameter is automatically parameterized by the variable space of the computation expression \nProjectionParameterAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-projectionparameterattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"ProjectionParameterAttribute.\u0060\u0060.ctor\u0060\u0060","content":"ProjectionParameterAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpref-1.html","title":"Ref\u003C\u0027T\u003E","content":"Ref\u003C\u0027T\u003E \nThe type of mutable references. Use the functions [!] and [:=] to get and\n set values of this type. \nRef\u003C\u0027T\u003E.Value \nValue \nRef\u003C\u0027T\u003E.contents \ncontents","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpref-1.html#Value","title":"Ref\u003C\u0027T\u003E.Value","content":"Ref\u003C\u0027T\u003E.Value \nValue \nThe current value of the reference cell","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpref-1.html#contents","title":"Ref\u003C\u0027T\u003E.contents","content":"Ref\u003C\u0027T\u003E.contents \ncontents \n The current value of the reference cell","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-referenceequalityattribute.html","title":"ReferenceEqualityAttribute","content":"ReferenceEqualityAttribute \nAdding this attribute to a record or union type disables the automatic generation\n of overrides for \u0027System.Object.Equals(obj)\u0027, \u0027System.Object.GetHashCode()\u0027 \n and \u0027System.IComparable\u0027 for the type. The type will by default use reference equality. \nReferenceEqualityAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-referenceequalityattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"ReferenceEqualityAttribute.\u0060\u0060.ctor\u0060\u0060","content":"ReferenceEqualityAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-reflecteddefinitionattribute.html","title":"ReflectedDefinitionAttribute","content":"ReflectedDefinitionAttribute \nAdding this attribute to the let-binding for the definition of a top-level \n value makes the quotation expression that implements the value available\n for use at runtime. \nReflectedDefinitionAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nReflectedDefinitionAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nReflectedDefinitionAttribute.IncludeValue \nIncludeValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-reflecteddefinitionattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"ReflectedDefinitionAttribute.\u0060\u0060.ctor\u0060\u0060","content":"ReflectedDefinitionAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-reflecteddefinitionattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"ReflectedDefinitionAttribute.\u0060\u0060.ctor\u0060\u0060","content":"ReflectedDefinitionAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-reflecteddefinitionattribute.html#IncludeValue","title":"ReflectedDefinitionAttribute.IncludeValue","content":"ReflectedDefinitionAttribute.IncludeValue \nIncludeValue \nThe value of the attribute, indicating whether to include the evaluated value of the definition as the outer node of the quotation","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-requirequalifiedaccessattribute.html","title":"RequireQualifiedAccessAttribute","content":"RequireQualifiedAccessAttribute \nThis attribute is used to indicate that references to the elements of a module, record or union \n type require explicit qualified access. \nRequireQualifiedAccessAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-requirequalifiedaccessattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"RequireQualifiedAccessAttribute.\u0060\u0060.ctor\u0060\u0060","content":"RequireQualifiedAccessAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-requiresexplicittypeargumentsattribute.html","title":"RequiresExplicitTypeArgumentsAttribute","content":"RequiresExplicitTypeArgumentsAttribute \nAdding this attribute to a type, value or member requires that \n uses of the construct must explicitly instantiate any generic type parameters. \nRequiresExplicitTypeArgumentsAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-requiresexplicittypeargumentsattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"RequiresExplicitTypeArgumentsAttribute.\u0060\u0060.ctor\u0060\u0060","content":"RequiresExplicitTypeArgumentsAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpresult-2.html","title":"Result\u003C\u0027T, \u0027TError\u003E","content":"Result\u003C\u0027T, \u0027TError\u003E \nHelper type for error handling without exceptions. \nResult\u003C\u0027T, \u0027TError\u003E.IsOk \nIsOk \nResult\u003C\u0027T, \u0027TError\u003E.IsError \nIsError \nResult\u003C\u0027T, \u0027TError\u003E.Ok \nOk \nResult\u003C\u0027T, \u0027TError\u003E.Error \nError","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpresult-2.html#IsOk","title":"Result\u003C\u0027T, \u0027TError\u003E.IsOk","content":"Result\u003C\u0027T, \u0027TError\u003E.IsOk \nIsOk \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpresult-2.html#IsError","title":"Result\u003C\u0027T, \u0027TError\u003E.IsError","content":"Result\u003C\u0027T, \u0027TError\u003E.IsError \nIsError \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpresult-2.html#Ok","title":"Result\u003C\u0027T, \u0027TError\u003E.Ok","content":"Result\u003C\u0027T, \u0027TError\u003E.Ok \nOk \n Represents an OK or a Successful result. The code succeeded with a value of \u0027T.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpresult-2.html#Error","title":"Result\u003C\u0027T, \u0027TError\u003E.Error","content":"Result\u003C\u0027T, \u0027TError\u003E.Error \nError \n Represents an Error or a Failure. The code failed with a value of \u0027TError representing what went wrong.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sealedattribute.html","title":"SealedAttribute","content":"SealedAttribute \nAdding this attribute to class definition makes it sealed, which means it may not\n be extended or implemented. \nSealedAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSealedAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nSealedAttribute.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sealedattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"SealedAttribute.\u0060\u0060.ctor\u0060\u0060","content":"SealedAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sealedattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"SealedAttribute.\u0060\u0060.ctor\u0060\u0060","content":"SealedAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sealedattribute.html#Value","title":"SealedAttribute.Value","content":"SealedAttribute.Value \nValue \nThe value of the attribute, indicating whether the type is sealed or not.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html","title":"SourceConstructFlags","content":"SourceConstructFlags \nIndicates the relationship between a compiled entity in a CLI binary and an element in F# source code. \nSourceConstructFlags.None \nNone \nSourceConstructFlags.SumType \nSumType \nSourceConstructFlags.RecordType \nRecordType \nSourceConstructFlags.ObjectType \nObjectType \nSourceConstructFlags.Field \nField \nSourceConstructFlags.Exception \nException \nSourceConstructFlags.Closure \nClosure \nSourceConstructFlags.Module \nModule \nSourceConstructFlags.UnionCase \nUnionCase \nSourceConstructFlags.Value \nValue \nSourceConstructFlags.KindMask \nKindMask \nSourceConstructFlags.NonPublicRepresentation \nNonPublicRepresentation","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#None","title":"SourceConstructFlags.None","content":"SourceConstructFlags.None \nNone \nIndicates that the compiled entity has no relationship to an element in F# source code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#SumType","title":"SourceConstructFlags.SumType","content":"SourceConstructFlags.SumType \nSumType \nIndicates that the compiled entity is part of the representation of an F# union type declaration.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#RecordType","title":"SourceConstructFlags.RecordType","content":"SourceConstructFlags.RecordType \nRecordType \nIndicates that the compiled entity is part of the representation of an F# record type declaration.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#ObjectType","title":"SourceConstructFlags.ObjectType","content":"SourceConstructFlags.ObjectType \nObjectType \nIndicates that the compiled entity is part of the representation of an F# class or other object type declaration.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#Field","title":"SourceConstructFlags.Field","content":"SourceConstructFlags.Field \nField \nIndicates that the compiled entity is part of the representation of an F# record or union case field declaration.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#Exception","title":"SourceConstructFlags.Exception","content":"SourceConstructFlags.Exception \nException \nIndicates that the compiled entity is part of the representation of an F# exception declaration.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#Closure","title":"SourceConstructFlags.Closure","content":"SourceConstructFlags.Closure \nClosure \nIndicates that the compiled entity is part of the representation of an F# closure.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#Module","title":"SourceConstructFlags.Module","content":"SourceConstructFlags.Module \nModule \nIndicates that the compiled entity is part of the representation of an F# module declaration.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#UnionCase","title":"SourceConstructFlags.UnionCase","content":"SourceConstructFlags.UnionCase \nUnionCase \nIndicates that the compiled entity is part of the representation of an F# union case declaration.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#Value","title":"SourceConstructFlags.Value","content":"SourceConstructFlags.Value \nValue \nIndicates that the compiled entity is part of the representation of an F# value declaration.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#KindMask","title":"SourceConstructFlags.KindMask","content":"SourceConstructFlags.KindMask \nKindMask \nThe mask of values related to the kind of the compiled entity.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sourceconstructflags.html#NonPublicRepresentation","title":"SourceConstructFlags.NonPublicRepresentation","content":"SourceConstructFlags.NonPublicRepresentation \nNonPublicRepresentation \nIndicates that the compiled entity had private or internal representation in F# source code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-structattribute.html","title":"StructAttribute","content":"StructAttribute \nAdding this attribute to a type causes it to be represented using a CLI struct. \nStructAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-structattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"StructAttribute.\u0060\u0060.ctor\u0060\u0060","content":"StructAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-structuralcomparisonattribute.html","title":"StructuralComparisonAttribute","content":"StructuralComparisonAttribute \nAdding this attribute to a record, union, exception, or struct type confirms the \n automatic generation of implementations for \u0027System.IComparable\u0027 for the type. \nStructuralComparisonAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-structuralcomparisonattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"StructuralComparisonAttribute.\u0060\u0060.ctor\u0060\u0060","content":"StructuralComparisonAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-structuralequalityattribute.html","title":"StructuralEqualityAttribute","content":"StructuralEqualityAttribute \nAdding this attribute to a record, union or struct type confirms the automatic \n generation of overrides for \u0027System.Object.Equals(obj)\u0027 and \n \u0027System.Object.GetHashCode()\u0027 for the type.  \nStructuralEqualityAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-structuralequalityattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"StructuralEqualityAttribute.\u0060\u0060.ctor\u0060\u0060","content":"StructuralEqualityAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-structuredformatdisplayattribute.html","title":"StructuredFormatDisplayAttribute","content":"StructuredFormatDisplayAttribute \nThis attribute is used to mark how a type is displayed by default when using \n \u0027%A\u0027 printf formatting patterns and other two-dimensional text-based display layouts. \n In this version of F# valid values are of the form \u003Ccode\u003EPreText {PropertyName1} PostText {PropertyName2} ... {PropertyNameX} PostText\u003C/code\u003E.\n The property names indicate properties to evaluate and to display instead of the object itself.  \nStructuredFormatDisplayAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nStructuredFormatDisplayAttribute.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-structuredformatdisplayattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"StructuredFormatDisplayAttribute.\u0060\u0060.ctor\u0060\u0060","content":"StructuredFormatDisplayAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-structuredformatdisplayattribute.html#Value","title":"StructuredFormatDisplayAttribute.Value","content":"StructuredFormatDisplayAttribute.Value \nValue \n\u003Cpre\u003EIndicates the text to display by default when objects of this type are displayed \n using \u0027%A\u0027 printf formatting patterns and other two-dimensional text-based display \n layouts.\u003C/pre\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-tailcallattribute.html","title":"TailCallAttribute","content":"TailCallAttribute \nIndicates a function that should be called in a tail recursive way inside its recursive scope.\n A warning is emitted if the function is analyzed as not tail recursive after the optimization phase. \nTailCallAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-tailcallattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"TailCallAttribute.\u0060\u0060.ctor\u0060\u0060","content":"TailCallAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-unit.html","title":"Unit","content":"Unit \nThe type \u0027unit\u0027, which has only one value \u0022()\u0022. This value is special and\n always uses the representation \u0027null\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-unverifiableattribute.html","title":"UnverifiableAttribute","content":"UnverifiableAttribute \nThis attribute is used to tag values whose use will result in the generation\n of unverifiable code. These values are inevitably marked \u0027inline\u0027 to ensure that\n the unverifiable constructs are not present in the actual code for the F# library,\n but are rather copied to the source code of the caller. \nUnverifiableAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-unverifiableattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"UnverifiableAttribute.\u0060\u0060.ctor\u0060\u0060","content":"UnverifiableAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html","title":"ValueOption\u003C\u0027T\u003E","content":"ValueOption\u003C\u0027T\u003E \nThe type of optional values, represented as structs. \nUse the constructors \u003Ccode\u003EValueSome\u003C/code\u003E and \u003Ccode\u003EValueNone\u003C/code\u003E to create values of this type.\n Use the values in the \u003Ccode\u003EValueOption\u003C/code\u003E module to manipulate values of this type,\n or pattern match against the values directly. \nValueOption\u003C\u0027T\u003E.IsNone \nIsNone \nValueOption\u003C\u0027T\u003E.IsValueSome \nIsValueSome \nValueOption\u003C\u0027T\u003E.IsSome \nIsSome \nValueOption\u003C\u0027T\u003E.IsValueNone \nIsValueNone \nValueOption\u003C\u0027T\u003E.Value \nValue \nValueOption\u003C\u0027T\u003E.Some \nSome \nValueOption\u003C\u0027T\u003E.op_Implicit \nop_Implicit \nValueOption\u003C\u0027T\u003E.None \nNone \nValueOption\u003C\u0027T\u003E.ValueNone \nValueNone \nValueOption\u003C\u0027T\u003E.ValueSome \nValueSome","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#IsNone","title":"ValueOption\u003C\u0027T\u003E.IsNone","content":"ValueOption\u003C\u0027T\u003E.IsNone \nIsNone \nReturn \u0027true\u0027 if the value option is a \u0027ValueNone\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#IsValueSome","title":"ValueOption\u003C\u0027T\u003E.IsValueSome","content":"ValueOption\u003C\u0027T\u003E.IsValueSome \nIsValueSome \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#IsSome","title":"ValueOption\u003C\u0027T\u003E.IsSome","content":"ValueOption\u003C\u0027T\u003E.IsSome \nIsSome \nReturn \u0027true\u0027 if the value option is a \u0027ValueSome\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#IsValueNone","title":"ValueOption\u003C\u0027T\u003E.IsValueNone","content":"ValueOption\u003C\u0027T\u003E.IsValueNone \nIsValueNone \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#Value","title":"ValueOption\u003C\u0027T\u003E.Value","content":"ValueOption\u003C\u0027T\u003E.Value \nValue \nGet the value of a \u0027ValueSome\u0027 option. An InvalidOperationException is raised if the option is \u0027ValueNone\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#Some","title":"ValueOption\u003C\u0027T\u003E.Some","content":"ValueOption\u003C\u0027T\u003E.Some \nSome \nCreate a value option value that is a \u0027Some\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#op_Implicit","title":"ValueOption\u003C\u0027T\u003E.op_Implicit","content":"ValueOption\u003C\u0027T\u003E.op_Implicit \nop_Implicit \nImplicitly converts a value into an optional that is a \u0027ValueSome\u0027 value. \nThe F# compiler ignored this method when determining possible type-directed conversions. Instead, use \u003Ccode\u003ESome\u003C/code\u003E or \u003Ccode\u003ENone\u003C/code\u003E explicitly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#None","title":"ValueOption\u003C\u0027T\u003E.None","content":"ValueOption\u003C\u0027T\u003E.None \nNone \nCreate a value option value that is a \u0027ValueNone\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#ValueNone","title":"ValueOption\u003C\u0027T\u003E.ValueNone","content":"ValueOption\u003C\u0027T\u003E.ValueNone \nValueNone \nThe representation of \u0022No value\u0022","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-fsharpvalueoption-1.html#ValueSome","title":"ValueOption\u003C\u0027T\u003E.ValueSome","content":"ValueOption\u003C\u0027T\u003E.ValueSome \nValueSome \nThe representation of \u0022Value of type \u0027T\u0022","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-volatilefieldattribute.html","title":"VolatileFieldAttribute","content":"VolatileFieldAttribute \nAdding this attribute to an F# mutable binding causes the \u0022volatile\u0022\n prefix to be used for all accesses to the field. \nVolatileFieldAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-volatilefieldattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"VolatileFieldAttribute.\u0060\u0060.ctor\u0060\u0060","content":"VolatileFieldAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-warnonwithoutnullargumentattribute.html","title":"WarnOnWithoutNullArgumentAttribute","content":"WarnOnWithoutNullArgumentAttribute \nWhen used in a compilation with null-checking enabled, indicates that a function is meant to be used only with potentially-nullable values and warns accordingly. \nWarnOnWithoutNullArgumentAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nWarnOnWithoutNullArgumentAttribute.WarningMessage \nWarningMessage","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-warnonwithoutnullargumentattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"WarnOnWithoutNullArgumentAttribute.\u0060\u0060.ctor\u0060\u0060","content":"WarnOnWithoutNullArgumentAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-warnonwithoutnullargumentattribute.html#WarningMessage","title":"WarnOnWithoutNullArgumentAttribute.WarningMessage","content":"WarnOnWithoutNullArgumentAttribute.WarningMessage \nWarningMessage \nWarning message displayed when the annotated function is used with a value known to be without null","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,] \nThirty-two dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,] \nThirty-one dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,] \nThirty dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,,] \nTwenty-nine dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,,] \nTwenty-eight dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,,] \nTwenty-seven dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,,] \nTwenty-six dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,,] \nTwenty-five dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,,] \nTwenty-four dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,,] \nTwenty-three dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,,] \nTwenty-two dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,,] \nTwenty-one dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,,] \nTwenty dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,,] \nNineteen dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,,] \nEighteen dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,,] \nSeventeen dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,,] \nSixteen dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,,] \nFifteen dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,,] \nFourteen dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,,] \nThirteen dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,,] \nTwelve dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,,]","content":"\u0027T [,,,,,,,,,,] \nEleven dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,,]","content":"\u0027T [,,,,,,,,,] \nTen dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,,]-1.html","title":"\u0027T [,,,,,,,,]","content":"\u0027T [,,,,,,,,] \nNine dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,,]-1.html","title":"\u0027T [,,,,,,,]","content":"\u0027T [,,,,,,,] \nEight dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,,]-1.html","title":"\u0027T [,,,,,,]","content":"\u0027T [,,,,,,] \nSeven dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,,]-1.html","title":"\u0027T [,,,,,]","content":"\u0027T [,,,,,] \nSix dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,,]-1.html","title":"\u0027T [,,,,]","content":"\u0027T [,,,,] \nFive dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,,]-1.html","title":"\u0027T [,,,]","content":"\u0027T [,,,] \nFour dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type. \nUse the values in the \u003Ccode\u003EArray4D\u003C/code\u003E module\n to manipulate values of this type, or the notation \u003Ccode\u003Earr.[x1,x2,x3,x4]\u003C/code\u003E to get and set array\n values.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,,]-1.html","title":"\u0027T [,,]","content":"\u0027T [,,] \nThree dimensional arrays, typically zero-based. Non-zero-based arrays\n can be created using methods on the System.Array type. \nUse the values in the \u003Ccode\u003EArray3D\u003C/code\u003E module\n to manipulate values of this type, or the notation \u003Ccode\u003Earr.[x1,x2,x3]\u003C/code\u003E to get and set array\n values.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[,]-1.html","title":"\u0027T [,]","content":"\u0027T [,] \nTwo dimensional arrays, typically zero-based. \nUse the values in the \u003Ccode\u003EArray2D\u003C/code\u003E module\n to manipulate values of this type, or the notation \u003Ccode\u003Earr.[x,y]\u003C/code\u003E to get/set array\n values.   \n\n Non-zero-based arrays can also be created using methods on the System.Array type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-[]-1.html","title":"\u0027T []","content":"\u0027T [] \nSingle dimensional, zero-based arrays, written \u003Ccode\u003Eint array\u003C/code\u003E, \u003Ccode\u003Estring array\u003C/code\u003E etc. \nUse the values in the \u003Ccode\u003EArray\u003C/code\u003E module to manipulate values \n of this type, or the notation \u003Ccode\u003Earr.[x]\u003C/code\u003E to get/set array\n values.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-array-1.html","title":"\u0027T array","content":"\u0027T array \nSingle dimensional, zero-based arrays, written \u003Ccode\u003Eint array\u003C/code\u003E, \u003Ccode\u003Estring array\u003C/code\u003E etc. \nUse the values in the \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-collections-arraymodule.html\u0022\u003EArray\u003C/a\u003E module to manipulate values \n of this type, or the notation \u003Ccode\u003Earr.[x]\u003C/code\u003E to get/set array\n values.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-bool.html","title":"bool","content":"bool \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.boolean\u0022\u003EBoolean\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-byref-2.html","title":"byref\u003C\u0027T, \u0027Kind\u003E","content":"byref\u003C\u0027T, \u0027Kind\u003E \nRepresents a managed pointer in F# code.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-byref-1.html","title":"byref\u003C\u0027T\u003E","content":"byref\u003C\u0027T\u003E \nRepresents a managed pointer in F# code. For F# 4.5\u002B this is considered equivalent to \u003Ccode\u003Ebyref\u0026lt;\u0026#39;T, ByRefKinds.InOut\u0026gt;\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-byte-1.html","title":"byte\u003C\u0027Measure\u003E","content":"byte\u003C\u0027Measure\u003E \nThe type of 8-bit unsigned integer numbers, annotated with a unit of measure. \n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to \n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.byte\u0022\u003EByte\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-byte.html","title":"byte","content":"byte \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.byte\u0022\u003EByte\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-char.html","title":"char","content":"char \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.char\u0022\u003EChar\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-decimal-1.html","title":"decimal\u003C\u0027Measure\u003E","content":"decimal\u003C\u0027Measure\u003E \nThe type of decimal numbers, annotated with a unit of measure. The unit\n of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.decimal\u0022\u003EDecimal\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-double-1.html","title":"double\u003C\u0027Measure\u003E","content":"double\u003C\u0027Measure\u003E \nThe type of double-precision floating point numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.double\u0022\u003EDouble\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-double.html","title":"double","content":"double \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.double\u0022\u003EDouble\u003C/a\u003E. Identical to \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-float.html\u0022\u003Efloat\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-float-1.html","title":"float\u003C\u0027Measure\u003E","content":"float\u003C\u0027Measure\u003E \nThe type of double-precision floating point numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.double\u0022\u003EDouble\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-float.html","title":"float","content":"float \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.double\u0022\u003EDouble\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-float32-1.html","title":"float32\u003C\u0027Measure\u003E","content":"float32\u003C\u0027Measure\u003E \nThe type of single-precision floating point numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.single\u0022\u003ESingle\u003C/a\u003E.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-float32.html","title":"float32","content":"float32 \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.single\u0022\u003ESingle\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-ilsigptr-1.html","title":"ilsigptr\u003C\u0027T\u003E","content":"ilsigptr\u003C\u0027T\u003E \nRepresents an Common IL (Intermediate Language) Signature Pointer. \nThis type should only be used when writing F# code that interoperates\n with other .NET languages that use generic Common IL Signature Pointers.\n Use of this type in F# code may result in unverifiable code being generated.\n Because of the rules of Common IL Signature Pointers, you cannot use this type in generic type parameters,\n resulting in compiler errors. As a result, you should convert this type to \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nativeptr{t}\u0022\u003Enativeptr{T}\u003C/a\u003E\n for use in F#. Note that Common IL Signature Pointers exposed by other .NET languages are converted to\n \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nativeptr{t}\u0022\u003Enativeptr{T}\u003C/a\u003E or \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voidptr.html\u0022\u003Evoidptr\u003C/a\u003E automatically by F#,\n and F# also shows generic-specialized typed native pointers correctly to other .NET languages as Common IL Signature Pointers.\n However, generic typed native pointers are shown as \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.intptr\u0022\u003EIntPtr\u003C/a\u003E to other .NET languages.\n For other languages to interpret generic F# typed native pointers correctly, you should expose this type or\n \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voidptr.html\u0022\u003Evoidptr\u003C/a\u003E instead of \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nativeptr{t}\u0022\u003Enativeptr{T}\u003C/a\u003E.\n Values of this type can be generated by the functions in the \u003Ccode\u003ENativeInterop.NativePtr\u003C/code\u003E module.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-inref-1.html","title":"inref\u003C\u0027T\u003E","content":"inref\u003C\u0027T\u003E \nRepresents a in-argument or readonly managed pointer in F# code. This type should only be used with F# 4.5\u002B.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int-1.html","title":"int\u003C\u0027Measure\u003E","content":"int\u003C\u0027Measure\u003E \nThe type of 32-bit signed integer numbers, annotated with a unit of measure. The unit\n of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int32\u0022\u003EInt32\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int.html","title":"int","content":"int \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int32\u0022\u003EInt32\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int16-1.html","title":"int16\u003C\u0027Measure\u003E","content":"int16\u003C\u0027Measure\u003E \nThe type of 16-bit signed integer numbers, annotated with a unit of measure. The unit\n of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int16\u0022\u003EInt16\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int16.html","title":"int16","content":"int16 \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int16\u0022\u003EInt16\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int32-1.html","title":"int32\u003C\u0027Measure\u003E","content":"int32\u003C\u0027Measure\u003E \nThe type of 32-bit signed integer numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int32\u0022\u003EInt32\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int32.html","title":"int32","content":"int32 \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int32\u0022\u003EInt32\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int64-1.html","title":"int64\u003C\u0027Measure\u003E","content":"int64\u003C\u0027Measure\u003E \nThe type of 64-bit signed integer numbers, annotated with a unit of measure. The unit\n of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int64\u0022\u003EInt64\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int64.html","title":"int64","content":"int64 \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.int64\u0022\u003EInt64\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int8-1.html","title":"int8\u003C\u0027Measure\u003E","content":"int8\u003C\u0027Measure\u003E \nThe type of 8-bit signed integer numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.sbyte\u0022\u003ESByte\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-int8.html","title":"int8","content":"int8 \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.sbyte\u0022\u003ESByte\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nativeint-1.html","title":"nativeint\u003C\u0027Measure\u003E","content":"nativeint\u003C\u0027Measure\u003E \nThe type of machine-sized signed integer numbers, annotated with a unit of measure. \n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to \n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.intptr\u0022\u003EIntPtr\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nativeptr-1.html","title":"nativeptr\u003C\u0027T\u003E","content":"nativeptr\u003C\u0027T\u003E \nRepresents an unmanaged pointer in F# code. \nThis type should only be used when writing F# code that interoperates\n with native code. Use of this type in F# code may result in\n unverifiable code being generated. Conversions to and from the \n \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nativeint.html\u0022\u003Enativeint\u003C/a\u003E type may be required. Values of this type can be generated\n by the functions in the \u003Ccode\u003ENativeInterop.NativePtr\u003C/code\u003E module.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-obj.html","title":"obj","content":"obj \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.object\u0022\u003EObject\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-objnull.html","title":"objnull","content":"objnull \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.object\u0022\u003EObject\u003C/a\u003E or null.\n With the \u0027nullable reference types\u0027 feature, this is an alias to \u0027obj | null\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-option-1.html","title":"\u0027T option","content":"\u0027T option \nThe type of optional values. When used from other CLI languages the\n empty option is the \u003Ccode\u003Enull\u003C/code\u003E value.  \nUse the constructors \u003Ccode\u003ESome\u003C/code\u003E and \u003Ccode\u003ENone\u003C/code\u003E to create values of this type.\n Use the values in the \u003Ccode\u003EOption\u003C/code\u003E module to manipulate values of this type,\n or pattern match against the values directly.\n\n \u0027None\u0027 values will appear as the value \u003Ccode\u003Enull\u003C/code\u003E to other CLI languages.\n Instance methods on this type will appear as static methods to other CLI languages\n due to the use of \u003Ccode\u003Enull\u003C/code\u003E as a value representation. \n\u0027T option.IsNone \nIsNone \n\u0027T option.IsSome \nIsSome \n\u0027T option.Value \nValue \n\u0027T option.None \nNone","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-option-1.html#IsNone","title":"\u0027T option.IsNone","content":"\u0027T option.IsNone \nIsNone \nReturn \u0027true\u0027 if the option is a \u0027None\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-option-1.html#IsSome","title":"\u0027T option.IsSome","content":"\u0027T option.IsSome \nIsSome \nReturn \u0027true\u0027 if the option is a \u0027Some\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-option-1.html#Value","title":"\u0027T option.Value","content":"\u0027T option.Value \nValue \nGet the value of a \u0027Some\u0027 option. A NullReferenceException is raised if the option is \u0027None\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-option-1.html#None","title":"\u0027T option.None","content":"\u0027T option.None \nNone \nCreate an option value that is a \u0027None\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-outref-1.html","title":"outref\u003C\u0027T\u003E","content":"outref\u003C\u0027T\u003E \nRepresents a out-argument managed pointer in F# code. This type should only be used with F# 4.5\u002B.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-ref-1.html","title":"\u0027T ref","content":"\u0027T ref \nThe type of mutable references. Use the functions [!] and [:=] to get and\n set values of this type. \n\u0027T ref.Value \nValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-ref-1.html#Value","title":"\u0027T ref.Value","content":"\u0027T ref.Value \nValue \nThe current value of the reference cell","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sbyte-1.html","title":"sbyte\u003C\u0027Measure\u003E","content":"sbyte\u003C\u0027Measure\u003E \nThe type of 8-bit signed integer numbers, annotated with a unit of measure. The unit\n of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.sbyte\u0022\u003ESByte\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-sbyte.html","title":"sbyte","content":"sbyte \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.sbyte\u0022\u003ESByte\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-single-1.html","title":"single\u003C\u0027Measure\u003E","content":"single\u003C\u0027Measure\u003E \nThe type of single-precision floating point numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.single\u0022\u003ESingle\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-single.html","title":"single","content":"single \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.single\u0022\u003ESingle\u003C/a\u003E. Identical to \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-float32.html\u0022\u003Efloat32\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint-1.html","title":"uint\u003C\u0027Measure\u003E","content":"uint\u003C\u0027Measure\u003E \nThe type of 32-bit unsigned integer numbers, annotated with a unit of measure. \n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to \n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint32\u0022\u003EUInt32\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint.html","title":"uint","content":"uint \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint32\u0022\u003EUInt32\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint16-1.html","title":"uint16\u003C\u0027Measure\u003E","content":"uint16\u003C\u0027Measure\u003E \nThe type of 16-bit unsigned integer numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint16\u0022\u003EUInt16\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint16.html","title":"uint16","content":"uint16 \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint16\u0022\u003EUInt16\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint32-1.html","title":"uint32\u003C\u0027Measure\u003E","content":"uint32\u003C\u0027Measure\u003E \nThe type of 32-bit unsigned integer numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint32\u0022\u003EUInt32\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint32.html","title":"uint32","content":"uint32 \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint32\u0022\u003EUInt32\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint64-1.html","title":"uint64\u003C\u0027Measure\u003E","content":"uint64\u003C\u0027Measure\u003E \nThe type of 64-bit unsigned integer numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint64\u0022\u003EUInt64\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint64.html","title":"uint64","content":"uint64 \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uint64\u0022\u003EUInt64\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint8-1.html","title":"uint8\u003C\u0027Measure\u003E","content":"uint8\u003C\u0027Measure\u003E \nThe type of 8-bit unsigned integer numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.byte\u0022\u003EByte\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-uint8.html","title":"uint8","content":"uint8 \nAn abbreviation for the CLI type \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.byte\u0022\u003EByte\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-unativeint-1.html","title":"unativeint\u003C\u0027Measure\u003E","content":"unativeint\u003C\u0027Measure\u003E \nThe type of machine-sized unsigned integer numbers, annotated with a unit of measure.\n The unit of measure is erased in compiled code and when values of this type\n are analyzed using reflection. The type is representationally equivalent to\n \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.uintptr\u0022\u003EUIntPtr\u003C/a\u003E.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-unit-0.html","title":"unit","content":"unit \nThe type \u0027unit\u0027, which has only one value \u0022()\u0022. This value is special and\n always uses the representation \u0027null\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voidptr.html","title":"voidptr","content":"voidptr \nRepresents an untyped unmanaged pointer in F# code. \nThis type should only be used when writing F# code that interoperates\n with native code. Use of this type in F# code may result in\n unverifiable code being generated. Conversions to and from the \n \u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-nativeint.html\u0022\u003Enativeint\u003C/a\u003E type may be required. Values of this type can be generated\n by the functions in the \u003Ccode\u003ENativeInterop.NativePtr\u003C/code\u003E module.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voption-1.html","title":"\u0027T voption","content":"\u0027T voption \nThe type of optional values, represented as structs. \nUse the constructors \u003Ccode\u003EValueSome\u003C/code\u003E and \u003Ccode\u003EValueNone\u003C/code\u003E to create values of this type.\n Use the values in the \u003Ccode\u003EValueOption\u003C/code\u003E module to manipulate values of this type,\n or pattern match against the values directly. \n\u0027T voption.IsNone \nIsNone \n\u0027T voption.IsValueSome \nIsValueSome \n\u0027T voption.IsSome \nIsSome \n\u0027T voption.IsValueNone \nIsValueNone \n\u0027T voption.Value \nValue \n\u0027T voption.None \nNone","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voption-1.html#IsNone","title":"\u0027T voption.IsNone","content":"\u0027T voption.IsNone \nIsNone \nReturn \u0027true\u0027 if the value option is a \u0027ValueNone\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voption-1.html#IsValueSome","title":"\u0027T voption.IsValueSome","content":"\u0027T voption.IsValueSome \nIsValueSome \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voption-1.html#IsSome","title":"\u0027T voption.IsSome","content":"\u0027T voption.IsSome \nIsSome \nReturn \u0027true\u0027 if the value option is a \u0027ValueSome\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voption-1.html#IsValueNone","title":"\u0027T voption.IsValueNone","content":"\u0027T voption.IsValueNone \nIsValueNone \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voption-1.html#Value","title":"\u0027T voption.Value","content":"\u0027T voption.Value \nValue \nGet the value of a \u0027ValueSome\u0027 option. An InvalidOperationException is raised if the option is \u0027ValueNone\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-voption-1.html#None","title":"\u0027T voption.None","content":"\u0027T voption.None \nNone \nCreate a value option value that is a \u0027ValueNone\u0027 value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html","title":"ResumableCode","content":"ResumableCode \n Contains functions for composing resumable code blocks \nResumableCode.Combine \nCombine \nResumableCode.Delay \nDelay \nResumableCode.For \nFor \nResumableCode.Yield \nYield \nResumableCode.TryFinally \nTryFinally \nResumableCode.TryFinallyAsync \nTryFinallyAsync \nResumableCode.TryWith \nTryWith \nResumableCode.Using \nUsing \nResumableCode.While \nWhile \nResumableCode.Zero \nZero \nResumableCode.CombineDynamic \nCombineDynamic \nResumableCode.WhileDynamic \nWhileDynamic \nResumableCode.TryFinallyAsyncDynamic \nTryFinallyAsyncDynamic \nResumableCode.TryWithDynamic \nTryWithDynamic \nResumableCode.YieldDynamic \nYieldDynamic","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#Combine","title":"ResumableCode.Combine","content":"ResumableCode.Combine \nCombine \n Sequences one section of resumable code after another","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#Delay","title":"ResumableCode.Delay","content":"ResumableCode.Delay \nDelay \n Creates resumable code whose definition is a delayed function","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#For","title":"ResumableCode.For","content":"ResumableCode.For \nFor \n Specifies resumable code which iterates an input sequence","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#Yield","title":"ResumableCode.Yield","content":"ResumableCode.Yield \nYield \n Specifies resumable code which iterates yields","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#TryFinally","title":"ResumableCode.TryFinally","content":"ResumableCode.TryFinally \nTryFinally \n Specifies resumable code which executes with try/finally semantics","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#TryFinallyAsync","title":"ResumableCode.TryFinallyAsync","content":"ResumableCode.TryFinallyAsync \nTryFinallyAsync \n Specifies resumable code which executes with try/finally semantics","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#TryWith","title":"ResumableCode.TryWith","content":"ResumableCode.TryWith \nTryWith \n Specifies resumable code which executes with try/with semantics","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#Using","title":"ResumableCode.Using","content":"ResumableCode.Using \nUsing \n Specifies resumable code which executes with \u0027use\u0027 semantics","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#While","title":"ResumableCode.While","content":"ResumableCode.While \nWhile \n Specifies resumable code which executes a loop","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#Zero","title":"ResumableCode.Zero","content":"ResumableCode.Zero \nZero \n Specifies resumable code which does nothing","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#CombineDynamic","title":"ResumableCode.CombineDynamic","content":"ResumableCode.CombineDynamic \nCombineDynamic \n The dynamic implementation of the corresponding operation. This operation should not be used directly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#WhileDynamic","title":"ResumableCode.WhileDynamic","content":"ResumableCode.WhileDynamic \nWhileDynamic \n The dynamic implementation of the corresponding operation. This operation should not be used directly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#TryFinallyAsyncDynamic","title":"ResumableCode.TryFinallyAsyncDynamic","content":"ResumableCode.TryFinallyAsyncDynamic \nTryFinallyAsyncDynamic \n The dynamic implementation of the corresponding operation. This operation should not be used directly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#TryWithDynamic","title":"ResumableCode.TryWithDynamic","content":"ResumableCode.TryWithDynamic \nTryWithDynamic \n The dynamic implementation of the corresponding operation. This operation should not be used directly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode.html#YieldDynamic","title":"ResumableCode.YieldDynamic","content":"ResumableCode.YieldDynamic \nYieldDynamic \n The dynamic implementation of the corresponding operation. This operation should not be used directly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-runtimehelpers.html","title":"RuntimeHelpers","content":"RuntimeHelpers \nA group of functions used as part of the compiled representation of F# sequence expressions. \nRuntimeHelpers.EnumerateWhile \nEnumerateWhile \nRuntimeHelpers.EnumerateThenFinally \nEnumerateThenFinally \nRuntimeHelpers.EnumerateTryWith \nEnumerateTryWith \nRuntimeHelpers.EnumerateFromFunctions \nEnumerateFromFunctions \nRuntimeHelpers.EnumerateUsing \nEnumerateUsing \nRuntimeHelpers.CreateEvent \nCreateEvent","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-runtimehelpers.html#EnumerateWhile","title":"RuntimeHelpers.EnumerateWhile","content":"RuntimeHelpers.EnumerateWhile \nEnumerateWhile \nThe F# compiler emits calls to this function to\n implement the \u003Ccode\u003Ewhile\u003C/code\u003E operator for F# sequence expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-runtimehelpers.html#EnumerateThenFinally","title":"RuntimeHelpers.EnumerateThenFinally","content":"RuntimeHelpers.EnumerateThenFinally \nEnumerateThenFinally \nThe F# compiler emits calls to this function to\n implement the \u003Ccode\u003Etry/finally\u003C/code\u003E operator for F# sequence expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-runtimehelpers.html#EnumerateTryWith","title":"RuntimeHelpers.EnumerateTryWith","content":"RuntimeHelpers.EnumerateTryWith \nEnumerateTryWith \nThe F# compiler emits calls to this function to\n implement the \u003Ccode\u003Etry/with\u003C/code\u003E operator for F# sequence expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-runtimehelpers.html#EnumerateFromFunctions","title":"RuntimeHelpers.EnumerateFromFunctions","content":"RuntimeHelpers.EnumerateFromFunctions \nEnumerateFromFunctions \nThe F# compiler emits calls to this function to implement the compiler-intrinsic\n conversions from untyped IEnumerable sequences to typed sequences.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-runtimehelpers.html#EnumerateUsing","title":"RuntimeHelpers.EnumerateUsing","content":"RuntimeHelpers.EnumerateUsing \nEnumerateUsing \nThe F# compiler emits calls to this function to implement the \u003Ccode\u003Euse\u003C/code\u003E operator for F# sequence\n expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-runtimehelpers.html#CreateEvent","title":"RuntimeHelpers.CreateEvent","content":"RuntimeHelpers.CreateEvent \nCreateEvent \nCreates an anonymous event with the given handlers.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-statemachinehelpers.html","title":"StateMachineHelpers","content":"StateMachineHelpers \n Contains compiler intrinsics related to the definition of state machines. \nStateMachineHelpers.__debugPoint \n__debugPoint \nStateMachineHelpers.__useResumableCode \n__useResumableCode \nStateMachineHelpers.__resumableEntry \n__resumableEntry \nStateMachineHelpers.__resumeAt \n__resumeAt \nStateMachineHelpers.__stateMachine \n__stateMachine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-statemachinehelpers.html#__debugPoint","title":"StateMachineHelpers.__debugPoint","content":"StateMachineHelpers.__debugPoint \n__debugPoint \n\n Indicates a named debug point arising from the context of inlined code.\n  \n\n Only a limited range of debug point names are supported.\n\n If the debug point name is the empty string then the range used for the debug point will be\n the range of the outermost expression prior to inlining.\n\n If the debug point name is \u003Ccode\u003EForLoop.InOrToKeyword\u003C/code\u003E and the code was ultimately\n from a \u003Ccode\u003Efor .. in .. do\u003C/code\u003E or \u003Ccode\u003Efor .. = .. to .. do\u003C/code\u003E construct in a computation expression,\n de-sugared to an inlined \u003Ccode\u003Ebuilder.For\u003C/code\u003E call, then the name \u0022ForLoop.InOrToKeyword\u0022 can be used.\n The range of the debug point will be precisely the range of the \u003Ccode\u003Ein\u003C/code\u003E or \u003Ccode\u003Eto\u003C/code\u003E keyword.\n\n If the name doesn\u0027t correspond to a known debug point arising from the original source context, then\n an opt-in warning 3514 is emitted, and the range used for the debug point will be\n the range of the root expression prior to inlining.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-statemachinehelpers.html#__useResumableCode","title":"StateMachineHelpers.__useResumableCode","content":"StateMachineHelpers.__useResumableCode \n__useResumableCode \n When used in a conditional, statically determines whether the \u0027then\u0027 branch\n represents valid resumable code and provides an alternative implementation\n if not.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-statemachinehelpers.html#__resumableEntry","title":"StateMachineHelpers.__resumableEntry","content":"StateMachineHelpers.__resumableEntry \n__resumableEntry \n Indicates a resumption point within resumable code","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-statemachinehelpers.html#__resumeAt","title":"StateMachineHelpers.__resumeAt","content":"StateMachineHelpers.__resumeAt \n__resumeAt \n\n Indicates to jump to a resumption point within resumable code.\n This may be the first statement in a MoveNextMethodImpl.\n The integer must be a valid resumption point within this resumable code.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-statemachinehelpers.html#__stateMachine","title":"StateMachineHelpers.__stateMachine","content":"StateMachineHelpers.__stateMachine \n__stateMachine \n\n Statically generates a closure struct type based on ResumableStateMachine,\n At runtime an instance of the new struct type is populated and \u0027afterMethod\u0027 is called\n to consume it.\n  \n\n At compile-time, the ResumableStateMachine type guides the generation of a new struct type by the F# compiler\n with closure-capture fields in a way similar to an object expression. \n Any mention of the ResumableStateMachine type in any the \u0027methods\u0027 is rewritten to this\n fresh struct type.  The \u0027methods\u0027 are used to implement the interfaces on ResumableStateMachine and are also rewritten.\n The \u0027after\u0027 method is then executed and must eliminate the ResumableStateMachine. For example,\n its return type must not include ResumableStateMachine.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-aftercode-2.html","title":"AfterCode\u003C\u0027Data, \u0027Result\u003E","content":"AfterCode\u003C\u0027Data, \u0027Result\u003E \n Defines the implementation of the code run after the creation of a struct state machine. \nAfterCode\u003C\u0027Data, \u0027Result\u003E.Invoke \nInvoke","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-aftercode-2.html#Invoke","title":"AfterCode\u003C\u0027Data, \u0027Result\u003E.Invoke","content":"AfterCode\u003C\u0027Data, \u0027Result\u003E.Invoke \nInvoke \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-arraycollector-1.html","title":"ArrayCollector\u003C\u0027T\u003E","content":"ArrayCollector\u003C\u0027T\u003E \n Collects elements and builds an array \nArrayCollector\u003C\u0027T\u003E.Add \nAdd \nArrayCollector\u003C\u0027T\u003E.AddMany \nAddMany \nArrayCollector\u003C\u0027T\u003E.AddManyAndClose \nAddManyAndClose \nArrayCollector\u003C\u0027T\u003E.Close \nClose \nArrayCollector\u003C\u0027T\u003E.ResizeArray \nResizeArray \nArrayCollector\u003C\u0027T\u003E.First \nFirst \nArrayCollector\u003C\u0027T\u003E.Second \nSecond \nArrayCollector\u003C\u0027T\u003E.Count \nCount","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-arraycollector-1.html#Add","title":"ArrayCollector\u003C\u0027T\u003E.Add","content":"ArrayCollector\u003C\u0027T\u003E.Add \nAdd \n Add an element to the collector","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-arraycollector-1.html#AddMany","title":"ArrayCollector\u003C\u0027T\u003E.AddMany","content":"ArrayCollector\u003C\u0027T\u003E.AddMany \nAddMany \n Add multiple elements to the collector","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-arraycollector-1.html#AddManyAndClose","title":"ArrayCollector\u003C\u0027T\u003E.AddManyAndClose","content":"ArrayCollector\u003C\u0027T\u003E.AddManyAndClose \nAddManyAndClose \n Add multiple elements to the collector and return the resulting array","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-arraycollector-1.html#Close","title":"ArrayCollector\u003C\u0027T\u003E.Close","content":"ArrayCollector\u003C\u0027T\u003E.Close \nClose \n Return the resulting list","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-arraycollector-1.html#ResizeArray","title":"ArrayCollector\u003C\u0027T\u003E.ResizeArray","content":"ArrayCollector\u003C\u0027T\u003E.ResizeArray \nResizeArray \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-arraycollector-1.html#First","title":"ArrayCollector\u003C\u0027T\u003E.First","content":"ArrayCollector\u003C\u0027T\u003E.First \nFirst \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-arraycollector-1.html#Second","title":"ArrayCollector\u003C\u0027T\u003E.Second","content":"ArrayCollector\u003C\u0027T\u003E.Second \nSecond \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-arraycollector-1.html#Count","title":"ArrayCollector\u003C\u0027T\u003E.Count","content":"ArrayCollector\u003C\u0027T\u003E.Count \nCount \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-generatedsequencebase-1.html","title":"GeneratedSequenceBase\u003C\u0027T\u003E","content":"GeneratedSequenceBase\u003C\u0027T\u003E \nThe F# compiler emits implementations of this type for compiled sequence expressions. \nGeneratedSequenceBase\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nGeneratedSequenceBase\u003C\u0027T\u003E.Close \nClose \nGeneratedSequenceBase\u003C\u0027T\u003E.GenerateNext \nGenerateNext \nGeneratedSequenceBase\u003C\u0027T\u003E.GetFreshEnumerator \nGetFreshEnumerator \nGeneratedSequenceBase\u003C\u0027T\u003E.CheckClose \nCheckClose \nGeneratedSequenceBase\u003C\u0027T\u003E.LastGenerated \nLastGenerated","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-generatedsequencebase-1.html#\u0060\u0060.ctor\u0060\u0060","title":"GeneratedSequenceBase\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"GeneratedSequenceBase\u003C\u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nThe F# compiler emits implementations of this type for compiled sequence expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-generatedsequencebase-1.html#Close","title":"GeneratedSequenceBase\u003C\u0027T\u003E.Close","content":"GeneratedSequenceBase\u003C\u0027T\u003E.Close \nClose \nThe F# compiler emits implementations of this type for compiled sequence expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-generatedsequencebase-1.html#GenerateNext","title":"GeneratedSequenceBase\u003C\u0027T\u003E.GenerateNext","content":"GeneratedSequenceBase\u003C\u0027T\u003E.GenerateNext \nGenerateNext \nThe F# compiler emits implementations of this type for compiled sequence expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-generatedsequencebase-1.html#GetFreshEnumerator","title":"GeneratedSequenceBase\u003C\u0027T\u003E.GetFreshEnumerator","content":"GeneratedSequenceBase\u003C\u0027T\u003E.GetFreshEnumerator \nGetFreshEnumerator \nThe F# compiler emits implementations of this type for compiled sequence expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-generatedsequencebase-1.html#CheckClose","title":"GeneratedSequenceBase\u003C\u0027T\u003E.CheckClose","content":"GeneratedSequenceBase\u003C\u0027T\u003E.CheckClose \nCheckClose \nThe F# compiler emits implementations of this type for compiled sequence expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-generatedsequencebase-1.html#LastGenerated","title":"GeneratedSequenceBase\u003C\u0027T\u003E.LastGenerated","content":"GeneratedSequenceBase\u003C\u0027T\u003E.LastGenerated \nLastGenerated \nThe F# compiler emits implementations of this type for compiled sequence expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-iprovidednamespace.html","title":"IProvidedNamespace","content":"IProvidedNamespace \n Represents a namespace provided by a type provider component. \nIProvidedNamespace.GetNestedNamespaces \nGetNestedNamespaces \nIProvidedNamespace.GetTypes \nGetTypes \nIProvidedNamespace.ResolveTypeName \nResolveTypeName \nIProvidedNamespace.NamespaceName \nNamespaceName","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-iprovidednamespace.html#GetNestedNamespaces","title":"IProvidedNamespace.GetNestedNamespaces","content":"IProvidedNamespace.GetNestedNamespaces \nGetNestedNamespaces \n The sub-namespaces in this namespace. An optional member to prevent generation of namespaces until an outer namespace is explored.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-iprovidednamespace.html#GetTypes","title":"IProvidedNamespace.GetTypes","content":"IProvidedNamespace.GetTypes \nGetTypes \n\n The top-level types\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-iprovidednamespace.html#ResolveTypeName","title":"IProvidedNamespace.ResolveTypeName","content":"IProvidedNamespace.ResolveTypeName \nResolveTypeName \n\n Compilers call this method to query a type provider for a type \u003Ccode\u003Ename\u003C/code\u003E.\n  \nResolver should return a type called \u003Ccode\u003Ename\u003C/code\u003E in namespace \u003Ccode\u003ENamespaceName\u003C/code\u003E or \u003Ccode\u003Enull\u003C/code\u003E if the type is unknown.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-iprovidednamespace.html#NamespaceName","title":"IProvidedNamespace.NamespaceName","content":"IProvidedNamespace.NamespaceName \nNamespaceName \n Namespace name the provider injects types into.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-iresumablestatemachine-1.html","title":"IResumableStateMachine\u003C\u0027Data\u003E","content":"IResumableStateMachine\u003C\u0027Data\u003E \n \nIResumableStateMachine\u003C\u0027Data\u003E.Data \nData \nIResumableStateMachine\u003C\u0027Data\u003E.ResumptionPoint \nResumptionPoint","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-iresumablestatemachine-1.html#Data","title":"IResumableStateMachine\u003C\u0027Data\u003E.Data","content":"IResumableStateMachine\u003C\u0027Data\u003E.Data \nData \n Copy-out or copy-in the data of the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-iresumablestatemachine-1.html#ResumptionPoint","title":"IResumableStateMachine\u003C\u0027Data\u003E.ResumptionPoint","content":"IResumableStateMachine\u003C\u0027Data\u003E.ResumptionPoint \nResumptionPoint \n Get the resumption point of the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider.html","title":"ITypeProvider","content":"ITypeProvider \n Represents an instantiation of a type provider component. \nITypeProvider.ApplyStaticArguments \nApplyStaticArguments \nITypeProvider.GetGeneratedAssemblyContents \nGetGeneratedAssemblyContents \nITypeProvider.GetInvokerExpression \nGetInvokerExpression \nITypeProvider.GetNamespaces \nGetNamespaces \nITypeProvider.GetStaticParameters \nGetStaticParameters \nITypeProvider.Invalidate \nInvalidate","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider.html#ApplyStaticArguments","title":"ITypeProvider.ApplyStaticArguments","content":"ITypeProvider.ApplyStaticArguments \nApplyStaticArguments \n\n Apply static arguments to a provided type that accepts static arguments. \n  \nThe provider must return a type with the given mangled name.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider.html#GetGeneratedAssemblyContents","title":"ITypeProvider.GetGeneratedAssemblyContents","content":"ITypeProvider.GetGeneratedAssemblyContents \nGetGeneratedAssemblyContents \n Get the physical contents of the given logical provided assembly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider.html#GetInvokerExpression","title":"ITypeProvider.GetInvokerExpression","content":"ITypeProvider.GetInvokerExpression \nGetInvokerExpression \n\n Called by the compiler to ask for an Expression tree to replace the given MethodBase with.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider.html#GetNamespaces","title":"ITypeProvider.GetNamespaces","content":"ITypeProvider.GetNamespaces \nGetNamespaces \n Gets the namespaces provided by the type provider.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider.html#GetStaticParameters","title":"ITypeProvider.GetStaticParameters","content":"ITypeProvider.GetStaticParameters \nGetStaticParameters \n\n Get the static parameters for a provided type. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider.html#Invalidate","title":"ITypeProvider.Invalidate","content":"ITypeProvider.Invalidate \nInvalidate \n Triggered when an assumption changes that invalidates the resolutions so far reported by the provider","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider2.html","title":"ITypeProvider2","content":"ITypeProvider2 \n Represents additional, optional information for a type provider component \nITypeProvider2.ApplyStaticArgumentsForMethod \nApplyStaticArgumentsForMethod \nITypeProvider2.GetStaticParametersForMethod \nGetStaticParametersForMethod","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider2.html#ApplyStaticArgumentsForMethod","title":"ITypeProvider2.ApplyStaticArgumentsForMethod","content":"ITypeProvider2.ApplyStaticArgumentsForMethod \nApplyStaticArgumentsForMethod \n\n Apply static arguments to a provided method that accepts static arguments. \n  \nThe provider must return a provided method with the given mangled name.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-itypeprovider2.html#GetStaticParametersForMethod","title":"ITypeProvider2.GetStaticParametersForMethod","content":"ITypeProvider2.GetStaticParametersForMethod \nGetStaticParametersForMethod \n\n Get the static parameters for a provided method. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-listcollector-1.html","title":"ListCollector\u003C\u0027T\u003E","content":"ListCollector\u003C\u0027T\u003E \n Collects elements and builds a list \nListCollector\u003C\u0027T\u003E.Add \nAdd \nListCollector\u003C\u0027T\u003E.AddMany \nAddMany \nListCollector\u003C\u0027T\u003E.AddManyAndClose \nAddManyAndClose \nListCollector\u003C\u0027T\u003E.Close \nClose \nListCollector\u003C\u0027T\u003E.Result \nResult \nListCollector\u003C\u0027T\u003E.LastCons \nLastCons","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-listcollector-1.html#Add","title":"ListCollector\u003C\u0027T\u003E.Add","content":"ListCollector\u003C\u0027T\u003E.Add \nAdd \n Add an element to the collector","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-listcollector-1.html#AddMany","title":"ListCollector\u003C\u0027T\u003E.AddMany","content":"ListCollector\u003C\u0027T\u003E.AddMany \nAddMany \n Add multiple elements to the collector","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-listcollector-1.html#AddManyAndClose","title":"ListCollector\u003C\u0027T\u003E.AddManyAndClose","content":"ListCollector\u003C\u0027T\u003E.AddManyAndClose \nAddManyAndClose \n Add multiple elements to the collector and return the resulting list","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-listcollector-1.html#Close","title":"ListCollector\u003C\u0027T\u003E.Close","content":"ListCollector\u003C\u0027T\u003E.Close \nClose \n Return the resulting list","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-listcollector-1.html#Result","title":"ListCollector\u003C\u0027T\u003E.Result","content":"ListCollector\u003C\u0027T\u003E.Result \nResult \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-listcollector-1.html#LastCons","title":"ListCollector\u003C\u0027T\u003E.LastCons","content":"ListCollector\u003C\u0027T\u003E.LastCons \nLastCons \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-measureinverse-1.html","title":"MeasureInverse\u003C\u0027Measure\u003E","content":"MeasureInverse\u003C\u0027Measure\u003E \nRepresents the inverse of a measure expressions when returned as a generic argument of a provided type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-measureone.html","title":"MeasureOne","content":"MeasureOne \nRepresents the \u00271\u0027 measure expression when returned as a generic argument of a provided type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-measureproduct-2.html","title":"MeasureProduct\u003C\u0027Measure1, \u0027Measure2\u003E","content":"MeasureProduct\u003C\u0027Measure1, \u0027Measure2\u003E \nRepresents the product of two measure expressions when returned as a generic argument of a provided type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-movenextmethodimpl-1.html","title":"MoveNextMethodImpl\u003C\u0027Data\u003E","content":"MoveNextMethodImpl\u003C\u0027Data\u003E \n Defines the implementation of the MoveNext method for a struct state machine. \nMoveNextMethodImpl\u003C\u0027Data\u003E.Invoke \nInvoke","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-movenextmethodimpl-1.html#Invoke","title":"MoveNextMethodImpl\u003C\u0027Data\u003E.Invoke","content":"MoveNextMethodImpl\u003C\u0027Data\u003E.Invoke \nInvoke \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-noeagerconstraintapplicationattribute.html","title":"NoEagerConstraintApplicationAttribute","content":"NoEagerConstraintApplicationAttribute \nAdding this attribute to the method adjusts the processing of some generic methods\n during overload resolution. \nDuring overload resolution, caller arguments are matched with called arguments\n to extract type information. By default, when the caller argument type is unconstrained (for example\n a simple value \u003Ccode\u003Ex\u003C/code\u003E without known type information), and a method qualifies for\n lambda constraint propagation, then member trait constraints from a method overload\n are eagerly applied to the caller argument type. This causes that overload to be preferred,\n regardless of other method overload resolution rules. Using this attribute suppresses this behaviour. \n  \nNoEagerConstraintApplicationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-noeagerconstraintapplicationattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"NoEagerConstraintApplicationAttribute.\u0060\u0060.ctor\u0060\u0060","content":"NoEagerConstraintApplicationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode-2.html","title":"ResumableCode\u003C\u0027Data, \u0027T\u003E","content":"ResumableCode\u003C\u0027Data, \u0027T\u003E \n A special compiler-recognised delegate type for specifying blocks of resumable code\n with access to the state machine. \nResumableCode\u003C\u0027Data, \u0027T\u003E.Invoke \nInvoke","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablecode-2.html#Invoke","title":"ResumableCode\u003C\u0027Data, \u0027T\u003E.Invoke","content":"ResumableCode\u003C\u0027Data, \u0027T\u003E.Invoke \nInvoke \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablestatemachine-1.html","title":"ResumableStateMachine\u003C\u0027Data\u003E","content":"ResumableStateMachine\u003C\u0027Data\u003E \n Acts as a template for struct state machines introduced by __stateMachine, and also as a reflective implementation \nResumableStateMachine\u003C\u0027Data\u003E.Data \nData \nResumableStateMachine\u003C\u0027Data\u003E.ResumptionPoint \nResumptionPoint \nResumableStateMachine\u003C\u0027Data\u003E.ResumptionDynamicInfo \nResumptionDynamicInfo","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablestatemachine-1.html#Data","title":"ResumableStateMachine\u003C\u0027Data\u003E.Data","content":"ResumableStateMachine\u003C\u0027Data\u003E.Data \nData \n When statically compiled, holds the data for the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablestatemachine-1.html#ResumptionPoint","title":"ResumableStateMachine\u003C\u0027Data\u003E.ResumptionPoint","content":"ResumableStateMachine\u003C\u0027Data\u003E.ResumptionPoint \nResumptionPoint \n When statically compiled, holds the continuation goto-label further execution of the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumablestatemachine-1.html#ResumptionDynamicInfo","title":"ResumableStateMachine\u003C\u0027Data\u003E.ResumptionDynamicInfo","content":"ResumableStateMachine\u003C\u0027Data\u003E.ResumptionDynamicInfo \nResumptionDynamicInfo \nRepresents the delegated runtime continuation for a resumable state machine created dynamically \nThis field is removed from state machines generated using \u0027__stateMachine\u0027. Resumable code\n used in state machines which accesses this field will raise a runtime exception.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumptiondynamicinfo-1.html","title":"ResumptionDynamicInfo\u003C\u0027Data\u003E","content":"ResumptionDynamicInfo\u003C\u0027Data\u003E \n Represents the delegated runtime continuation of a resumable state machine created dynamically \nResumptionDynamicInfo\u003C\u0027Data\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nResumptionDynamicInfo\u003C\u0027Data\u003E.MoveNext \nMoveNext \nResumptionDynamicInfo\u003C\u0027Data\u003E.SetStateMachine \nSetStateMachine \nResumptionDynamicInfo\u003C\u0027Data\u003E.ResumptionFunc \nResumptionFunc \nResumptionDynamicInfo\u003C\u0027Data\u003E.ResumptionData \nResumptionData","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumptiondynamicinfo-1.html#\u0060\u0060.ctor\u0060\u0060","title":"ResumptionDynamicInfo\u003C\u0027Data\u003E.\u0060\u0060.ctor\u0060\u0060","content":"ResumptionDynamicInfo\u003C\u0027Data\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n Create dynamic information for a state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumptiondynamicinfo-1.html#MoveNext","title":"ResumptionDynamicInfo\u003C\u0027Data\u003E.MoveNext","content":"ResumptionDynamicInfo\u003C\u0027Data\u003E.MoveNext \nMoveNext \n Executes the MoveNext implementation of the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumptiondynamicinfo-1.html#SetStateMachine","title":"ResumptionDynamicInfo\u003C\u0027Data\u003E.SetStateMachine","content":"ResumptionDynamicInfo\u003C\u0027Data\u003E.SetStateMachine \nSetStateMachine \n Executes the SetStateMachine implementation of the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumptiondynamicinfo-1.html#ResumptionFunc","title":"ResumptionDynamicInfo\u003C\u0027Data\u003E.ResumptionFunc","content":"ResumptionDynamicInfo\u003C\u0027Data\u003E.ResumptionFunc \nResumptionFunc \n The continuation of the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumptiondynamicinfo-1.html#ResumptionData","title":"ResumptionDynamicInfo\u003C\u0027Data\u003E.ResumptionData","content":"ResumptionDynamicInfo\u003C\u0027Data\u003E.ResumptionData \nResumptionData \n Additional data associated with the state machine","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumptionfunc-1.html","title":"ResumptionFunc\u003C\u0027Data\u003E","content":"ResumptionFunc\u003C\u0027Data\u003E \n Represents the runtime continuation of a resumable state machine created dynamically \nResumptionFunc\u003C\u0027Data\u003E.Invoke \nInvoke","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-resumptionfunc-1.html#Invoke","title":"ResumptionFunc\u003C\u0027Data\u003E.Invoke","content":"ResumptionFunc\u003C\u0027Data\u003E.Invoke \nInvoke \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-setstatemachinemethodimpl-1.html","title":"SetStateMachineMethodImpl\u003C\u0027Data\u003E","content":"SetStateMachineMethodImpl\u003C\u0027Data\u003E \n Defines the implementation of the SetStateMachine method for a struct state machine. \nSetStateMachineMethodImpl\u003C\u0027Data\u003E.Invoke \nInvoke","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-setstatemachinemethodimpl-1.html#Invoke","title":"SetStateMachineMethodImpl\u003C\u0027Data\u003E.Invoke","content":"SetStateMachineMethodImpl\u003C\u0027Data\u003E.Invoke \nInvoke \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderassemblyattribute.html","title":"TypeProviderAssemblyAttribute","content":"TypeProviderAssemblyAttribute \n\u003Cpre\u003EPlace this attribute on a runtime assembly to indicate that there is a corresponding design-time \n assembly that contains a type provider. Runtime and design-time assembly may be the same.\u003C/pre\u003E \nTypeProviderAssemblyAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTypeProviderAssemblyAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTypeProviderAssemblyAttribute.AssemblyName \nAssemblyName","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderassemblyattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"TypeProviderAssemblyAttribute.\u0060\u0060.ctor\u0060\u0060","content":"TypeProviderAssemblyAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderassemblyattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"TypeProviderAssemblyAttribute.\u0060\u0060.ctor\u0060\u0060","content":"TypeProviderAssemblyAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderassemblyattribute.html#AssemblyName","title":"TypeProviderAssemblyAttribute.AssemblyName","content":"TypeProviderAssemblyAttribute.AssemblyName \nAssemblyName \nGets the assembly name.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderattribute.html","title":"TypeProviderAttribute","content":"TypeProviderAttribute \nPlace on a class that implements ITypeProvider to extend the compiler \nTypeProviderAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"TypeProviderAttribute.\u0060\u0060.ctor\u0060\u0060","content":"TypeProviderAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html","title":"TypeProviderConfig","content":"TypeProviderConfig \n If the class that implements ITypeProvider has a constructor that accepts TypeProviderConfig\n then it will be constructed with an instance of TypeProviderConfig. \nTypeProviderConfig.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTypeProviderConfig.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTypeProviderConfig.SystemRuntimeContainsType \nSystemRuntimeContainsType \nTypeProviderConfig.IsInvalidationSupported \nIsInvalidationSupported \nTypeProviderConfig.ReferencedAssemblies \nReferencedAssemblies \nTypeProviderConfig.RuntimeAssembly \nRuntimeAssembly \nTypeProviderConfig.IsHostedExecution \nIsHostedExecution \nTypeProviderConfig.TemporaryFolder \nTemporaryFolder \nTypeProviderConfig.ResolutionFolder \nResolutionFolder \nTypeProviderConfig.SystemRuntimeAssemblyVersion \nSystemRuntimeAssemblyVersion","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#\u0060\u0060.ctor\u0060\u0060","title":"TypeProviderConfig.\u0060\u0060.ctor\u0060\u0060","content":"TypeProviderConfig.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n Create a configuration which calls the given functions for the corresponding operation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#\u0060\u0060.ctor\u0060\u0060","title":"TypeProviderConfig.\u0060\u0060.ctor\u0060\u0060","content":"TypeProviderConfig.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n Create a configuration which calls the given function for the corresponding operation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#SystemRuntimeContainsType","title":"TypeProviderConfig.SystemRuntimeContainsType","content":"TypeProviderConfig.SystemRuntimeContainsType \nSystemRuntimeContainsType \n Checks if given type exists in target system runtime library","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#IsInvalidationSupported","title":"TypeProviderConfig.IsInvalidationSupported","content":"TypeProviderConfig.IsInvalidationSupported \nIsInvalidationSupported \n Indicates if the type provider host responds to invalidation events for type provider instances. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#ReferencedAssemblies","title":"TypeProviderConfig.ReferencedAssemblies","content":"TypeProviderConfig.ReferencedAssemblies \nReferencedAssemblies \n Get the referenced assemblies for the type provider instance.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#RuntimeAssembly","title":"TypeProviderConfig.RuntimeAssembly","content":"TypeProviderConfig.RuntimeAssembly \nRuntimeAssembly \n Get the full path to referenced assembly that caused this type provider instance to be created.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#IsHostedExecution","title":"TypeProviderConfig.IsHostedExecution","content":"TypeProviderConfig.IsHostedExecution \nIsHostedExecution \n Indicates if the type provider instance is used in an environment which executes provided code such as F# Interactive.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#TemporaryFolder","title":"TypeProviderConfig.TemporaryFolder","content":"TypeProviderConfig.TemporaryFolder \nTemporaryFolder \n Get the full path to use for temporary files for the type provider instance.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#ResolutionFolder","title":"TypeProviderConfig.ResolutionFolder","content":"TypeProviderConfig.ResolutionFolder \nResolutionFolder \n Get the full path to use to resolve relative paths in any file name arguments given to the type provider instance.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderconfig.html#SystemRuntimeAssemblyVersion","title":"TypeProviderConfig.SystemRuntimeAssemblyVersion","content":"TypeProviderConfig.SystemRuntimeAssemblyVersion \nSystemRuntimeAssemblyVersion \n version of referenced system runtime assembly","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderdefinitionlocationattribute.html","title":"TypeProviderDefinitionLocationAttribute","content":"TypeProviderDefinitionLocationAttribute \nA type provider may provide an instance of this attribute to indicate the definition location for a provided type or member. \nTypeProviderDefinitionLocationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTypeProviderDefinitionLocationAttribute.Column \nColumn \nTypeProviderDefinitionLocationAttribute.Line \nLine \nTypeProviderDefinitionLocationAttribute.FilePath \nFilePath","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderdefinitionlocationattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"TypeProviderDefinitionLocationAttribute.\u0060\u0060.ctor\u0060\u0060","content":"TypeProviderDefinitionLocationAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderdefinitionlocationattribute.html#Column","title":"TypeProviderDefinitionLocationAttribute.Column","content":"TypeProviderDefinitionLocationAttribute.Column \nColumn \nGets or sets the column for the location.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderdefinitionlocationattribute.html#Line","title":"TypeProviderDefinitionLocationAttribute.Line","content":"TypeProviderDefinitionLocationAttribute.Line \nLine \nGets or sets the line for the location.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderdefinitionlocationattribute.html#FilePath","title":"TypeProviderDefinitionLocationAttribute.FilePath","content":"TypeProviderDefinitionLocationAttribute.FilePath \nFilePath \nGets or sets the file path for the definition location.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeprovidereditorhidemethodsattribute.html","title":"TypeProviderEditorHideMethodsAttribute","content":"TypeProviderEditorHideMethodsAttribute \nIndicates that a code editor should hide all System.Object methods from the intellisense menus for instances of a provided type \nTypeProviderEditorHideMethodsAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeprovidereditorhidemethodsattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"TypeProviderEditorHideMethodsAttribute.\u0060\u0060.ctor\u0060\u0060","content":"TypeProviderEditorHideMethodsAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeprovidertypeattributes.html","title":"TypeProviderTypeAttributes","content":"TypeProviderTypeAttributes \nAdditional type attribute flags related to provided types \nTypeProviderTypeAttributes.SuppressRelocate \nSuppressRelocate \nTypeProviderTypeAttributes.IsErased \nIsErased","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeprovidertypeattributes.html#SuppressRelocate","title":"TypeProviderTypeAttributes.SuppressRelocate","content":"TypeProviderTypeAttributes.SuppressRelocate \nSuppressRelocate \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeprovidertypeattributes.html#IsErased","title":"TypeProviderTypeAttributes.IsErased","content":"TypeProviderTypeAttributes.IsErased \nIsErased \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderxmldocattribute.html","title":"TypeProviderXmlDocAttribute","content":"TypeProviderXmlDocAttribute \n\u003Cpre\u003EA type provider may provide an instance of this attribute to indicate the documentation to show for \n a provided type or member.\u003C/pre\u003E \nTypeProviderXmlDocAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nTypeProviderXmlDocAttribute.CommentText \nCommentText","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderxmldocattribute.html#\u0060\u0060.ctor\u0060\u0060","title":"TypeProviderXmlDocAttribute.\u0060\u0060.ctor\u0060\u0060","content":"TypeProviderXmlDocAttribute.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates an instance of the attribute","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-compilerservices-typeproviderxmldocattribute.html#CommentText","title":"TypeProviderXmlDocAttribute.CommentText","content":"TypeProviderXmlDocAttribute.CommentText \nCommentText \nGets the comment text.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-ampere.html","title":"ampere","content":"ampere \n The SI unit of electric current","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-becquerel.html","title":"becquerel","content":"becquerel \n The SI unit of activity referred to a radionuclide","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-candela.html","title":"candela","content":"candela \n The SI unit of luminous intensity","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-coulomb.html","title":"coulomb","content":"coulomb \n The SI unit of electric charge, amount of electricity","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-farad.html","title":"farad","content":"farad \n The SI unit of capacitance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-gray.html","title":"gray","content":"gray \n The SI unit of absorbed dose","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-henry.html","title":"henry","content":"henry \n The SI unit of inductance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-hertz.html","title":"hertz","content":"hertz \n The SI unit of frequency","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-joule.html","title":"joule","content":"joule \n The SI unit of energy, work, amount of heat","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-katal.html","title":"katal","content":"katal \n The SI unit of catalytic activity","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-kelvin.html","title":"kelvin","content":"kelvin \n The SI unit of thermodynamic temperature","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-kilogram.html","title":"kilogram","content":"kilogram \n The SI unit of mass","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-lumen.html","title":"lumen","content":"lumen \n The SI unit of luminous flux","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-lux.html","title":"lux","content":"lux \n The SI unit of illuminance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-meter.html","title":"meter","content":"meter \n The SI unit of length","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-metre.html","title":"metre","content":"metre \n The SI unit of length","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-mole.html","title":"mole","content":"mole \n The SI unit of amount of substance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-newton.html","title":"newton","content":"newton \n The SI unit of force","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-ohm.html","title":"ohm","content":"ohm \n The SI unit of electric resistance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-pascal.html","title":"pascal","content":"pascal \n The SI unit of pressure, stress","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-second.html","title":"second","content":"second \n The SI unit of time","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-siemens.html","title":"siemens","content":"siemens \n The SI unit of electric conductance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-sievert.html","title":"sievert","content":"sievert \n The SI unit of does equivalent","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-tesla.html","title":"tesla","content":"tesla \n The SI unit of magnetic flux density","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-volt.html","title":"volt","content":"volt \n The SI unit of electric potential difference, electromotive force","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-watt.html","title":"watt","content":"watt \n The SI unit of power, radiant flux","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitnames-weber.html","title":"weber","content":"weber \n The SI unit of magnetic flux","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-a.html","title":"A","content":"A \n A synonym for ampere, the SI unit of electric current","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-bq.html","title":"Bq","content":"Bq \n A synonym for becquerel, the SI unit of activity referred to a radionuclide","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-c.html","title":"C","content":"C \n A synonym for coulomb, the SI unit of electric charge, amount of electricity","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-f.html","title":"F","content":"F \n A synonym for farad, the SI unit of capacitance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-gy.html","title":"Gy","content":"Gy \n A synonym for gray, the SI unit of absorbed dose","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-h.html","title":"H","content":"H \n A synonym for henry, the SI unit of inductance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-hz.html","title":"Hz","content":"Hz \n A synonym for hertz, the SI unit of frequency","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-j.html","title":"J","content":"J \n A synonym for joule, the SI unit of energy, work, amount of heat","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-k.html","title":"K","content":"K \n A synonym for kelvin, the SI unit of thermodynamic temperature","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-n.html","title":"N","content":"N \n A synonym for newton, the SI unit of force","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-pa.html","title":"Pa","content":"Pa \n A synonym for pascal, the SI unit of pressure, stress","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-s-0.html","title":"S","content":"S \n A synonym for siemens, the SI unit of electric conductance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-sv.html","title":"Sv","content":"Sv \n A synonym for sievert, the SI unit of does equivalent","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-t.html","title":"T","content":"T \n A synonym for tesla, the SI unit of magnetic flux density","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-v.html","title":"V","content":"V \n A synonym for volt, the SI unit of electric potential difference, electromotive force","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-w.html","title":"W","content":"W \n A synonym for watt, the SI unit of power, radiant flux","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-wb.html","title":"Wb","content":"Wb \n A synonym for weber, the SI unit of magnetic flux","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-cd.html","title":"cd","content":"cd \n A synonym for candela, the SI unit of luminous intensity","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-kat.html","title":"kat","content":"kat \n A synonym for katal, the SI unit of catalytic activity","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-kg.html","title":"kg","content":"kg \n A synonym for kilogram, the SI unit of mass","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-lm.html","title":"lm","content":"lm \n A synonym for lumen, the SI unit of luminous flux","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-lx.html","title":"lx","content":"lx \n A synonym for lux, the SI unit of illuminance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-m.html","title":"m","content":"m \n A synonym for Metre, the SI unit of length","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-mol.html","title":"mol","content":"mol \n A synonym for mole, the SI unit of amount of substance","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-ohm.html","title":"ohm","content":"ohm \n A synonym for UnitNames.ohm, the SI unit of electric resistance.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-data-unitsystems-si-unitsymbols-s.html","title":"s","content":"s \n A synonym for second, the SI unit of time","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html","title":"Nullable","content":"Nullable \n Functions for converting nullable values \nNullable.byte \nbyte \nNullable.uint8 \nuint8 \nNullable.sbyte \nsbyte \nNullable.int8 \nint8 \nNullable.int16 \nint16 \nNullable.uint16 \nuint16 \nNullable.int \nint \nNullable.uint \nuint \nNullable.enum \nenum \nNullable.int32 \nint32 \nNullable.uint32 \nuint32 \nNullable.int64 \nint64 \nNullable.uint64 \nuint64 \nNullable.float32 \nfloat32 \nNullable.float \nfloat \nNullable.single \nsingle \nNullable.double \ndouble \nNullable.nativeint \nnativeint \nNullable.unativeint \nunativeint \nNullable.decimal \ndecimal \nNullable.char \nchar","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#byte","title":"Nullable.byte","content":"Nullable.byte \nbyte \nConverts the argument to byte. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#uint8","title":"Nullable.uint8","content":"Nullable.uint8 \nuint8 \nConverts the argument to byte. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#sbyte","title":"Nullable.sbyte","content":"Nullable.sbyte \nsbyte \nConverts the argument to signed byte. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#int8","title":"Nullable.int8","content":"Nullable.int8 \nint8 \nConverts the argument to signed byte. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#int16","title":"Nullable.int16","content":"Nullable.int16 \nint16 \nConverts the argument to signed 16-bit integer. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#uint16","title":"Nullable.uint16","content":"Nullable.uint16 \nuint16 \nConverts the argument to unsigned 16-bit integer. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#int","title":"Nullable.int","content":"Nullable.int \nint \nConverts the argument to signed 32-bit integer. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#uint","title":"Nullable.uint","content":"Nullable.uint \nuint \nConverts the argument to an unsigned 32-bit integer. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#enum","title":"Nullable.enum","content":"Nullable.enum \nenum \nConverts the argument to a particular enum type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#int32","title":"Nullable.int32","content":"Nullable.int32 \nint32 \nConverts the argument to signed 32-bit integer. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#uint32","title":"Nullable.uint32","content":"Nullable.uint32 \nuint32 \nConverts the argument to unsigned 32-bit integer. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#int64","title":"Nullable.int64","content":"Nullable.int64 \nint64 \nConverts the argument to signed 64-bit integer. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#uint64","title":"Nullable.uint64","content":"Nullable.uint64 \nuint64 \nConverts the argument to unsigned 64-bit integer. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#float32","title":"Nullable.float32","content":"Nullable.float32 \nfloat32 \nConverts the argument to 32-bit float. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#float","title":"Nullable.float","content":"Nullable.float \nfloat \nConverts the argument to 64-bit float. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#single","title":"Nullable.single","content":"Nullable.single \nsingle \nConverts the argument to 32-bit float. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#double","title":"Nullable.double","content":"Nullable.double \ndouble \nConverts the argument to 64-bit float. This is a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#nativeint","title":"Nullable.nativeint","content":"Nullable.nativeint \nnativeint \nConverts the argument to signed native integer. This is a direct conversion for all \n primitive numeric types. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#unativeint","title":"Nullable.unativeint","content":"Nullable.unativeint \nunativeint \nConverts the argument to unsigned native integer using a direct conversion for all \n primitive numeric types. Otherwise the operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#decimal","title":"Nullable.decimal","content":"Nullable.decimal \ndecimal \nConverts the argument to System.Decimal using a direct conversion for all \n primitive numeric types. The operation requires an appropriate\n static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullablemodule.html#char","title":"Nullable.char","content":"Nullable.char \nchar \nConverts the argument to character. Numeric inputs are converted according to the UTF-16 \n encoding for characters. The operation requires an appropriate static conversion method on the input type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html","title":"NullableOperators","content":"NullableOperators \n Operators for working with nullable values, primarily used on F# queries. \nNullableOperators.(?\u003E=) \n(?\u003E=) \nNullableOperators.(?\u003E) \n(?\u003E) \nNullableOperators.(?\u003C=) \n(?\u003C=) \nNullableOperators.(?\u003C) \n(?\u003C) \nNullableOperators.(?=) \n(?=) \nNullableOperators.(?\u003C\u003E) \n(?\u003C\u003E) \nNullableOperators.(\u003E=?) \n(\u003E=?) \nNullableOperators.(\u003E?) \n(\u003E?) \nNullableOperators.(\u003C=?) \n(\u003C=?) \nNullableOperators.(\u003C?) \n(\u003C?) \nNullableOperators.(=?) \n(=?) \nNullableOperators.(\u003C\u003E?) \n(\u003C\u003E?) \nNullableOperators.(?\u003E=?) \n(?\u003E=?) \nNullableOperators.(?\u003E?) \n(?\u003E?) \nNullableOperators.(?\u003C=?) \n(?\u003C=?) \nNullableOperators.(?\u003C?) \n(?\u003C?) \nNullableOperators.(?=?) \n(?=?) \nNullableOperators.(?\u003C\u003E?) \n(?\u003C\u003E?) \nNullableOperators.(?\u002B) \n(?\u002B) \nNullableOperators.(\u002B?) \n(\u002B?) \nNullableOperators.(?\u002B?) \n(?\u002B?) \nNullableOperators.(?-) \n(?-) \nNullableOperators.(-?) \n(-?) \nNullableOperators.(?-?) \n(?-?) \nNullableOperators.( ?* ) \n( ?* ) \nNullableOperators.( *? ) \n( *? ) \nNullableOperators.(?*?) \n(?*?) \nNullableOperators.(?%) \n(?%) \nNullableOperators.(%?) \n(%?) \nNullableOperators.(?%?) \n(?%?) \nNullableOperators.(?/) \n(?/) \nNullableOperators.(/?) \n(/?) \nNullableOperators.(?/?) \n(?/?)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003E=)","title":"NullableOperators.(?\u003E=)","content":"NullableOperators.(?\u003E=) \n(?\u003E=) \nThe \u0027\u003E=\u0027 operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003E)","title":"NullableOperators.(?\u003E)","content":"NullableOperators.(?\u003E) \n(?\u003E) \nThe \u0027\u003E\u0027 operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003C=)","title":"NullableOperators.(?\u003C=)","content":"NullableOperators.(?\u003C=) \n(?\u003C=) \nThe \u0027\u003C=\u0027 operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003C)","title":"NullableOperators.(?\u003C)","content":"NullableOperators.(?\u003C) \n(?\u003C) \nThe \u0027\u003C\u0027 operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?=)","title":"NullableOperators.(?=)","content":"NullableOperators.(?=) \n(?=) \nThe \u0027=\u0027 operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003C\u003E)","title":"NullableOperators.(?\u003C\u003E)","content":"NullableOperators.(?\u003C\u003E) \n(?\u003C\u003E) \nThe \u0027\u003C\u003E\u0027 operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(\u003E=?)","title":"NullableOperators.(\u003E=?)","content":"NullableOperators.(\u003E=?) \n(\u003E=?) \nThe \u0027\u003E=\u0027 operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(\u003E?)","title":"NullableOperators.(\u003E?)","content":"NullableOperators.(\u003E?) \n(\u003E?) \nThe \u0027\u003E\u0027 operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(\u003C=?)","title":"NullableOperators.(\u003C=?)","content":"NullableOperators.(\u003C=?) \n(\u003C=?) \nThe \u0027\u003C=\u0027 operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(\u003C?)","title":"NullableOperators.(\u003C?)","content":"NullableOperators.(\u003C?) \n(\u003C?) \nThe \u0027\u003C\u0027 operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(=?)","title":"NullableOperators.(=?)","content":"NullableOperators.(=?) \n(=?) \nThe \u0027=\u0027 operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(\u003C\u003E?)","title":"NullableOperators.(\u003C\u003E?)","content":"NullableOperators.(\u003C\u003E?) \n(\u003C\u003E?) \nThe \u0027\u003C\u003E\u0027 operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003E=?)","title":"NullableOperators.(?\u003E=?)","content":"NullableOperators.(?\u003E=?) \n(?\u003E=?) \nThe \u0027\u003E=\u0027 operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003E?)","title":"NullableOperators.(?\u003E?)","content":"NullableOperators.(?\u003E?) \n(?\u003E?) \nThe \u0027\u003E\u0027 operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003C=?)","title":"NullableOperators.(?\u003C=?)","content":"NullableOperators.(?\u003C=?) \n(?\u003C=?) \nThe \u0027\u003C=\u0027 operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003C?)","title":"NullableOperators.(?\u003C?)","content":"NullableOperators.(?\u003C?) \n(?\u003C?) \nThe \u0027\u003C\u0027 operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?=?)","title":"NullableOperators.(?=?)","content":"NullableOperators.(?=?) \n(?=?) \nThe \u0027=\u0027 operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u003C\u003E?)","title":"NullableOperators.(?\u003C\u003E?)","content":"NullableOperators.(?\u003C\u003E?) \n(?\u003C\u003E?) \nThe \u0027\u003C\u003E\u0027 operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u002B)","title":"NullableOperators.(?\u002B)","content":"NullableOperators.(?\u002B) \n(?\u002B) \nThe addition operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(\u002B?)","title":"NullableOperators.(\u002B?)","content":"NullableOperators.(\u002B?) \n(\u002B?) \nThe addition operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?\u002B?)","title":"NullableOperators.(?\u002B?)","content":"NullableOperators.(?\u002B?) \n(?\u002B?) \nThe addition operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?-)","title":"NullableOperators.(?-)","content":"NullableOperators.(?-) \n(?-) \nThe subtraction operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(-?)","title":"NullableOperators.(-?)","content":"NullableOperators.(-?) \n(-?) \nThe subtraction operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?-?)","title":"NullableOperators.(?-?)","content":"NullableOperators.(?-?) \n(?-?) \nThe subtraction operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#( ?* )","title":"NullableOperators.( ?* )","content":"NullableOperators.( ?* ) \n( ?* ) \nThe multiplication operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#( *? )","title":"NullableOperators.( *? )","content":"NullableOperators.( *? ) \n( *? ) \nThe multiplication operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?*?)","title":"NullableOperators.(?*?)","content":"NullableOperators.(?*?) \n(?*?) \nThe multiplication operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?%)","title":"NullableOperators.(?%)","content":"NullableOperators.(?%) \n(?%) \nThe modulus operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(%?)","title":"NullableOperators.(%?)","content":"NullableOperators.(%?) \n(%?) \nThe modulus operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?%?)","title":"NullableOperators.(?%?)","content":"NullableOperators.(?%?) \n(?%?) \nThe modulus operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?/)","title":"NullableOperators.(?/)","content":"NullableOperators.(?/) \n(?/) \nThe division operator where a nullable value appears on the left \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(/?)","title":"NullableOperators.(/?)","content":"NullableOperators.(/?) \n(/?) \nThe division operator where a nullable value appears on the right \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-nullableoperators.html#(?/?)","title":"NullableOperators.(?/?)","content":"NullableOperators.(?/?) \n(?/?) \nThe division operator where a nullable value appears on both left and right sides \nThis operator is primarily for use in F# queries","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html","title":"QueryBuilder","content":"QueryBuilder \n The type used to support the F# query syntax. Use \u0027query { ... }\u0027 to use the query syntax. See\n also \u003Ca href=\u0022https://learn.microsoft.com/dotnet/fsharp/language-reference/query-expressions\u0022\u003EF# Query Expressions\u003C/a\u003E in the F# Language Guide. \nQueryBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nQueryBuilder.All \nAll \nQueryBuilder.AverageBy \nAverageBy \nQueryBuilder.AverageByNullable \nAverageByNullable \nQueryBuilder.Contains \nContains \nQueryBuilder.Count \nCount \nQueryBuilder.Distinct \nDistinct \nQueryBuilder.ExactlyOne \nExactlyOne \nQueryBuilder.ExactlyOneOrDefault \nExactlyOneOrDefault \nQueryBuilder.Exists \nExists \nQueryBuilder.Find \nFind \nQueryBuilder.For \nFor \nQueryBuilder.GroupBy \nGroupBy \nQueryBuilder.GroupJoin \nGroupJoin \nQueryBuilder.GroupValBy \nGroupValBy \nQueryBuilder.Head \nHead \nQueryBuilder.HeadOrDefault \nHeadOrDefault \nQueryBuilder.Join \nJoin \nQueryBuilder.Last \nLast \nQueryBuilder.LastOrDefault \nLastOrDefault \nQueryBuilder.LeftOuterJoin \nLeftOuterJoin \nQueryBuilder.MaxBy \nMaxBy \nQueryBuilder.MaxByNullable \nMaxByNullable \nQueryBuilder.MinBy \nMinBy \nQueryBuilder.MinByNullable \nMinByNullable \nQueryBuilder.Nth \nNth \nQueryBuilder.Quote \nQuote \nQueryBuilder.Run \nRun \nQueryBuilder.Select \nSelect \nQueryBuilder.Skip \nSkip \nQueryBuilder.SkipWhile \nSkipWhile \nQueryBuilder.SortBy \nSortBy \nQueryBuilder.SortByDescending \nSortByDescending \nQueryBuilder.SortByNullable \nSortByNullable \nQueryBuilder.SortByNullableDescending \nSortByNullableDescending \nQueryBuilder.Source \nSource \nQueryBuilder.Source \nSource \nQueryBuilder.SumBy \nSumBy \nQueryBuilder.SumByNullable \nSumByNullable \nQueryBuilder.Take \nTake \nQueryBuilder.TakeWhile \nTakeWhile \nQueryBuilder.ThenBy \nThenBy \nQueryBuilder.ThenByDescending \nThenByDescending \nQueryBuilder.ThenByNullable \nThenByNullable \nQueryBuilder.ThenByNullableDescending \nThenByNullableDescending \nQueryBuilder.Where \nWhere \nQueryBuilder.Yield \nYield \nQueryBuilder.YieldFrom \nYieldFrom \nQueryBuilder.Zero \nZero","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#\u0060\u0060.ctor\u0060\u0060","title":"QueryBuilder.\u0060\u0060.ctor\u0060\u0060","content":"QueryBuilder.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreate an instance of this builder. Use \u0027query { ... }\u0027 to use the query syntax.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#All","title":"QueryBuilder.All","content":"QueryBuilder.All \nAll \nA query operator that determines whether all elements selected so far satisfies a condition.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#AverageBy","title":"QueryBuilder.AverageBy","content":"QueryBuilder.AverageBy \nAverageBy \nA query operator that selects a value for each element selected so far and returns the average of these values. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#AverageByNullable","title":"QueryBuilder.AverageByNullable","content":"QueryBuilder.AverageByNullable \nAverageByNullable \nA query operator that selects a nullable value for each element selected so far and returns the average of these values. \n If any nullable does not have a value, it is ignored.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Contains","title":"QueryBuilder.Contains","content":"QueryBuilder.Contains \nContains \nA query operator that determines whether the selected elements contains a specified element.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Count","title":"QueryBuilder.Count","content":"QueryBuilder.Count \nCount \nA query operator that returns the number of selected elements.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Distinct","title":"QueryBuilder.Distinct","content":"QueryBuilder.Distinct \nDistinct \nA query operator that selects distinct elements from the elements selected so far. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#ExactlyOne","title":"QueryBuilder.ExactlyOne","content":"QueryBuilder.ExactlyOne \nExactlyOne \nA query operator that selects the single, specific element selected so far\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#ExactlyOneOrDefault","title":"QueryBuilder.ExactlyOneOrDefault","content":"QueryBuilder.ExactlyOneOrDefault \nExactlyOneOrDefault \nA query operator that selects the single, specific element of those selected so far, or a default value if that element is not found.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Exists","title":"QueryBuilder.Exists","content":"QueryBuilder.Exists \nExists \nA query operator that determines whether any element selected so far satisfies a condition.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Find","title":"QueryBuilder.Find","content":"QueryBuilder.Find \nFind \nA query operator that selects the first element selected so far that satisfies a specified condition.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#For","title":"QueryBuilder.For","content":"QueryBuilder.For \nFor \n\n A method used to support the F# query syntax.  Projects each element of a sequence to another sequence and combines the resulting sequences into one sequence.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#GroupBy","title":"QueryBuilder.GroupBy","content":"QueryBuilder.GroupBy \nGroupBy \nA query operator that groups the elements selected so far according to a specified key selector.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#GroupJoin","title":"QueryBuilder.GroupJoin","content":"QueryBuilder.GroupJoin \nGroupJoin \nA query operator that correlates two sets of selected values based on matching keys and groups the results. \n Normal usage is \u0027groupJoin y in elements2 on (key1 = key2) into group\u0027. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#GroupValBy","title":"QueryBuilder.GroupValBy","content":"QueryBuilder.GroupValBy \nGroupValBy \nA query operator that selects a value for each element selected so far and groups the elements by the given key.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Head","title":"QueryBuilder.Head","content":"QueryBuilder.Head \nHead \nA query operator that selects the first element from those selected so far.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#HeadOrDefault","title":"QueryBuilder.HeadOrDefault","content":"QueryBuilder.HeadOrDefault \nHeadOrDefault \nA query operator that selects the first element of those selected so far, or a default value if the sequence contains no elements.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Join","title":"QueryBuilder.Join","content":"QueryBuilder.Join \nJoin \nA query operator that correlates two sets of selected values based on matching keys. \n Normal usage is \u0027join y in elements2 on (key1 = key2)\u0027. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Last","title":"QueryBuilder.Last","content":"QueryBuilder.Last \nLast \nA query operator that selects the last element of those selected so far.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#LastOrDefault","title":"QueryBuilder.LastOrDefault","content":"QueryBuilder.LastOrDefault \nLastOrDefault \nA query operator that selects the last element of those selected so far, or a default value if no element is found.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#LeftOuterJoin","title":"QueryBuilder.LeftOuterJoin","content":"QueryBuilder.LeftOuterJoin \nLeftOuterJoin \nA query operator that correlates two sets of selected values based on matching keys and groups the results.\n If any group is empty, a group with a single default value is used instead. \n Normal usage is \u0027leftOuterJoin y in elements2 on (key1 = key2) into group\u0027. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#MaxBy","title":"QueryBuilder.MaxBy","content":"QueryBuilder.MaxBy \nMaxBy \nA query operator that selects a value for each element selected so far and returns the maximum resulting value. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#MaxByNullable","title":"QueryBuilder.MaxByNullable","content":"QueryBuilder.MaxByNullable \nMaxByNullable \nA query operator that selects a nullable value for each element selected so far and returns the maximum of these values. \n If any nullable does not have a value, it is ignored.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#MinBy","title":"QueryBuilder.MinBy","content":"QueryBuilder.MinBy \nMinBy \nA query operator that selects a value for each element selected so far and returns the minimum resulting value. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#MinByNullable","title":"QueryBuilder.MinByNullable","content":"QueryBuilder.MinByNullable \nMinByNullable \nA query operator that selects a nullable value for each element selected so far and returns the minimum of these values. \n If any nullable does not have a value, it is ignored.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Nth","title":"QueryBuilder.Nth","content":"QueryBuilder.Nth \nNth \nA query operator that selects the element at a specified index amongst those selected so far.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Quote","title":"QueryBuilder.Quote","content":"QueryBuilder.Quote \nQuote \n\n A method used to support the F# query syntax.  Indicates that the query should be passed as a quotation to the Run method.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Run","title":"QueryBuilder.Run","content":"QueryBuilder.Run \nRun \n\n A method used to support the F# query syntax.  Runs the given quotation as a query using LINQ IQueryable rules.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Select","title":"QueryBuilder.Select","content":"QueryBuilder.Select \nSelect \nA query operator that projects each of the elements selected so far.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Skip","title":"QueryBuilder.Skip","content":"QueryBuilder.Skip \nSkip \nA query operator that bypasses a specified number of the elements selected so far and selects the remaining elements.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#SkipWhile","title":"QueryBuilder.SkipWhile","content":"QueryBuilder.SkipWhile \nSkipWhile \nA query operator that bypasses elements in a sequence as long as a specified condition is true and then selects the remaining elements.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#SortBy","title":"QueryBuilder.SortBy","content":"QueryBuilder.SortBy \nSortBy \nA query operator that sorts the elements selected so far in ascending order by the given sorting key.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#SortByDescending","title":"QueryBuilder.SortByDescending","content":"QueryBuilder.SortByDescending \nSortByDescending \nA query operator that sorts the elements selected so far in descending order by the given sorting key.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#SortByNullable","title":"QueryBuilder.SortByNullable","content":"QueryBuilder.SortByNullable \nSortByNullable \nA query operator that sorts the elements selected so far in ascending order by the given nullable sorting key.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#SortByNullableDescending","title":"QueryBuilder.SortByNullableDescending","content":"QueryBuilder.SortByNullableDescending \nSortByNullableDescending \nA query operator that sorts the elements selected so far in descending order by the given nullable sorting key.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Source","title":"QueryBuilder.Source","content":"QueryBuilder.Source \nSource \n\n A method used to support the F# query syntax.  Inputs to queries are implicitly wrapped by a call to one of the overloads of this method.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Source","title":"QueryBuilder.Source","content":"QueryBuilder.Source \nSource \n\n A method used to support the F# query syntax.  Inputs to queries are implicitly wrapped by a call to one of the overloads of this method.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#SumBy","title":"QueryBuilder.SumBy","content":"QueryBuilder.SumBy \nSumBy \nA query operator that selects a value for each element selected so far and returns the sum of these values. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#SumByNullable","title":"QueryBuilder.SumByNullable","content":"QueryBuilder.SumByNullable \nSumByNullable \nA query operator that selects a nullable value for each element selected so far and returns the sum of these values. \n If any nullable does not have a value, it is ignored.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Take","title":"QueryBuilder.Take","content":"QueryBuilder.Take \nTake \nA query operator that selects a specified number of contiguous elements from those selected so far.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#TakeWhile","title":"QueryBuilder.TakeWhile","content":"QueryBuilder.TakeWhile \nTakeWhile \nA query operator that selects elements from a sequence as long as a specified condition is true, and then skips the remaining elements.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#ThenBy","title":"QueryBuilder.ThenBy","content":"QueryBuilder.ThenBy \nThenBy \nA query operator that performs a subsequent ordering of the elements selected so far in ascending order by the given sorting key.\n This operator may only be used immediately after a \u0027sortBy\u0027, \u0027sortByDescending\u0027, \u0027thenBy\u0027 or \u0027thenByDescending\u0027, or their nullable variants.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#ThenByDescending","title":"QueryBuilder.ThenByDescending","content":"QueryBuilder.ThenByDescending \nThenByDescending \nA query operator that performs a subsequent ordering of the elements selected so far in descending order by the given sorting key.\n This operator may only be used immediately after a \u0027sortBy\u0027, \u0027sortByDescending\u0027, \u0027thenBy\u0027 or \u0027thenByDescending\u0027, or their nullable variants.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#ThenByNullable","title":"QueryBuilder.ThenByNullable","content":"QueryBuilder.ThenByNullable \nThenByNullable \nA query operator that performs a subsequent ordering of the elements selected so far in ascending order by the given nullable sorting key.\n This operator may only be used immediately after a \u0027sortBy\u0027, \u0027sortByDescending\u0027, \u0027thenBy\u0027 or \u0027thenByDescending\u0027, or their nullable variants.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#ThenByNullableDescending","title":"QueryBuilder.ThenByNullableDescending","content":"QueryBuilder.ThenByNullableDescending \nThenByNullableDescending \nA query operator that performs a subsequent ordering of the elements selected so far in descending order by the given nullable sorting key.\n This operator may only be used immediately after a \u0027sortBy\u0027, \u0027sortByDescending\u0027, \u0027thenBy\u0027 or \u0027thenByDescending\u0027, or their nullable variants.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Where","title":"QueryBuilder.Where","content":"QueryBuilder.Where \nWhere \nA query operator that selects those elements based on a specified predicate. \n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Yield","title":"QueryBuilder.Yield","content":"QueryBuilder.Yield \nYield \n\n A method used to support the F# query syntax.  Returns a sequence of length one that contains the specified value.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#YieldFrom","title":"QueryBuilder.YieldFrom","content":"QueryBuilder.YieldFrom \nYieldFrom \n\n A method used to support the F# query syntax.  Returns a sequence that contains the specified values.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querybuilder.html#Zero","title":"QueryBuilder.Zero","content":"QueryBuilder.Zero \nZero \n\n A method used to support the F# query syntax.  Returns an empty sequence that has the specified type argument.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querysource-2.html","title":"QuerySource\u003C\u0027T, \u0027Q\u003E","content":"QuerySource\u003C\u0027T, \u0027Q\u003E \n\n A partial input or result in an F# query. This type is used to support the F# query syntax.\n  \nQuerySource\u003C\u0027T, \u0027Q\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nQuerySource\u003C\u0027T, \u0027Q\u003E.Source \nSource","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querysource-2.html#\u0060\u0060.ctor\u0060\u0060","title":"QuerySource\u003C\u0027T, \u0027Q\u003E.\u0060\u0060.ctor\u0060\u0060","content":"QuerySource\u003C\u0027T, \u0027Q\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n A method used to support the F# query syntax.  ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-querysource-2.html#Source","title":"QuerySource\u003C\u0027T, \u0027Q\u003E.Source","content":"QuerySource\u003C\u0027T, \u0027Q\u003E.Source \nSource \n A property used to support the F# query syntax.  ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-queryrunextensions-highpriority.html","title":"HighPriority","content":"HighPriority \n A module used to support the F# query syntax.   \nHighPriority.Run \nRun","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-queryrunextensions-highpriority.html#Run","title":"HighPriority.Run","content":"HighPriority.Run \nRun \n A method used to support the F# query syntax.  Runs the given quotation as a query using LINQ IEnumerable rules.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-queryrunextensions-lowpriority.html","title":"LowPriority","content":"LowPriority \n\n A module used to support the F# query syntax.  \n  \nLowPriority.Run \nRun","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-queryrunextensions-lowpriority.html#Run","title":"LowPriority.Run","content":"LowPriority.Run \nRun \n A method used to support the F# query syntax.  Runs the given quotation as a query using LINQ rules.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-leafexpressionconverter.html","title":"LeafExpressionConverter","content":"LeafExpressionConverter \n\n Contains functionality to convert F# quotations to LINQ expression trees.\n  \nLeafExpressionConverter.ImplicitExpressionConversionHelper \nImplicitExpressionConversionHelper \nLeafExpressionConverter.MemberInitializationHelper \nMemberInitializationHelper \nLeafExpressionConverter.NewAnonymousObjectHelper \nNewAnonymousObjectHelper \nLeafExpressionConverter.QuotationToExpression \nQuotationToExpression \nLeafExpressionConverter.QuotationToLambdaExpression \nQuotationToLambdaExpression \nLeafExpressionConverter.EvaluateQuotation \nEvaluateQuotation \nLeafExpressionConverter.SubstHelper \nSubstHelper \nLeafExpressionConverter.SubstHelperRaw \nSubstHelperRaw","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-leafexpressionconverter.html#ImplicitExpressionConversionHelper","title":"LeafExpressionConverter.ImplicitExpressionConversionHelper","content":"LeafExpressionConverter.ImplicitExpressionConversionHelper \nImplicitExpressionConversionHelper \n When used in a quotation, this function indicates a specific conversion\n should be performed when converting the quotation to a LINQ expression.\n\n This function should not be called directly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-leafexpressionconverter.html#MemberInitializationHelper","title":"LeafExpressionConverter.MemberInitializationHelper","content":"LeafExpressionConverter.MemberInitializationHelper \nMemberInitializationHelper \n When used in a quotation, this function indicates a specific conversion\n should be performed when converting the quotation to a LINQ expression.\n\n This function should not be called directly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-leafexpressionconverter.html#NewAnonymousObjectHelper","title":"LeafExpressionConverter.NewAnonymousObjectHelper","content":"LeafExpressionConverter.NewAnonymousObjectHelper \nNewAnonymousObjectHelper \n When used in a quotation, this function indicates a specific conversion\n should be performed when converting the quotation to a LINQ expression.\n\n This function should not be called directly.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-leafexpressionconverter.html#QuotationToExpression","title":"LeafExpressionConverter.QuotationToExpression","content":"LeafExpressionConverter.QuotationToExpression \nQuotationToExpression \n\n Converts a subset of F# quotations to a LINQ expression, for the subset of LINQ expressions represented by the\n expression syntax in the C# language.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-leafexpressionconverter.html#QuotationToLambdaExpression","title":"LeafExpressionConverter.QuotationToLambdaExpression","content":"LeafExpressionConverter.QuotationToLambdaExpression \nQuotationToLambdaExpression \n\n Converts a subset of F# quotations to a LINQ expression, for the subset of LINQ expressions represented by the\n expression syntax in the C# language.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-leafexpressionconverter.html#EvaluateQuotation","title":"LeafExpressionConverter.EvaluateQuotation","content":"LeafExpressionConverter.EvaluateQuotation \nEvaluateQuotation \n\n Evaluates a subset of F# quotations by first converting to a LINQ expression, for the subset of LINQ expressions represented by the\n expression syntax in the C# language.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-leafexpressionconverter.html#SubstHelper","title":"LeafExpressionConverter.SubstHelper","content":"LeafExpressionConverter.SubstHelper \nSubstHelper \n\n A runtime helper used to evaluate nested quotation literals.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-leafexpressionconverter.html#SubstHelperRaw","title":"LeafExpressionConverter.SubstHelperRaw","content":"LeafExpressionConverter.SubstHelperRaw \nSubstHelperRaw \n\n A runtime helper used to evaluate nested quotation literals.\n ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-1.html","title":"AnonymousObject\u003C\u0027T1\u003E","content":"AnonymousObject\u003C\u0027T1\u003E \nThis type shouldn\u0027t be used directly from user code. \nAnonymousObject\u003C\u0027T1\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAnonymousObject\u003C\u0027T1\u003E.Item1 \nItem1 \nAnonymousObject\u003C\u0027T1\u003E.item1 \nitem1","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-1.html#\u0060\u0060.ctor\u0060\u0060","title":"AnonymousObject\u003C\u0027T1\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AnonymousObject\u003C\u0027T1\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-1.html#Item1","title":"AnonymousObject\u003C\u0027T1\u003E.Item1","content":"AnonymousObject\u003C\u0027T1\u003E.Item1 \nItem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-1.html#item1","title":"AnonymousObject\u003C\u0027T1\u003E.item1","content":"AnonymousObject\u003C\u0027T1\u003E.item1 \nitem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-2.html","title":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E","content":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E \nThis type shouldn\u0027t be used directly from user code. \nAnonymousObject\u003C\u0027T1, \u0027T2\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAnonymousObject\u003C\u0027T1, \u0027T2\u003E.Item1 \nItem1 \nAnonymousObject\u003C\u0027T1, \u0027T2\u003E.Item2 \nItem2 \nAnonymousObject\u003C\u0027T1, \u0027T2\u003E.item1 \nitem1 \nAnonymousObject\u003C\u0027T1, \u0027T2\u003E.item2 \nitem2","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-2.html#\u0060\u0060.ctor\u0060\u0060","title":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-2.html#Item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.Item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.Item1 \nItem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-2.html#Item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.Item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.Item2 \nItem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-2.html#item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.item1 \nitem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-2.html#item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2\u003E.item2 \nitem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-3.html","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E \nThis type shouldn\u0027t be used directly from user code. \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Item1 \nItem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Item2 \nItem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Item3 \nItem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.item1 \nitem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.item2 \nitem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.item3 \nitem3","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-3.html#\u0060\u0060.ctor\u0060\u0060","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-3.html#Item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Item1 \nItem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-3.html#Item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Item2 \nItem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-3.html#Item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.Item3 \nItem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-3.html#item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.item1 \nitem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-3.html#item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.item2 \nitem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-3.html#item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3\u003E.item3 \nitem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E \nThis type shouldn\u0027t be used directly from user code. \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item1 \nItem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item4 \nItem4 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item2 \nItem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item3 \nItem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item1 \nitem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item2 \nitem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item3 \nitem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item4 \nitem4","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html#\u0060\u0060.ctor\u0060\u0060","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html#Item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item1 \nItem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html#Item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item4 \nItem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html#Item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item2 \nItem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html#Item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.Item3 \nItem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html#item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item1 \nitem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html#item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item2 \nitem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html#item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item3 \nitem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-4.html#item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4\u003E.item4 \nitem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E \nThis type shouldn\u0027t be used directly from user code. \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item1 \nItem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item4 \nItem4 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item2 \nItem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item5 \nItem5 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item3 \nItem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item1 \nitem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item2 \nitem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item3 \nitem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item4 \nitem4 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item5 \nitem5","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#\u0060\u0060.ctor\u0060\u0060","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#Item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item1 \nItem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#Item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item4 \nItem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#Item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item2 \nItem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#Item5","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item5","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item5 \nItem5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#Item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.Item3 \nItem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item1 \nitem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item2 \nitem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item3 \nitem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item4 \nitem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-5.html#item5","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item5","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5\u003E.item5 \nitem5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E \nThis type shouldn\u0027t be used directly from user code. \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item1 \nItem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item4 \nItem4 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item6 \nItem6 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item2 \nItem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item5 \nItem5 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item3 \nItem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item1 \nitem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item2 \nitem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item3 \nitem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item4 \nitem4 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item5 \nitem5 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item6 \nitem6","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#\u0060\u0060.ctor\u0060\u0060","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#Item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item1 \nItem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#Item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item4 \nItem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#Item6","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item6","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item6 \nItem6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#Item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item2 \nItem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#Item5","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item5","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item5 \nItem5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#Item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.Item3 \nItem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item1 \nitem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item2 \nitem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item3 \nitem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item4 \nitem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#item5","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item5","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item5 \nitem5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-6.html#item6","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item6","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6\u003E.item6 \nitem6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E \nThis type shouldn\u0027t be used directly from user code. \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item1 \nItem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item4 \nItem4 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item7 \nItem7 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item6 \nItem6 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item2 \nItem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item5 \nItem5 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item3 \nItem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item1 \nitem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item2 \nitem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item3 \nitem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item4 \nitem4 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item5 \nitem5 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item6 \nitem6 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item7 \nitem7","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#\u0060\u0060.ctor\u0060\u0060","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#Item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item1 \nItem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#Item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item4 \nItem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#Item7","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item7","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item7 \nItem7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#Item6","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item6","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item6 \nItem6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#Item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item2 \nItem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#Item5","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item5","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item5 \nItem5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#Item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.Item3 \nItem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item1 \nitem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item2 \nitem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item3 \nitem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item4 \nitem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#item5","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item5","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item5 \nitem5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#item6","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item6","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item6 \nitem6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-7.html#item7","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item7","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7\u003E.item7 \nitem7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E \nThis type shouldn\u0027t be used directly from user code. \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item1 \nItem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item4 \nItem4 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item7 \nItem7 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item6 \nItem6 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item8 \nItem8 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item2 \nItem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item5 \nItem5 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item3 \nItem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item1 \nitem1 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item2 \nitem2 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item3 \nitem3 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item4 \nitem4 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item5 \nitem5 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item6 \nitem6 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item7 \nitem7 \nAnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item8 \nitem8","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#\u0060\u0060.ctor\u0060\u0060","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.\u0060\u0060.ctor\u0060\u0060","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#Item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item1 \nItem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#Item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item4 \nItem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#Item7","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item7","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item7 \nItem7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#Item6","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item6","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item6 \nItem6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#Item8","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item8","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item8 \nItem8 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#Item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item2 \nItem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#Item5","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item5","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item5 \nItem5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#Item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.Item3 \nItem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#item1","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item1","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item1 \nitem1 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#item2","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item2","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item2 \nitem2 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#item3","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item3","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item3 \nitem3 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#item4","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item4","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item4 \nitem4 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#item5","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item5","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item5 \nitem5 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#item6","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item6","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item6 \nitem6 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#item7","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item7","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item7 \nitem7 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-anonymousobject-8.html#item8","title":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item8","content":"AnonymousObject\u003C\u0027T1, \u0027T2, \u0027T3, \u0027T4, \u0027T5, \u0027T6, \u0027T7, \u0027T8\u003E.item8 \nitem8 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-grouping-2.html","title":"Grouping\u003C\u0027K, \u0027T\u003E","content":"Grouping\u003C\u0027K, \u0027T\u003E \n A type used to reconstruct a grouping after applying a mutable-\u003Eimmutable mapping transformation\n on a result of a query. \nGrouping\u003C\u0027K, \u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-linq-runtimehelpers-grouping-2.html#\u0060\u0060.ctor\u0060\u0060","title":"Grouping\u003C\u0027K, \u0027T\u003E.\u0060\u0060.ctor\u0060\u0060","content":"Grouping\u003C\u0027K, \u0027T\u003E.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \n","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html","title":"NativePtr","content":"NativePtr \nContains operations on native pointers. Use of these operators may\n result in the generation of unverifiable code. \nNativePtr.ofNativeInt \nofNativeInt \nNativePtr.toNativeInt \ntoNativeInt \nNativePtr.ofVoidPtr \nofVoidPtr \nNativePtr.toVoidPtr \ntoVoidPtr \nNativePtr.ofILSigPtr \nofILSigPtr \nNativePtr.toILSigPtr \ntoILSigPtr \nNativePtr.toByRef \ntoByRef \nNativePtr.add \nadd \nNativePtr.get \nget \nNativePtr.read \nread \nNativePtr.write \nwrite \nNativePtr.set \nset \nNativePtr.stackalloc \nstackalloc \nNativePtr.nullPtr \nnullPtr \nNativePtr.isNullPtr \nisNullPtr \nNativePtr.clear \nclear \nNativePtr.initBlock \ninitBlock \nNativePtr.copy \ncopy \nNativePtr.copyBlock \ncopyBlock","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#ofNativeInt","title":"NativePtr.ofNativeInt","content":"NativePtr.ofNativeInt \nofNativeInt \nReturns a typed native pointer for a given machine address.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#toNativeInt","title":"NativePtr.toNativeInt","content":"NativePtr.toNativeInt \ntoNativeInt \nReturns a machine address for a given typed native pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#ofVoidPtr","title":"NativePtr.ofVoidPtr","content":"NativePtr.ofVoidPtr \nofVoidPtr \nReturns a typed native pointer for a untyped native pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#toVoidPtr","title":"NativePtr.toVoidPtr","content":"NativePtr.toVoidPtr \ntoVoidPtr \nReturns an untyped native pointer for a given typed native pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#ofILSigPtr","title":"NativePtr.ofILSigPtr","content":"NativePtr.ofILSigPtr \nofILSigPtr \nReturns a typed native pointer for a Common IL (Intermediate Language) signature pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#toILSigPtr","title":"NativePtr.toILSigPtr","content":"NativePtr.toILSigPtr \ntoILSigPtr \nReturns a Common IL (Intermediate Language) signature pointer for a given typed native pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#toByRef","title":"NativePtr.toByRef","content":"NativePtr.toByRef \ntoByRef \nConverts a given typed native pointer to a managed pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#add","title":"NativePtr.add","content":"NativePtr.add \nadd \nReturns a typed native pointer by adding index * sizeof\u003C\u0027T\u003E to the\n given input pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#get","title":"NativePtr.get","content":"NativePtr.get \nget \nDereferences the typed native pointer computed by adding index * sizeof\u003C\u0027T\u003E to the\n given input pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#read","title":"NativePtr.read","content":"NativePtr.read \nread \nDereferences the given typed native pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#write","title":"NativePtr.write","content":"NativePtr.write \nwrite \nAssigns the \u003Ccode\u003Evalue\u003C/code\u003E into the memory location referenced by the given typed native pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#set","title":"NativePtr.set","content":"NativePtr.set \nset \nAssigns the \u003Ccode\u003Evalue\u003C/code\u003E into the memory location referenced by the typed native\n pointer computed by adding index * sizeof\u003C\u0027T\u003E to the given input pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#stackalloc","title":"NativePtr.stackalloc","content":"NativePtr.stackalloc \nstackalloc \nAllocates a region of memory on the stack.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#nullPtr","title":"NativePtr.nullPtr","content":"NativePtr.nullPtr \nnullPtr \nGets the null native pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#isNullPtr","title":"NativePtr.isNullPtr","content":"NativePtr.isNullPtr \nisNullPtr \nTests whether the given native pointer is null.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#clear","title":"NativePtr.clear","content":"NativePtr.clear \nclear \nClears the value stored at the location of a given native pointer.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#initBlock","title":"NativePtr.initBlock","content":"NativePtr.initBlock \ninitBlock \nInitializes a specified block of memory starting at a specific address to a given byte count and initial byte value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#copy","title":"NativePtr.copy","content":"NativePtr.copy \ncopy \nCopies a value to a specified destination address from a specified source address.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-nativeinterop-nativeptrmodule.html#copyBlock","title":"NativePtr.copyBlock","content":"NativePtr.copyBlock \ncopyBlock \nCopies a block of memory to a specified destination address starting from a specified source address until a specified byte count of (count * sizeof\u003C\u0027T\u003E).","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html","title":"DerivedPatterns","content":"DerivedPatterns \nContains a set of derived F# active patterns to analyze F# expression objects \nDerivedPatterns.(|Lambdas|_|) \n(|Lambdas|_|) \nDerivedPatterns.(|Applications|_|) \n(|Applications|_|) \nDerivedPatterns.(|AndAlso|_|) \n(|AndAlso|_|) \nDerivedPatterns.(|OrElse|_|) \n(|OrElse|_|) \nDerivedPatterns.(|Unit|_|) \n(|Unit|_|) \nDerivedPatterns.(|Bool|_|) \n(|Bool|_|) \nDerivedPatterns.(|String|_|) \n(|String|_|) \nDerivedPatterns.(|Single|_|) \n(|Single|_|) \nDerivedPatterns.(|Double|_|) \n(|Double|_|) \nDerivedPatterns.(|Char|_|) \n(|Char|_|) \nDerivedPatterns.(|SByte|_|) \n(|SByte|_|) \nDerivedPatterns.(|Byte|_|) \n(|Byte|_|) \nDerivedPatterns.(|Int16|_|) \n(|Int16|_|) \nDerivedPatterns.(|UInt16|_|) \n(|UInt16|_|) \nDerivedPatterns.(|Int32|_|) \n(|Int32|_|) \nDerivedPatterns.(|UInt32|_|) \n(|UInt32|_|) \nDerivedPatterns.(|Int64|_|) \n(|Int64|_|) \nDerivedPatterns.(|UInt64|_|) \n(|UInt64|_|) \nDerivedPatterns.(|Decimal|_|) \n(|Decimal|_|) \nDerivedPatterns.(|SpecificCall|_|) \n(|SpecificCall|_|) \nDerivedPatterns.(|MethodWithReflectedDefinition|_|) \n(|MethodWithReflectedDefinition|_|) \nDerivedPatterns.(|PropertyGetterWithReflectedDefinition|_|) \n(|PropertyGetterWithReflectedDefinition|_|) \nDerivedPatterns.(|PropertySetterWithReflectedDefinition|_|) \n(|PropertySetterWithReflectedDefinition|_|)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Lambdas|_|)","title":"DerivedPatterns.(|Lambdas|_|)","content":"DerivedPatterns.(|Lambdas|_|) \n(|Lambdas|_|) \nAn active pattern to recognize expressions that represent a (possibly curried or tupled) first class function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Applications|_|)","title":"DerivedPatterns.(|Applications|_|)","content":"DerivedPatterns.(|Applications|_|) \n(|Applications|_|) \nAn active pattern to recognize expressions that represent the application of a (possibly curried or tupled) first class function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|AndAlso|_|)","title":"DerivedPatterns.(|AndAlso|_|)","content":"DerivedPatterns.(|AndAlso|_|) \n(|AndAlso|_|) \nAn active pattern to recognize expressions of the form \u003Ccode\u003Ea \u0026amp;\u0026amp; b\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|OrElse|_|)","title":"DerivedPatterns.(|OrElse|_|)","content":"DerivedPatterns.(|OrElse|_|) \n(|OrElse|_|) \nAn active pattern to recognize expressions of the form \u003Ccode\u003Ea || b\u003C/code\u003E","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Unit|_|)","title":"DerivedPatterns.(|Unit|_|)","content":"DerivedPatterns.(|Unit|_|) \n(|Unit|_|) \nAn active pattern to recognize \u003Ccode\u003E()\u003C/code\u003E constant expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Bool|_|)","title":"DerivedPatterns.(|Bool|_|)","content":"DerivedPatterns.(|Bool|_|) \n(|Bool|_|) \nAn active pattern to recognize constant boolean expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|String|_|)","title":"DerivedPatterns.(|String|_|)","content":"DerivedPatterns.(|String|_|) \n(|String|_|) \nAn active pattern to recognize constant string expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Single|_|)","title":"DerivedPatterns.(|Single|_|)","content":"DerivedPatterns.(|Single|_|) \n(|Single|_|) \nAn active pattern to recognize constant 32-bit floating point number expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Double|_|)","title":"DerivedPatterns.(|Double|_|)","content":"DerivedPatterns.(|Double|_|) \n(|Double|_|) \nAn active pattern to recognize constant 64-bit floating point number expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Char|_|)","title":"DerivedPatterns.(|Char|_|)","content":"DerivedPatterns.(|Char|_|) \n(|Char|_|) \nAn active pattern to recognize constant unicode character expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|SByte|_|)","title":"DerivedPatterns.(|SByte|_|)","content":"DerivedPatterns.(|SByte|_|) \n(|SByte|_|) \nAn active pattern to recognize constant signed byte expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Byte|_|)","title":"DerivedPatterns.(|Byte|_|)","content":"DerivedPatterns.(|Byte|_|) \n(|Byte|_|) \nAn active pattern to recognize constant byte expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Int16|_|)","title":"DerivedPatterns.(|Int16|_|)","content":"DerivedPatterns.(|Int16|_|) \n(|Int16|_|) \nAn active pattern to recognize constant int16 expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|UInt16|_|)","title":"DerivedPatterns.(|UInt16|_|)","content":"DerivedPatterns.(|UInt16|_|) \n(|UInt16|_|) \nAn active pattern to recognize constant unsigned int16 expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Int32|_|)","title":"DerivedPatterns.(|Int32|_|)","content":"DerivedPatterns.(|Int32|_|) \n(|Int32|_|) \nAn active pattern to recognize constant int32 expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|UInt32|_|)","title":"DerivedPatterns.(|UInt32|_|)","content":"DerivedPatterns.(|UInt32|_|) \n(|UInt32|_|) \nAn active pattern to recognize constant unsigned int32 expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Int64|_|)","title":"DerivedPatterns.(|Int64|_|)","content":"DerivedPatterns.(|Int64|_|) \n(|Int64|_|) \nAn active pattern to recognize constant int64 expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|UInt64|_|)","title":"DerivedPatterns.(|UInt64|_|)","content":"DerivedPatterns.(|UInt64|_|) \n(|UInt64|_|) \nAn active pattern to recognize constant unsigned int64 expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|Decimal|_|)","title":"DerivedPatterns.(|Decimal|_|)","content":"DerivedPatterns.(|Decimal|_|) \n(|Decimal|_|) \nAn active pattern to recognize constant decimal expressions","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|SpecificCall|_|)","title":"DerivedPatterns.(|SpecificCall|_|)","content":"DerivedPatterns.(|SpecificCall|_|) \n(|SpecificCall|_|) \nA parameterized active pattern to recognize calls to a specified function or method.\n The returned elements are the optional target object (present if the target is an\n instance method), the generic type instantiation (non-empty if the target is a generic\n instantiation), and the arguments to the function or method.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|MethodWithReflectedDefinition|_|)","title":"DerivedPatterns.(|MethodWithReflectedDefinition|_|)","content":"DerivedPatterns.(|MethodWithReflectedDefinition|_|) \n(|MethodWithReflectedDefinition|_|) \nAn active pattern to recognize methods that have an associated ReflectedDefinition","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|PropertyGetterWithReflectedDefinition|_|)","title":"DerivedPatterns.(|PropertyGetterWithReflectedDefinition|_|)","content":"DerivedPatterns.(|PropertyGetterWithReflectedDefinition|_|) \n(|PropertyGetterWithReflectedDefinition|_|) \nAn active pattern to recognize property getters or values in modules that have an associated ReflectedDefinition","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-derivedpatternsmodule.html#(|PropertySetterWithReflectedDefinition|_|)","title":"DerivedPatterns.(|PropertySetterWithReflectedDefinition|_|)","content":"DerivedPatterns.(|PropertySetterWithReflectedDefinition|_|) \n(|PropertySetterWithReflectedDefinition|_|) \nAn active pattern to recognize property setters that have an associated ReflectedDefinition","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-exprshapemodule.html","title":"ExprShape","content":"ExprShape \nActive patterns for traversing, visiting, rebuilding and transforming expressions in a generic way \nExprShape.RebuildShapeCombination \nRebuildShapeCombination \nExprShape.(|ShapeVar|ShapeLambda|ShapeCombination|) \n(|ShapeVar|ShapeLambda|ShapeCombination|)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-exprshapemodule.html#RebuildShapeCombination","title":"ExprShape.RebuildShapeCombination","content":"ExprShape.RebuildShapeCombination \nRebuildShapeCombination \nRe-build combination expressions. The first parameter should be an object\n returned by the \u003Ccode\u003EShapeCombination\u003C/code\u003E case of the active pattern in this module.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-exprshapemodule.html#(|ShapeVar|ShapeLambda|ShapeCombination|)","title":"ExprShape.(|ShapeVar|ShapeLambda|ShapeCombination|)","content":"ExprShape.(|ShapeVar|ShapeLambda|ShapeCombination|) \n(|ShapeVar|ShapeLambda|ShapeCombination|) \nAn active pattern that performs a complete decomposition viewing the expression tree as a binding structure","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html","title":"Patterns","content":"Patterns \nContains a set of primitive F# active patterns to analyze F# expression objects \nPatterns.(|AddressOf|_|) \n(|AddressOf|_|) \nPatterns.(|AddressSet|_|) \n(|AddressSet|_|) \nPatterns.(|Application|_|) \n(|Application|_|) \nPatterns.(|Call|_|) \n(|Call|_|) \nPatterns.(|CallWithWitnesses|_|) \n(|CallWithWitnesses|_|) \nPatterns.(|Coerce|_|) \n(|Coerce|_|) \nPatterns.(|FieldGet|_|) \n(|FieldGet|_|) \nPatterns.(|FieldSet|_|) \n(|FieldSet|_|) \nPatterns.(|ForIntegerRangeLoop|_|) \n(|ForIntegerRangeLoop|_|) \nPatterns.(|WhileLoop|_|) \n(|WhileLoop|_|) \nPatterns.(|IfThenElse|_|) \n(|IfThenElse|_|) \nPatterns.(|Lambda|_|) \n(|Lambda|_|) \nPatterns.(|Let|_|) \n(|Let|_|) \nPatterns.(|LetRecursive|_|) \n(|LetRecursive|_|) \nPatterns.(|NewArray|_|) \n(|NewArray|_|) \nPatterns.(|DefaultValue|_|) \n(|DefaultValue|_|) \nPatterns.(|NewDelegate|_|) \n(|NewDelegate|_|) \nPatterns.(|NewObject|_|) \n(|NewObject|_|) \nPatterns.(|NewRecord|_|) \n(|NewRecord|_|) \nPatterns.(|NewUnionCase|_|) \n(|NewUnionCase|_|) \nPatterns.(|NewTuple|_|) \n(|NewTuple|_|) \nPatterns.(|NewStructTuple|_|) \n(|NewStructTuple|_|) \nPatterns.(|PropertyGet|_|) \n(|PropertyGet|_|) \nPatterns.(|PropertySet|_|) \n(|PropertySet|_|) \nPatterns.(|Quote|_|) \n(|Quote|_|) \nPatterns.(|QuoteRaw|_|) \n(|QuoteRaw|_|) \nPatterns.(|QuoteTyped|_|) \n(|QuoteTyped|_|) \nPatterns.(|Sequential|_|) \n(|Sequential|_|) \nPatterns.(|TryWith|_|) \n(|TryWith|_|) \nPatterns.(|TryFinally|_|) \n(|TryFinally|_|) \nPatterns.(|TupleGet|_|) \n(|TupleGet|_|) \nPatterns.(|TypeTest|_|) \n(|TypeTest|_|) \nPatterns.(|UnionCaseTest|_|) \n(|UnionCaseTest|_|) \nPatterns.(|Value|_|) \n(|Value|_|) \nPatterns.(|ValueWithName|_|) \n(|ValueWithName|_|) \nPatterns.(|WithValue|_|) \n(|WithValue|_|) \nPatterns.(|Var|_|) \n(|Var|_|) \nPatterns.(|VarSet|_|) \n(|VarSet|_|)","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|AddressOf|_|)","title":"Patterns.(|AddressOf|_|)","content":"Patterns.(|AddressOf|_|) \n(|AddressOf|_|) \nAn active pattern to recognize expressions that represent getting the address of a value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|AddressSet|_|)","title":"Patterns.(|AddressSet|_|)","content":"Patterns.(|AddressSet|_|) \n(|AddressSet|_|) \nAn active pattern to recognize expressions that represent setting the value held at an address ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|Application|_|)","title":"Patterns.(|Application|_|)","content":"Patterns.(|Application|_|) \n(|Application|_|) \nAn active pattern to recognize expressions that represent applications of first class function values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|Call|_|)","title":"Patterns.(|Call|_|)","content":"Patterns.(|Call|_|) \n(|Call|_|) \nAn active pattern to recognize expressions that represent calls to static and instance methods, and functions defined in modules","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|CallWithWitnesses|_|)","title":"Patterns.(|CallWithWitnesses|_|)","content":"Patterns.(|CallWithWitnesses|_|) \n(|CallWithWitnesses|_|) \nAn active pattern to recognize expressions that represent calls to static and instance methods, and functions defined in modules, including witness arguments","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|Coerce|_|)","title":"Patterns.(|Coerce|_|)","content":"Patterns.(|Coerce|_|) \n(|Coerce|_|) \nAn active pattern to recognize expressions that represent coercions from one type to another","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|FieldGet|_|)","title":"Patterns.(|FieldGet|_|)","content":"Patterns.(|FieldGet|_|) \n(|FieldGet|_|) \nAn active pattern to recognize expressions that represent getting a static or instance field ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|FieldSet|_|)","title":"Patterns.(|FieldSet|_|)","content":"Patterns.(|FieldSet|_|) \n(|FieldSet|_|) \nAn active pattern to recognize expressions that represent setting a static or instance field ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|ForIntegerRangeLoop|_|)","title":"Patterns.(|ForIntegerRangeLoop|_|)","content":"Patterns.(|ForIntegerRangeLoop|_|) \n(|ForIntegerRangeLoop|_|) \nAn active pattern to recognize expressions that represent loops over integer ranges","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|WhileLoop|_|)","title":"Patterns.(|WhileLoop|_|)","content":"Patterns.(|WhileLoop|_|) \n(|WhileLoop|_|) \nAn active pattern to recognize expressions that represent while loops ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|IfThenElse|_|)","title":"Patterns.(|IfThenElse|_|)","content":"Patterns.(|IfThenElse|_|) \n(|IfThenElse|_|) \nAn active pattern to recognize expressions that represent conditionals","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|Lambda|_|)","title":"Patterns.(|Lambda|_|)","content":"Patterns.(|Lambda|_|) \n(|Lambda|_|) \nAn active pattern to recognize expressions that represent first class function values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|Let|_|)","title":"Patterns.(|Let|_|)","content":"Patterns.(|Let|_|) \n(|Let|_|) \nAn active pattern to recognize expressions that represent let bindings","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|LetRecursive|_|)","title":"Patterns.(|LetRecursive|_|)","content":"Patterns.(|LetRecursive|_|) \n(|LetRecursive|_|) \nAn active pattern to recognize expressions that represent recursive let bindings of one or more variables","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|NewArray|_|)","title":"Patterns.(|NewArray|_|)","content":"Patterns.(|NewArray|_|) \n(|NewArray|_|) \nAn active pattern to recognize expressions that represent the construction of arrays ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|DefaultValue|_|)","title":"Patterns.(|DefaultValue|_|)","content":"Patterns.(|DefaultValue|_|) \n(|DefaultValue|_|) \nAn active pattern to recognize expressions that represent invocations of a default constructor of a struct","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|NewDelegate|_|)","title":"Patterns.(|NewDelegate|_|)","content":"Patterns.(|NewDelegate|_|) \n(|NewDelegate|_|) \nAn active pattern to recognize expressions that represent construction of delegate values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|NewObject|_|)","title":"Patterns.(|NewObject|_|)","content":"Patterns.(|NewObject|_|) \n(|NewObject|_|) \nAn active pattern to recognize expressions that represent invocation of object constructors","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|NewRecord|_|)","title":"Patterns.(|NewRecord|_|)","content":"Patterns.(|NewRecord|_|) \n(|NewRecord|_|) \nAn active pattern to recognize expressions that represent construction of record values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|NewUnionCase|_|)","title":"Patterns.(|NewUnionCase|_|)","content":"Patterns.(|NewUnionCase|_|) \n(|NewUnionCase|_|) \nAn active pattern to recognize expressions that represent construction of particular union case values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|NewTuple|_|)","title":"Patterns.(|NewTuple|_|)","content":"Patterns.(|NewTuple|_|) \n(|NewTuple|_|) \nAn active pattern to recognize expressions that represent construction of tuple values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|NewStructTuple|_|)","title":"Patterns.(|NewStructTuple|_|)","content":"Patterns.(|NewStructTuple|_|) \n(|NewStructTuple|_|) \nAn active pattern to recognize expressions that represent construction of struct tuple values","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|PropertyGet|_|)","title":"Patterns.(|PropertyGet|_|)","content":"Patterns.(|PropertyGet|_|) \n(|PropertyGet|_|) \nAn active pattern to recognize expressions that represent the read of a static or instance property, or a non-function value declared in a module","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|PropertySet|_|)","title":"Patterns.(|PropertySet|_|)","content":"Patterns.(|PropertySet|_|) \n(|PropertySet|_|) \nAn active pattern to recognize expressions that represent setting a static or instance property, or a non-function value declared in a module","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|Quote|_|)","title":"Patterns.(|Quote|_|)","content":"Patterns.(|Quote|_|) \n(|Quote|_|) \nAn active pattern to recognize expressions that represent a nested quotation literal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|QuoteRaw|_|)","title":"Patterns.(|QuoteRaw|_|)","content":"Patterns.(|QuoteRaw|_|) \n(|QuoteRaw|_|) \nAn active pattern to recognize expressions that represent a nested raw quotation literal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|QuoteTyped|_|)","title":"Patterns.(|QuoteTyped|_|)","content":"Patterns.(|QuoteTyped|_|) \n(|QuoteTyped|_|) \nAn active pattern to recognize expressions that represent a nested typed quotation literal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|Sequential|_|)","title":"Patterns.(|Sequential|_|)","content":"Patterns.(|Sequential|_|) \n(|Sequential|_|) \nAn active pattern to recognize expressions that represent sequential execution of one expression followed by another","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|TryWith|_|)","title":"Patterns.(|TryWith|_|)","content":"Patterns.(|TryWith|_|) \n(|TryWith|_|) \nAn active pattern to recognize expressions that represent a try/with construct for exception filtering and catching ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|TryFinally|_|)","title":"Patterns.(|TryFinally|_|)","content":"Patterns.(|TryFinally|_|) \n(|TryFinally|_|) \nAn active pattern to recognize expressions that represent a try/finally construct ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|TupleGet|_|)","title":"Patterns.(|TupleGet|_|)","content":"Patterns.(|TupleGet|_|) \n(|TupleGet|_|) \nAn active pattern to recognize expressions that represent getting a tuple field","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|TypeTest|_|)","title":"Patterns.(|TypeTest|_|)","content":"Patterns.(|TypeTest|_|) \n(|TypeTest|_|) \nAn active pattern to recognize expressions that represent a dynamic type test","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|UnionCaseTest|_|)","title":"Patterns.(|UnionCaseTest|_|)","content":"Patterns.(|UnionCaseTest|_|) \n(|UnionCaseTest|_|) \nAn active pattern to recognize expressions that represent a test if a value is of a particular union case","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|Value|_|)","title":"Patterns.(|Value|_|)","content":"Patterns.(|Value|_|) \n(|Value|_|) \nAn active pattern to recognize expressions that represent a constant value. This also matches expressions matched by ValueWithName.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|ValueWithName|_|)","title":"Patterns.(|ValueWithName|_|)","content":"Patterns.(|ValueWithName|_|) \n(|ValueWithName|_|) \nAn active pattern to recognize expressions that represent a constant value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|WithValue|_|)","title":"Patterns.(|WithValue|_|)","content":"Patterns.(|WithValue|_|) \n(|WithValue|_|) \nAn active pattern to recognize expressions that are a value with an associated definition","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|Var|_|)","title":"Patterns.(|Var|_|)","content":"Patterns.(|Var|_|) \n(|Var|_|) \nAn active pattern to recognize expressions that represent a variable","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-patternsmodule.html#(|VarSet|_|)","title":"Patterns.(|VarSet|_|)","content":"Patterns.(|VarSet|_|) \n(|VarSet|_|) \nAn active pattern to recognize expressions that represent setting a mutable variable","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html","title":"Expr","content":"Expr \nQuoted expressions annotated with System.Type values.  \nExpr.GetFreeVars \nGetFreeVars \nExpr.Substitute \nSubstitute \nExpr.ToString \nToString \nExpr.Type \nType \nExpr.CustomAttributes \nCustomAttributes \nExpr.AddressOf \nAddressOf \nExpr.AddressSet \nAddressSet \nExpr.Application \nApplication \nExpr.Applications \nApplications \nExpr.Call \nCall \nExpr.Call \nCall \nExpr.CallWithWitnesses \nCallWithWitnesses \nExpr.CallWithWitnesses \nCallWithWitnesses \nExpr.Cast \nCast \nExpr.Coerce \nCoerce \nExpr.DefaultValue \nDefaultValue \nExpr.Deserialize \nDeserialize \nExpr.Deserialize40 \nDeserialize40 \nExpr.FieldGet \nFieldGet \nExpr.FieldGet \nFieldGet \nExpr.FieldSet \nFieldSet \nExpr.FieldSet \nFieldSet \nExpr.ForIntegerRangeLoop \nForIntegerRangeLoop \nExpr.GlobalVar \nGlobalVar \nExpr.IfThenElse \nIfThenElse \nExpr.Lambda \nLambda \nExpr.Let \nLet \nExpr.LetRecursive \nLetRecursive \nExpr.NewArray \nNewArray \nExpr.NewDelegate \nNewDelegate \nExpr.NewObject \nNewObject \nExpr.NewRecord \nNewRecord \nExpr.NewStructTuple \nNewStructTuple \nExpr.NewStructTuple \nNewStructTuple \nExpr.NewTuple \nNewTuple \nExpr.NewUnionCase \nNewUnionCase \nExpr.PropertyGet \nPropertyGet \nExpr.PropertyGet \nPropertyGet \nExpr.PropertySet \nPropertySet \nExpr.PropertySet \nPropertySet \nExpr.Quote \nQuote \nExpr.QuoteRaw \nQuoteRaw \nExpr.QuoteTyped \nQuoteTyped \nExpr.RegisterReflectedDefinitions \nRegisterReflectedDefinitions \nExpr.RegisterReflectedDefinitions \nRegisterReflectedDefinitions \nExpr.Sequential \nSequential \nExpr.TryFinally \nTryFinally \nExpr.TryGetReflectedDefinition \nTryGetReflectedDefinition \nExpr.TryWith \nTryWith \nExpr.TupleGet \nTupleGet \nExpr.TypeTest \nTypeTest \nExpr.UnionCaseTest \nUnionCaseTest \nExpr.Value \nValue \nExpr.Value \nValue \nExpr.ValueWithName \nValueWithName \nExpr.ValueWithName \nValueWithName \nExpr.Var \nVar \nExpr.VarSet \nVarSet \nExpr.WhileLoop \nWhileLoop \nExpr.WithValue \nWithValue \nExpr.WithValue \nWithValue","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#GetFreeVars","title":"Expr.GetFreeVars","content":"Expr.GetFreeVars \nGetFreeVars \nGets the free expression variables of an expression as a list.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Substitute","title":"Expr.Substitute","content":"Expr.Substitute \nSubstitute \nSubstitutes through the given expression using the given functions\n to map variables to new values. The functions must give consistent results\n at each application. Variable renaming may occur on the target expression\n if variable capture occurs.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#ToString","title":"Expr.ToString","content":"Expr.ToString \nToString \nFormat the expression as a string","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Type","title":"Expr.Type","content":"Expr.Type \nType \nReturns type of an expression.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#CustomAttributes","title":"Expr.CustomAttributes","content":"Expr.CustomAttributes \nCustomAttributes \nReturns the custom attributes of an expression. For quotations deriving from quotation literals this may include the source location of the literal.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#AddressOf","title":"Expr.AddressOf","content":"Expr.AddressOf \nAddressOf \nBuilds an expression that represents getting the address of a value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#AddressSet","title":"Expr.AddressSet","content":"Expr.AddressSet \nAddressSet \nBuilds an expression that represents setting the value held at a particular address.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Application","title":"Expr.Application","content":"Expr.Application \nApplication \nBuilds an expression that represents the application of a first class function value to a single argument.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Applications","title":"Expr.Applications","content":"Expr.Applications \nApplications \nBuilds an expression that represents the application of a first class function value to multiple arguments","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Call","title":"Expr.Call","content":"Expr.Call \nCall \nBuilds an expression that represents a call to an instance method associated with an object","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Call","title":"Expr.Call","content":"Expr.Call \nCall \nBuilds an expression that represents a call to an static method or module-bound function","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#CallWithWitnesses","title":"Expr.CallWithWitnesses","content":"Expr.CallWithWitnesses \nCallWithWitnesses \nBuilds an expression that represents a call to an instance method associated with an object, potentially passing additional witness arguments","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#CallWithWitnesses","title":"Expr.CallWithWitnesses","content":"Expr.CallWithWitnesses \nCallWithWitnesses \nBuilds an expression that represents a call to an static method or module-bound function, potentially passing additional witness arguments","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Cast","title":"Expr.Cast","content":"Expr.Cast \nCast \nReturns a new typed expression given an underlying runtime-typed expression.\n A type annotation is usually required to use this function, and\n using an incorrect type annotation may result in a later runtime exception.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Coerce","title":"Expr.Coerce","content":"Expr.Coerce \nCoerce \nBuilds an expression that represents the coercion of an expression to a type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#DefaultValue","title":"Expr.DefaultValue","content":"Expr.DefaultValue \nDefaultValue \nBuilds an expression that represents the invocation of a default object constructor","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Deserialize","title":"Expr.Deserialize","content":"Expr.Deserialize \nDeserialize \nThis function is called automatically when quotation syntax (\u003C@ @\u003E) and other sources of\n quotations are used. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Deserialize40","title":"Expr.Deserialize40","content":"Expr.Deserialize40 \nDeserialize40 \nThis function is called automatically when quotation syntax (\u003C@ @\u003E) and other sources of\n quotations are used. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#FieldGet","title":"Expr.FieldGet","content":"Expr.FieldGet \nFieldGet \nBuilds an expression that represents the access of a field of an object","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#FieldGet","title":"Expr.FieldGet","content":"Expr.FieldGet \nFieldGet \nBuilds an expression that represents the access of a static field","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#FieldSet","title":"Expr.FieldSet","content":"Expr.FieldSet \nFieldSet \nBuilds an expression that represents writing to a field of an object","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#FieldSet","title":"Expr.FieldSet","content":"Expr.FieldSet \nFieldSet \nBuilds an expression that represents writing to a static field  \nSettable public static fields are rare in F# and .NET libraries, so examples of using this method are uncommon.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#ForIntegerRangeLoop","title":"Expr.ForIntegerRangeLoop","content":"Expr.ForIntegerRangeLoop \nForIntegerRangeLoop \nBuilds a \u0027for i = ... to ... do ...\u0027 expression that represent loops over integer ranges","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#GlobalVar","title":"Expr.GlobalVar","content":"Expr.GlobalVar \nGlobalVar \nFetches or creates a new variable with the given name and type from a global pool of shared variables\n indexed by name and type. The type is given by the explicit or inferred type parameter","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#IfThenElse","title":"Expr.IfThenElse","content":"Expr.IfThenElse \nIfThenElse \nBuilds \u0027if ... then ... else\u0027 expressions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Lambda","title":"Expr.Lambda","content":"Expr.Lambda \nLambda \nBuilds an expression that represents the construction of an F# function value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Let","title":"Expr.Let","content":"Expr.Let \nLet \nBuilds expressions associated with \u0027let\u0027 constructs","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#LetRecursive","title":"Expr.LetRecursive","content":"Expr.LetRecursive \nLetRecursive \nBuilds recursive expressions associated with \u0027let rec\u0027 constructs","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#NewArray","title":"Expr.NewArray","content":"Expr.NewArray \nNewArray \nBuilds an expression that represents the creation of an array value initialized with the given elements","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#NewDelegate","title":"Expr.NewDelegate","content":"Expr.NewDelegate \nNewDelegate \nBuilds an expression that represents the creation of a delegate value for the given type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#NewObject","title":"Expr.NewObject","content":"Expr.NewObject \nNewObject \nBuilds an expression that represents the invocation of an object constructor","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#NewRecord","title":"Expr.NewRecord","content":"Expr.NewRecord \nNewRecord \nBuilds record-construction expressions ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#NewStructTuple","title":"Expr.NewStructTuple","content":"Expr.NewStructTuple \nNewStructTuple \nBuilds an expression that represents the creation of an F# tuple value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#NewStructTuple","title":"Expr.NewStructTuple","content":"Expr.NewStructTuple \nNewStructTuple \nBuilds an expression that represents the creation of an F# tuple value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#NewTuple","title":"Expr.NewTuple","content":"Expr.NewTuple \nNewTuple \nBuilds an expression that represents the creation of an F# tuple value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#NewUnionCase","title":"Expr.NewUnionCase","content":"Expr.NewUnionCase \nNewUnionCase \nBuilds an expression that represents the creation of a union case value","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#PropertyGet","title":"Expr.PropertyGet","content":"Expr.PropertyGet \nPropertyGet \nBuilds an expression that represents reading a static property ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#PropertyGet","title":"Expr.PropertyGet","content":"Expr.PropertyGet \nPropertyGet \nBuilds an expression that represents reading a property of an object","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#PropertySet","title":"Expr.PropertySet","content":"Expr.PropertySet \nPropertySet \nBuilds an expression that represents writing to a static property ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#PropertySet","title":"Expr.PropertySet","content":"Expr.PropertySet \nPropertySet \nBuilds an expression that represents writing to a property of an object","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Quote","title":"Expr.Quote","content":"Expr.Quote \nQuote \nBuilds an expression that represents a nested typed or raw quotation literal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#QuoteRaw","title":"Expr.QuoteRaw","content":"Expr.QuoteRaw \nQuoteRaw \nBuilds an expression that represents a nested raw quotation literal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#QuoteTyped","title":"Expr.QuoteTyped","content":"Expr.QuoteTyped \nQuoteTyped \nBuilds an expression that represents a nested typed quotation literal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#RegisterReflectedDefinitions","title":"Expr.RegisterReflectedDefinitions","content":"Expr.RegisterReflectedDefinitions \nRegisterReflectedDefinitions \nPermits interactive environments such as F# Interactive\n to explicitly register new pickled resources that represent persisted\n top level definitions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#RegisterReflectedDefinitions","title":"Expr.RegisterReflectedDefinitions","content":"Expr.RegisterReflectedDefinitions \nRegisterReflectedDefinitions \nPermits interactive environments such as F# Interactive\n to explicitly register new pickled resources that represent persisted\n top level definitions.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Sequential","title":"Expr.Sequential","content":"Expr.Sequential \nSequential \nBuilds an expression that represents the sequential execution of one expression followed by another","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#TryFinally","title":"Expr.TryFinally","content":"Expr.TryFinally \nTryFinally \nBuilds an expression that represents a try/finally construct ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#TryGetReflectedDefinition","title":"Expr.TryGetReflectedDefinition","content":"Expr.TryGetReflectedDefinition \nTryGetReflectedDefinition \nTry and find a stored reflection definition for the given method. Stored reflection\n definitions are added to an F# assembly through the use of the [\u003CReflectedDefinition\u003E] attribute.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#TryWith","title":"Expr.TryWith","content":"Expr.TryWith \nTryWith \nBuilds an expression that represents a try/with construct for exception filtering and catching.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#TupleGet","title":"Expr.TupleGet","content":"Expr.TupleGet \nTupleGet \nBuilds an expression that represents getting a field of a tuple","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#TypeTest","title":"Expr.TypeTest","content":"Expr.TypeTest \nTypeTest \nBuilds an expression that represents a type test.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#UnionCaseTest","title":"Expr.UnionCaseTest","content":"Expr.UnionCaseTest \nUnionCaseTest \nBuilds an expression that represents a test of a value is of a particular union case","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Value","title":"Expr.Value","content":"Expr.Value \nValue \nBuilds an expression that represents a constant value ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Value","title":"Expr.Value","content":"Expr.Value \nValue \nBuilds an expression that represents a constant value of a particular type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#ValueWithName","title":"Expr.ValueWithName","content":"Expr.ValueWithName \nValueWithName \nBuilds an expression that represents a constant value of a particular type, arising from a variable of the given name ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#ValueWithName","title":"Expr.ValueWithName","content":"Expr.ValueWithName \nValueWithName \nBuilds an expression that represents a constant value, arising from a variable of the given name ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#Var","title":"Expr.Var","content":"Expr.Var \nVar \nBuilds an expression that represents a variable","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#VarSet","title":"Expr.VarSet","content":"Expr.VarSet \nVarSet \nBuilds an expression that represents setting a mutable variable","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#WhileLoop","title":"Expr.WhileLoop","content":"Expr.WhileLoop \nWhileLoop \nBuilds an expression that represents a while loop","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#WithValue","title":"Expr.WithValue","content":"Expr.WithValue \nWithValue \nBuilds an expression that represents a value and its associated reflected definition as a quotation","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr.html#WithValue","title":"Expr.WithValue","content":"Expr.WithValue \nWithValue \nBuilds an expression that represents a value and its associated reflected definition as a quotation","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr-1.html","title":"Expr\u003C\u0027T\u003E","content":"Expr\u003C\u0027T\u003E \n\u003Cpre\u003EType-carrying quoted expressions. Expressions are generated either\n by quotations in source text or programmatically\u003C/pre\u003E \nExpr\u003C\u0027T\u003E.Raw \nRaw","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpexpr-1.html#Raw","title":"Expr\u003C\u0027T\u003E.Raw","content":"Expr\u003C\u0027T\u003E.Raw \nRaw \nGets the raw expression associated with this type-carrying expression","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpvar.html","title":"Var","content":"Var \nInformation at the binding site of a variable \nVar.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nVar.Name \nName \nVar.Type \nType \nVar.IsMutable \nIsMutable \nVar.Global \nGlobal","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpvar.html#\u0060\u0060.ctor\u0060\u0060","title":"Var.\u0060\u0060.ctor\u0060\u0060","content":"Var.\u0060\u0060.ctor\u0060\u0060 \n\u0060\u0060.ctor\u0060\u0060 \nCreates a new variable with the given name, type and mutability","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpvar.html#Name","title":"Var.Name","content":"Var.Name \nName \nThe declared name of the variable","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpvar.html#Type","title":"Var.Type","content":"Var.Type \nType \nThe type associated with the variable","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpvar.html#IsMutable","title":"Var.IsMutable","content":"Var.IsMutable \nIsMutable \nIndicates if the variable represents a mutable storage location","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-quotations-fsharpvar.html#Global","title":"Var.Global","content":"Var.Global \nGlobal \nFetches or create a new variable with the given name and type from a global pool of shared variables\n indexed by name and type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html","title":"FSharpReflectionExtensions","content":"FSharpReflectionExtensions \nDefines further accessing additional information about F# types and F# values at runtime. \nFSharpReflectionExtensions.MakeRecord \nMakeRecord \nFSharpReflectionExtensions.GetRecordFields \nGetRecordFields \nFSharpReflectionExtensions.PreComputeRecordReader \nPreComputeRecordReader \nFSharpReflectionExtensions.PreComputeRecordConstructor \nPreComputeRecordConstructor \nFSharpReflectionExtensions.PreComputeRecordConstructorInfo \nPreComputeRecordConstructorInfo \nFSharpReflectionExtensions.MakeUnion \nMakeUnion \nFSharpReflectionExtensions.GetUnionFields \nGetUnionFields \nFSharpReflectionExtensions.PreComputeUnionTagReader \nPreComputeUnionTagReader \nFSharpReflectionExtensions.PreComputeUnionTagMemberInfo \nPreComputeUnionTagMemberInfo \nFSharpReflectionExtensions.PreComputeUnionReader \nPreComputeUnionReader \nFSharpReflectionExtensions.PreComputeUnionConstructor \nPreComputeUnionConstructor \nFSharpReflectionExtensions.PreComputeUnionConstructorInfo \nPreComputeUnionConstructorInfo \nFSharpReflectionExtensions.GetExceptionFields \nGetExceptionFields \nFSharpReflectionExtensions.GetRecordFields \nGetRecordFields \nFSharpReflectionExtensions.GetUnionCases \nGetUnionCases \nFSharpReflectionExtensions.IsRecord \nIsRecord \nFSharpReflectionExtensions.IsUnion \nIsUnion \nFSharpReflectionExtensions.GetExceptionFields \nGetExceptionFields \nFSharpReflectionExtensions.IsExceptionRepresentation \nIsExceptionRepresentation","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#MakeRecord","title":"FSharpReflectionExtensions.MakeRecord","content":"FSharpReflectionExtensions.MakeRecord \nMakeRecord \nCreates an instance of a record type. \nAssumes the given input is a record type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#GetRecordFields","title":"FSharpReflectionExtensions.GetRecordFields","content":"FSharpReflectionExtensions.GetRecordFields \nGetRecordFields \nReads all the fields from a record value. \nAssumes the given input is a record value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#PreComputeRecordReader","title":"FSharpReflectionExtensions.PreComputeRecordReader","content":"FSharpReflectionExtensions.PreComputeRecordReader \nPreComputeRecordReader \nPrecompute a function for reading all the fields from a record. The fields are returned in the\n same order as the fields reported by a call to Microsoft.FSharp.Reflection.Type.GetInfo for\n this type. \nAssumes the given type is a RecordType.\n If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation.\n\n Using the computed function will typically be faster than executing a corresponding call to Value.GetInfo\n because the path executed by the computed function is optimized given the knowledge that it will be\n used to read values of the given type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#PreComputeRecordConstructor","title":"FSharpReflectionExtensions.PreComputeRecordConstructor","content":"FSharpReflectionExtensions.PreComputeRecordConstructor \nPreComputeRecordConstructor \nPrecompute a function for constructing a record value.  \nAssumes the given type is a RecordType.\n If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#PreComputeRecordConstructorInfo","title":"FSharpReflectionExtensions.PreComputeRecordConstructorInfo","content":"FSharpReflectionExtensions.PreComputeRecordConstructorInfo \nPreComputeRecordConstructorInfo \nGet a ConstructorInfo for a record type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#MakeUnion","title":"FSharpReflectionExtensions.MakeUnion","content":"FSharpReflectionExtensions.MakeUnion \nMakeUnion \nCreate a union case value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#GetUnionFields","title":"FSharpReflectionExtensions.GetUnionFields","content":"FSharpReflectionExtensions.GetUnionFields \nGetUnionFields \nIdentify the union case and its fields for an object \nAssumes the given input is a union case value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.\n\n If the type is not given, then the runtime type of the input object is used to identify the\n relevant union type. The type should always be given if the input object may be null. For example,\n option values may be represented using the \u0027null\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#PreComputeUnionTagReader","title":"FSharpReflectionExtensions.PreComputeUnionTagReader","content":"FSharpReflectionExtensions.PreComputeUnionTagReader \nPreComputeUnionTagReader \nAssumes the given type is a union type.\n If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation. \nUsing the computed function is more efficient than calling GetUnionCase\n because the path executed by the computed function is optimized given the knowledge that it will be\n used to read values of the given type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#PreComputeUnionTagMemberInfo","title":"FSharpReflectionExtensions.PreComputeUnionTagMemberInfo","content":"FSharpReflectionExtensions.PreComputeUnionTagMemberInfo \nPreComputeUnionTagMemberInfo \nPrecompute a property or static method for reading an integer representing the case tag of a union type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#PreComputeUnionReader","title":"FSharpReflectionExtensions.PreComputeUnionReader","content":"FSharpReflectionExtensions.PreComputeUnionReader \nPreComputeUnionReader \nPrecompute a function for reading all the fields for a particular discriminator case of a union type \nUsing the computed function will typically be faster than executing a corresponding call to GetFields","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#PreComputeUnionConstructor","title":"FSharpReflectionExtensions.PreComputeUnionConstructor","content":"FSharpReflectionExtensions.PreComputeUnionConstructor \nPreComputeUnionConstructor \nPrecompute a function for constructing a discriminated union value for a particular union case. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#PreComputeUnionConstructorInfo","title":"FSharpReflectionExtensions.PreComputeUnionConstructorInfo","content":"FSharpReflectionExtensions.PreComputeUnionConstructorInfo \nPreComputeUnionConstructorInfo \nA method that constructs objects of the given case","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#GetExceptionFields","title":"FSharpReflectionExtensions.GetExceptionFields","content":"FSharpReflectionExtensions.GetExceptionFields \nGetExceptionFields \nReads all the fields from a value built using an instance of an F# exception declaration \nAssumes the given input is an F# exception value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#GetRecordFields","title":"FSharpReflectionExtensions.GetRecordFields","content":"FSharpReflectionExtensions.GetRecordFields \nGetRecordFields \nReads all the fields from a record value, in declaration order \nAssumes the given input is a record value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#GetUnionCases","title":"FSharpReflectionExtensions.GetUnionCases","content":"FSharpReflectionExtensions.GetUnionCases \nGetUnionCases \nGets the cases of a union type. \nAssumes the given type is a union type. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#IsRecord","title":"FSharpReflectionExtensions.IsRecord","content":"FSharpReflectionExtensions.IsRecord \nIsRecord \nReturn true if the \u003Ccode\u003Etyp\u003C/code\u003E is a representation of an F# record type ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#IsUnion","title":"FSharpReflectionExtensions.IsUnion","content":"FSharpReflectionExtensions.IsUnion \nIsUnion \nReturns true if the \u003Ccode\u003Etyp\u003C/code\u003E is a representation of an F# union type or the runtime type of a value of that type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#GetExceptionFields","title":"FSharpReflectionExtensions.GetExceptionFields","content":"FSharpReflectionExtensions.GetExceptionFields \nGetExceptionFields \nReads all the fields from an F# exception declaration, in declaration order \nAssumes \u003Ccode\u003EexceptionType\u003C/code\u003E is an exception representation type. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpreflectionextensions.html#IsExceptionRepresentation","title":"FSharpReflectionExtensions.IsExceptionRepresentation","content":"FSharpReflectionExtensions.IsExceptionRepresentation \nIsExceptionRepresentation \nReturns true if the \u003Ccode\u003EexceptionType\u003C/code\u003E is a representation of an F# exception declaration","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html","title":"FSharpType","content":"FSharpType \nContains operations associated with constructing and analyzing F# types such as records, unions and tuples \nFSharpType.GetExceptionFields \nGetExceptionFields \nFSharpType.GetFunctionElements \nGetFunctionElements \nFSharpType.GetRecordFields \nGetRecordFields \nFSharpType.GetTupleElements \nGetTupleElements \nFSharpType.GetUnionCases \nGetUnionCases \nFSharpType.IsExceptionRepresentation \nIsExceptionRepresentation \nFSharpType.IsFunction \nIsFunction \nFSharpType.IsModule \nIsModule \nFSharpType.IsRecord \nIsRecord \nFSharpType.IsTuple \nIsTuple \nFSharpType.IsUnion \nIsUnion \nFSharpType.MakeFunctionType \nMakeFunctionType \nFSharpType.MakeStructTupleType \nMakeStructTupleType \nFSharpType.MakeStructTupleType \nMakeStructTupleType \nFSharpType.MakeTupleType \nMakeTupleType \nFSharpType.MakeTupleType \nMakeTupleType","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#GetExceptionFields","title":"FSharpType.GetExceptionFields","content":"FSharpType.GetExceptionFields \nGetExceptionFields \nReads all the fields from an F# exception declaration, in declaration order \nAssumes \u003Ccode\u003EexceptionType\u003C/code\u003E is an exception representation type. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#GetFunctionElements","title":"FSharpType.GetFunctionElements","content":"FSharpType.GetFunctionElements \nGetFunctionElements \nGets the domain and range types from an F# function type  or from the runtime type of a closure implementing an F# type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#GetRecordFields","title":"FSharpType.GetRecordFields","content":"FSharpType.GetRecordFields \nGetRecordFields \nReads all the fields from a record value, in declaration order \nAssumes the given input is a record value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#GetTupleElements","title":"FSharpType.GetTupleElements","content":"FSharpType.GetTupleElements \nGetTupleElements \nGets the tuple elements from the representation of an F# tuple type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#GetUnionCases","title":"FSharpType.GetUnionCases","content":"FSharpType.GetUnionCases \nGetUnionCases \nGets the cases of a union type. \nAssumes the given type is a union type. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#IsExceptionRepresentation","title":"FSharpType.IsExceptionRepresentation","content":"FSharpType.IsExceptionRepresentation \nIsExceptionRepresentation \nReturns true if the \u003Ccode\u003Etyp\u003C/code\u003E is a representation of an F# exception declaration","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#IsFunction","title":"FSharpType.IsFunction","content":"FSharpType.IsFunction \nIsFunction \nReturn true if the \u003Ccode\u003Etyp\u003C/code\u003E is a representation of an F# function type or the runtime type of a closure implementing an F# function type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#IsModule","title":"FSharpType.IsModule","content":"FSharpType.IsModule \nIsModule \nReturn true if the \u003Ccode\u003Etyp\u003C/code\u003E is a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.type\u0022\u003EType\u003C/a\u003E value corresponding to the compiled form of an F# module ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#IsRecord","title":"FSharpType.IsRecord","content":"FSharpType.IsRecord \nIsRecord \nReturn true if the \u003Ccode\u003Etyp\u003C/code\u003E is a representation of an F# record type ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#IsTuple","title":"FSharpType.IsTuple","content":"FSharpType.IsTuple \nIsTuple \nReturn true if the \u003Ccode\u003Etyp\u003C/code\u003E is a representation of an F# tuple type ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#IsUnion","title":"FSharpType.IsUnion","content":"FSharpType.IsUnion \nIsUnion \nReturns true if the \u003Ccode\u003Etyp\u003C/code\u003E is a representation of an F# union type or the runtime type of a value of that type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#MakeFunctionType","title":"FSharpType.MakeFunctionType","content":"FSharpType.MakeFunctionType \nMakeFunctionType \nReturns a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.type\u0022\u003EType\u003C/a\u003E representing the F# function type with the given domain and range","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#MakeStructTupleType","title":"FSharpType.MakeStructTupleType","content":"FSharpType.MakeStructTupleType \nMakeStructTupleType \nReturns a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.type\u0022\u003EType\u003C/a\u003E representing an F# struct tuple type with the given element types","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#MakeStructTupleType","title":"FSharpType.MakeStructTupleType","content":"FSharpType.MakeStructTupleType \nMakeStructTupleType \nReturns a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.type\u0022\u003EType\u003C/a\u003E representing an F# struct tuple type with the given element types","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#MakeTupleType","title":"FSharpType.MakeTupleType","content":"FSharpType.MakeTupleType \nMakeTupleType \nReturns a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.type\u0022\u003EType\u003C/a\u003E representing an F# tuple type with the given element types","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharptype.html#MakeTupleType","title":"FSharpType.MakeTupleType","content":"FSharpType.MakeTupleType \nMakeTupleType \nReturns a \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.type\u0022\u003EType\u003C/a\u003E representing an F# tuple type with the given element types","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html","title":"FSharpValue","content":"FSharpValue \n\u003Cpre\u003EContains operations associated with constructing and analyzing values associated with F# types\n such as records, unions and tuples.\u003C/pre\u003E \nFSharpValue.GetExceptionFields \nGetExceptionFields \nFSharpValue.GetRecordField \nGetRecordField \nFSharpValue.GetRecordFields \nGetRecordFields \nFSharpValue.GetTupleField \nGetTupleField \nFSharpValue.GetTupleFields \nGetTupleFields \nFSharpValue.GetUnionFields \nGetUnionFields \nFSharpValue.MakeFunction \nMakeFunction \nFSharpValue.MakeRecord \nMakeRecord \nFSharpValue.MakeTuple \nMakeTuple \nFSharpValue.MakeUnion \nMakeUnion \nFSharpValue.PreComputeRecordConstructor \nPreComputeRecordConstructor \nFSharpValue.PreComputeRecordConstructorInfo \nPreComputeRecordConstructorInfo \nFSharpValue.PreComputeRecordFieldReader \nPreComputeRecordFieldReader \nFSharpValue.PreComputeRecordReader \nPreComputeRecordReader \nFSharpValue.PreComputeTupleConstructor \nPreComputeTupleConstructor \nFSharpValue.PreComputeTupleConstructorInfo \nPreComputeTupleConstructorInfo \nFSharpValue.PreComputeTuplePropertyInfo \nPreComputeTuplePropertyInfo \nFSharpValue.PreComputeTupleReader \nPreComputeTupleReader \nFSharpValue.PreComputeUnionConstructor \nPreComputeUnionConstructor \nFSharpValue.PreComputeUnionConstructorInfo \nPreComputeUnionConstructorInfo \nFSharpValue.PreComputeUnionReader \nPreComputeUnionReader \nFSharpValue.PreComputeUnionTagMemberInfo \nPreComputeUnionTagMemberInfo \nFSharpValue.PreComputeUnionTagReader \nPreComputeUnionTagReader","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#GetExceptionFields","title":"FSharpValue.GetExceptionFields","content":"FSharpValue.GetExceptionFields \nGetExceptionFields \nReads all the fields from a value built using an instance of an F# exception declaration \nAssumes the given input is an F# exception value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#GetRecordField","title":"FSharpValue.GetRecordField","content":"FSharpValue.GetRecordField \nGetRecordField \nReads a field from a record value. \nAssumes the given input is a record value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#GetRecordFields","title":"FSharpValue.GetRecordFields","content":"FSharpValue.GetRecordFields \nGetRecordFields \nReads all the fields from a record value. \nAssumes the given input is a record value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#GetTupleField","title":"FSharpValue.GetTupleField","content":"FSharpValue.GetTupleField \nGetTupleField \nReads a field from a tuple value. \nAssumes the given input is a tuple value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#GetTupleFields","title":"FSharpValue.GetTupleFields","content":"FSharpValue.GetTupleFields \nGetTupleFields \nReads all fields from a tuple. \nAssumes the given input is a tuple value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#GetUnionFields","title":"FSharpValue.GetUnionFields","content":"FSharpValue.GetUnionFields \nGetUnionFields \nIdentify the union case and its fields for an object \nAssumes the given input is a union case value. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.\n\n If the type is not given, then the runtime type of the input object is used to identify the\n relevant union type. The type should always be given if the input object may be null. For example,\n option values may be represented using the \u0027null\u0027.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#MakeFunction","title":"FSharpValue.MakeFunction","content":"FSharpValue.MakeFunction \nMakeFunction \nBuilds a typed function from object from a dynamic function implementation","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#MakeRecord","title":"FSharpValue.MakeRecord","content":"FSharpValue.MakeRecord \nMakeRecord \nCreates an instance of a record type. \nAssumes the given input is a record type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#MakeTuple","title":"FSharpValue.MakeTuple","content":"FSharpValue.MakeTuple \nMakeTuple \nCreates an instance of a tuple type \nAssumes at least one element is given. If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#MakeUnion","title":"FSharpValue.MakeUnion","content":"FSharpValue.MakeUnion \nMakeUnion \nCreate a union case value.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeRecordConstructor","title":"FSharpValue.PreComputeRecordConstructor","content":"FSharpValue.PreComputeRecordConstructor \nPreComputeRecordConstructor \nPrecompute a function for constructing a record value.  \nAssumes the given type is a RecordType.\n If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeRecordConstructorInfo","title":"FSharpValue.PreComputeRecordConstructorInfo","content":"FSharpValue.PreComputeRecordConstructorInfo \nPreComputeRecordConstructorInfo \nGet a ConstructorInfo for a record type","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeRecordFieldReader","title":"FSharpValue.PreComputeRecordFieldReader","content":"FSharpValue.PreComputeRecordFieldReader \nPreComputeRecordFieldReader \nPrecompute a function for reading a particular field from a record.\n Assumes the given type is a RecordType with a field of the given name.\n If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation. \nUsing the computed function will typically be faster than executing a corresponding call to Value.GetInfo\n because the path executed by the computed function is optimized given the knowledge that it will be\n used to read values of the given type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeRecordReader","title":"FSharpValue.PreComputeRecordReader","content":"FSharpValue.PreComputeRecordReader \nPreComputeRecordReader \nPrecompute a function for reading all the fields from a record. The fields are returned in the\n same order as the fields reported by a call to Microsoft.FSharp.Reflection.Type.GetInfo for\n this type. \nAssumes the given type is a RecordType.\n If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation.\n\n Using the computed function will typically be faster than executing a corresponding call to Value.GetInfo\n because the path executed by the computed function is optimized given the knowledge that it will be\n used to read values of the given type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeTupleConstructor","title":"FSharpValue.PreComputeTupleConstructor","content":"FSharpValue.PreComputeTupleConstructor \nPreComputeTupleConstructor \nPrecompute a function for reading the values of a particular tuple type \nAssumes the given type is a TupleType.\n If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeTupleConstructorInfo","title":"FSharpValue.PreComputeTupleConstructorInfo","content":"FSharpValue.PreComputeTupleConstructorInfo \nPreComputeTupleConstructorInfo \nGets a method that constructs objects of the given tuple type.\n For small tuples, no additional type will be returned. \nFor large tuples, an additional type is returned indicating that\n a nested encoding has been used for the tuple type. In this case\n the suffix portion of the tuple type has the given type and an\n object of this type must be created and passed as the last argument\n to the ConstructorInfo. A recursive call to PreComputeTupleConstructorInfo\n can be used to determine the constructor for that the suffix type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeTuplePropertyInfo","title":"FSharpValue.PreComputeTuplePropertyInfo","content":"FSharpValue.PreComputeTuplePropertyInfo \nPreComputeTuplePropertyInfo \nGets information that indicates how to read a field of a tuple","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeTupleReader","title":"FSharpValue.PreComputeTupleReader","content":"FSharpValue.PreComputeTupleReader \nPreComputeTupleReader \nPrecompute a function for reading the values of a particular tuple type \nAssumes the given type is a TupleType.\n If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeUnionConstructor","title":"FSharpValue.PreComputeUnionConstructor","content":"FSharpValue.PreComputeUnionConstructor \nPreComputeUnionConstructor \nPrecompute a function for constructing a discriminated union value for a particular union case. ","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeUnionConstructorInfo","title":"FSharpValue.PreComputeUnionConstructorInfo","content":"FSharpValue.PreComputeUnionConstructorInfo \nPreComputeUnionConstructorInfo \nA method that constructs objects of the given case","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeUnionReader","title":"FSharpValue.PreComputeUnionReader","content":"FSharpValue.PreComputeUnionReader \nPreComputeUnionReader \nPrecompute a function for reading all the fields for a particular discriminator case of a union type \nUsing the computed function will typically be faster than executing a corresponding call to GetFields","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeUnionTagMemberInfo","title":"FSharpValue.PreComputeUnionTagMemberInfo","content":"FSharpValue.PreComputeUnionTagMemberInfo \nPreComputeUnionTagMemberInfo \nPrecompute a property or static method for reading an integer representing the case tag of a union type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-fsharpvalue.html#PreComputeUnionTagReader","title":"FSharpValue.PreComputeUnionTagReader","content":"FSharpValue.PreComputeUnionTagReader \nPreComputeUnionTagReader \nAssumes the given type is a union type.\n If not, \u003Ca href=\u0022https://learn.microsoft.com/dotnet/api/system.argumentexception\u0022\u003EArgumentException\u003C/a\u003E is raised during pre-computation. \nUsing the computed function is more efficient than calling GetUnionCase\n because the path executed by the computed function is optimized given the knowledge that it will be\n used to read values of the given type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-unioncaseinfo.html","title":"UnionCaseInfo","content":"UnionCaseInfo \nRepresents a case of a discriminated union type \nUnionCaseInfo.GetCustomAttributes \nGetCustomAttributes \nUnionCaseInfo.GetCustomAttributes \nGetCustomAttributes \nUnionCaseInfo.GetCustomAttributesData \nGetCustomAttributesData \nUnionCaseInfo.GetFields \nGetFields \nUnionCaseInfo.Name \nName \nUnionCaseInfo.DeclaringType \nDeclaringType \nUnionCaseInfo.Tag \nTag","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-unioncaseinfo.html#GetCustomAttributes","title":"UnionCaseInfo.GetCustomAttributes","content":"UnionCaseInfo.GetCustomAttributes \nGetCustomAttributes \nReturns the custom attributes associated with the case matching the given attribute type.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-unioncaseinfo.html#GetCustomAttributes","title":"UnionCaseInfo.GetCustomAttributes","content":"UnionCaseInfo.GetCustomAttributes \nGetCustomAttributes \nReturns the custom attributes associated with the case.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-unioncaseinfo.html#GetCustomAttributesData","title":"UnionCaseInfo.GetCustomAttributesData","content":"UnionCaseInfo.GetCustomAttributesData \nGetCustomAttributesData \nReturns the custom attributes data associated with the case.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-unioncaseinfo.html#GetFields","title":"UnionCaseInfo.GetFields","content":"UnionCaseInfo.GetFields \nGetFields \nThe fields associated with the case, represented by a PropertyInfo.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-unioncaseinfo.html#Name","title":"UnionCaseInfo.Name","content":"UnionCaseInfo.Name \nName \nThe name of the case.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-unioncaseinfo.html#DeclaringType","title":"UnionCaseInfo.DeclaringType","content":"UnionCaseInfo.DeclaringType \nDeclaringType \nThe type in which the case occurs.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/reference/fsharp-reflection-unioncaseinfo.html#Tag","title":"UnionCaseInfo.Tag","content":"UnionCaseInfo.Tag \nTag \nThe integer tag for the case.","headings":[],"type":"apiDocs"},{"uri":"https://fsharp.github.io/fsharp-core-docs/index.html","title":"F# Core Library Documentation\r\n","content":"F# Core Library Documentation\r\nThis site contains the documentation for the FSharp.Core library used in all F# code.\r\nFSharp.Core contains functionality for basic F# definitions, operations for collections such as lists, maps and sequences,\r\nand library functionality for quotations, reflections, events, asynchronous programming and native interoperability.\r\nThe following namespaces are available:\r\n\r\nFSharp.Core - Basic definitions of options, functions, operators, results and formatting.\r\nFSharp.Collections - Operations for collections such as lists, arrays, sets, maps and sequences. See also F# Collection Types in the F# Language Guide.\r\nFSharp.Control - Library functionality for asynchronous programming, events and agents. See also F# Asynchronous Programming in the F# Language Guide.\r\nFSharp.Linq - Library functionality for F# query syntax and interoperability with .NET Expressions. See also F# Query Expressions in the F# Language Guide.\r\nFSharp.Quotations - Library functionality for F# quotations. See also F# Code Quotations in the F# Language Guide.\r\nFSharp.Reflection - Library functionality for accessing additional information about F# types and F# values at runtime, augmenting that available through System.Reflection. See also F# Reflection in the F# Wiki Book.\r\nFSharp.NativeInterop - Basic functionality for native interopability. See also F# External Functions in the F# Language Guide.\r\nFSharp.Core.CompilerServices - Library functionality for supporting type providers and code generated by the F# compiler. See also F# Type Providers in the F# Language Guide.\r\n\r\nContributing to this documentation\r\nTo contribute to this documentation site and its content, please see the notes in the corresponding GitHub repository.\r\n","headings":["F# Core Library Documentation","Contributing to this documentation"],"type":"content"}]